{"status":{"description":"* [Kubernetes API](https:\/\/@@{Kubernetes_Master.address[0]}@@:6443)\n* [Kubernetes Dashboard](https:\/\/@@{Kubernetes_Master.address[0]}@@:30443)","source_mpi":"","state":"ACTIVE","is_cloned":false,"message_list":[],"resources":{"service_definition_list":[{"port_list":[],"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"9bb88f59-273f-4364-8946-9e75ae877fed","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"DAG","uuid":"9cc221bf-7046-4032-8167-44492812e616","child_tasks_local_reference_list":[{"kind":"app_task","name":"Dashboard","uuid":"0bee1065-c4f0-4e5f-859b-180585f17833"},{"kind":"app_task","name":"HELM","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47"},{"kind":"app_task","name":"MetricsServer","uuid":"fe0c0fe0-3cf8-4498-88c1-15f8c14a10c4"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Dashboard","uuid":"0bee1065-c4f0-4e5f-859b-180585f17833"},"edge_type":"user_defined","type":"","uuid":"d6df22f4-82c0-411f-a8ef-874bc4b4b9f4","to_task_reference":{"kind":"app_task","name":"HELM","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47"}},{"from_task_reference":{"kind":"app_task","name":"HELM","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47"},"edge_type":"user_defined","type":"","uuid":"8c216cc0-472a-41af-9a4b-a14cf363af94","to_task_reference":{"kind":"app_task","name":"MetricsServer","uuid":"fe0c0fe0-3cf8-4498-88c1-15f8c14a10c4"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"f33eac3f_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"0bee1065-c4f0-4e5f-859b-180585f17833","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/dashboard\necho '# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.7.\n#\n# Example usage: kubectl create -f <this_file>\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-full-access\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps\/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n      - name: kubernetes-dashboard\n        image: k8s.gcr.io\/kubernetes-dashboard-amd64:v1.10.1\n        ports:\n        - containerPort: 8443\n          protocol: TCP\n        args:\n          - --auto-generate-certificates\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http:\/\/my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: \/certs\n          # Create on-disk volume to store exec logs\n        - mountPath: \/tmp\n          name: tmp-volume\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: \/\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      - name: tmp-volume\n        emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 8443\n      nodePort: 30443\n  selector:\n    k8s-app: kubernetes-dashboard' | sudo tee \/etc\/kubernetes\/addons\/dashboard\/kubernetes-dashboard.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/dashboard\/kubernetes-dashboard.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Dashboard"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\nsudo mkdir \/etc\/kubernetes\/addons\/helm\necho \"#helm init --service-account helm\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: helm\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: helm\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: helm\n  namespace: kube-system\" | sudo tee \/etc\/kubernetes\/addons\/helm\/helm.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/helm\/helm.yaml\nhelm init --service-account helm\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"HELM"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fe0c0fe0-3cf8-4498-88c1-15f8c14a10c4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\nsudo mkdir \/etc\/kubernetes\/addons\/metricsserver\n\n\necho 'apiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: metrics-server:system:auth-delegator\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:auth-delegator\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: RoleBinding\nmetadata:\n  name: metrics-server-auth-reader\n  namespace: kube-system\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: extension-apiserver-authentication-reader\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: apiregistration.k8s.io\/v1beta1\nkind: APIService\nmetadata:\n  name: v1beta1.metrics.k8s.io\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  service:\n    name: metrics-server\n    namespace: kube-system\n  group: metrics.k8s.io\n  version: v1beta1\n  insecureSkipTLSVerify: true\n  groupPriorityMinimum: 100\n  versionPriority: 100\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: metrics-server-config\n  namespace: kube-system\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  NannyConfiguration: |-\n    apiVersion: nannyconfig\/v1alpha1\n    kind: NannyConfiguration\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: metrics-server-v0.3.3\n  namespace: kube-system\n  labels:\n    k8s-app: metrics-server\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    version: v0.3.3\nspec:\n  selector:\n    matchLabels:\n      k8s-app: metrics-server\n      version: v0.3.3\n  template:\n    metadata:\n      name: metrics-server\n      labels:\n        k8s-app: metrics-server\n        version: v0.3.3\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: metrics-server\n      containers:\n      - name: metrics-server\n        image: k8s.gcr.io\/metrics-server-amd64:v0.3.3\n        command:\n        - \/metrics-server\n        - --metric-resolution=30s\n        - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP\n        ports:\n        - containerPort: 443\n          name: https\n          protocol: TCP\n      - name: metrics-server-nanny\n        image: k8s.gcr.io\/addon-resizer:1.8.4\n        resources:\n          limits:\n            cpu: 100m\n            memory: 300Mi\n          requests:\n            cpu: 5m\n            memory: 50Mi\n        env:\n          - name: MY_POD_NAME\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.name\n          - name: MY_POD_NAMESPACE\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.namespace\n        volumeMounts:\n        - name: metrics-server-config-volume\n          mountPath: \/etc\/config\n        command:\n          - \/pod_nanny\n          - --config-dir=\/etc\/config\n          - --cpu=1\n          - --extra-cpu=0.5m\n          - --memory=40\n          - --extra-memory=4Mi\n          - --threshold=5\n          - --deployment=metrics-server-v0.3.3\n          - --container=metrics-server\n          - --poll-period=300000\n          - --estimator=exponential\n          - --minClusterSize=3\n      volumes:\n        - name: metrics-server-config-volume\n          configMap:\n            name: metrics-server-config\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/cluster-service: \"true\"\n    kubernetes.io\/name: \"Metrics-server\"\nspec:\n  selector:\n    k8s-app: metrics-server\n  ports:\n  - port: 443\n    protocol: TCP\n    targetPort: https\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  name: system:metrics-server\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  - nodes\n  - nodes\/stats\n  - namespaces\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"extensions\"\n  resources:\n  - deployments\n  verbs:\n  - get\n  - list\n  - update\n  - watch\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:metrics-server\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:metrics-server\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/metricsserver\/metricsserver.yaml\n  \nkubectl create -f \/etc\/kubernetes\/addons\/metricsserver\/metricsserver.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"MetricsServer"}],"description":"","message_list":[],"uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"f33eac3f_dag","uuid":"9cc221bf-7046-4032-8167-44492812e616"},"name":"a9639da1_runbook"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"899eed8a-d0f3-45d1-b7bf-b328b50a164c","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"DAG","uuid":"f4dac105-54f8-4cc3-a9f3-7be9d528f392","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"62a92d34_dag"}],"description":"","message_list":[],"uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"62a92d34_dag","uuid":"f4dac105-54f8-4cc3-a9f3-7be9d528f392"},"name":"8c4aa276_runbook"}},{"description":"System action for starting an application","message_list":[],"uuid":"a57be1ec-b415-48c9-b700-80765b813c3f","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"DAG","uuid":"c427eec4-fff1-4196-8528-70a83d0601a7","child_tasks_local_reference_list":[{"kind":"app_task","name":"Start","uuid":"162d0382-6ddc-4917-ad97-f812f13ee5ff"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"334b4484_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"162d0382-6ddc-4917-ad97-f812f13ee5ff","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\nsudo systemctl start etcd docker kubelet \nsudo systemctl enable etcd docker kubelet\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Start"}],"description":"","message_list":[],"uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"334b4484_dag","uuid":"c427eec4-fff1-4196-8528-70a83d0601a7"},"name":"daee30ae_runbook"}},{"description":"System action for stopping an application","message_list":[],"uuid":"f81aebc2-fb10-48fb-b0ab-fab5a9954966","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"DAG","uuid":"10b664ff-4adb-459b-baab-07c2e11f41d3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"9713c3d0_dag"}],"description":"","message_list":[],"uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"9713c3d0_dag","uuid":"10b664ff-4adb-459b-baab-07c2e11f41d3"},"name":"6407a345_runbook"}},{"description":"System action for restarting an application","message_list":[],"uuid":"50351a10-e9aa-4663-9e7f-2d080251cc00","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"DAG","uuid":"b8274bd9-61c0-40d1-8c1b-828170a970cc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"414912df_dag"}],"description":"","message_list":[],"uuid":"40ee969f-f126-492c-b412-779a5be20bb4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"414912df_dag","uuid":"b8274bd9-61c0-40d1-8c1b-828170a970cc"},"name":"d5c8316f_runbook"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"4f3f6775-a8d9-4f2a-a207-8f4eac834e85","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"DAG","uuid":"7f3cdbd2-86a8-4c8a-a8de-d290d32b5990","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Service_Element_Delete_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"67752dd8-ea03-4d1a-97f2-06df572f3b45"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"67752dd8-ea03-4d1a-97f2-06df572f3b45","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Service_Element_Delete_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7f3cdbd2-86a8-4c8a-a8de-d290d32b5990"},"name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}}],"message_list":[],"uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","state":"ACTIVE","depends_on_list":[],"editables":{},"tier":"","singleton":false,"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"78eb975a-d952-4bc6-9092-e7ea2970e7db","value":"","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{},"is_hidden":false,"type":"LOCAL","options":{},"name":"VERSION"}],"name":"Kubernetes_Master"},{"port_list":[],"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"7b3e13d6-1863-4751-88da-c9b647df824c","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"DAG","uuid":"93b11d1f-00df-4647-ab8e-a96f3f35ab6b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"4af7c45f_dag"}],"description":"","message_list":[],"uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"4af7c45f_dag","uuid":"93b11d1f-00df-4647-ab8e-a96f3f35ab6b"},"name":"7c6e4932_runbook"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"09fcf581-eb26-4924-a877-0afd2330803e","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"DAG","uuid":"e0b3d106-6d37-417d-bd91-90201de021ef","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"1e2c50bb_dag"}],"description":"","message_list":[],"uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"1e2c50bb_dag","uuid":"e0b3d106-6d37-417d-bd91-90201de021ef"},"name":"1d794193_runbook"}},{"description":"System action for starting an application","message_list":[],"uuid":"adba58b5-6b53-453d-b6e1-b755649596a0","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"DAG","uuid":"12841a5d-6df4-40f6-9a5c-a22918f70724","child_tasks_local_reference_list":[{"kind":"app_task","name":"Start","uuid":"b053a3c5-d3fd-4d6f-9d8c-3dd7837aa50a"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"970128c7_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"b053a3c5-d3fd-4d6f-9d8c-3dd7837aa50a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo systemctl start docker kubelet\nsudo systemctl enable docker kubelet"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Start"}],"description":"","message_list":[],"uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"970128c7_dag","uuid":"12841a5d-6df4-40f6-9a5c-a22918f70724"},"name":"884352cf_runbook"}},{"description":"System action for stopping an application","message_list":[],"uuid":"984aabc0-97e4-4408-8349-90ecad09494c","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"DAG","uuid":"91fe19df-bca4-49b4-809f-b8a9b597be19","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6c01dc28_dag"}],"description":"","message_list":[],"uuid":"20af27bd-2440-4645-8551-6a7529d1f842","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6c01dc28_dag","uuid":"91fe19df-bca4-49b4-809f-b8a9b597be19"},"name":"0cb172a7_runbook"}},{"description":"System action for restarting an application","message_list":[],"uuid":"0899fca1-f03c-4fc9-9133-9a68ade9a94a","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"DAG","uuid":"85684379-c83d-47a5-a70c-176864b02c40","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"1d66b5be_dag"}],"description":"","message_list":[],"uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"1d66b5be_dag","uuid":"85684379-c83d-47a5-a70c-176864b02c40"},"name":"3a6f587d_runbook"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"cbcc5f94-e87c-4f2b-98dd-fd2d45df53de","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"DAG","uuid":"7303a4c7-9320-409e-898d-fc88d64aa051","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Service_Element_Delete_045659a2_932c_49c8_9269_3a911f955962","uuid":"4f2a3d44-cef5-4962-ad6d-82ad6f75dfe1"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"4f2a3d44-cef5-4962-ad6d-82ad6f75dfe1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Service_Element_Delete_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"985c5d43-6410-4268-a023-3e73726f156b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7303a4c7-9320-409e-898d-fc88d64aa051"},"name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962"}}],"message_list":[],"uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","state":"ACTIVE","depends_on_list":[],"editables":{},"tier":"","singleton":false,"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"fa1f03a0-8833-4542-8679-66264df596e5","value":"","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{},"is_hidden":false,"type":"LOCAL","options":{},"name":"VERSION"}],"name":"Kubernetes_Worker"}],"substrate_definition_list":[{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"305a2886-a0ed-4d29-a101-74f79cfa5e95","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"941ae366-9e93-4b2e-a311-f82d763c1912","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Provision_07dace66_598d_4d29_a271_7965340bd074","uuid":"77ed9016-a7a3-48c1-b499-9403a4f74b8d"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074","uuid":"8979d662-3938-4159-8c7c-ed6044605a34"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Nutanix_Provision_07dace66_598d_4d29_a271_7965340bd074","uuid":"77ed9016-a7a3-48c1-b499-9403a4f74b8d"},"edge_type":"inherent","type":"","uuid":"9d3d1bb9-1b91-4379-9c22-cb1ae9cc8eac","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074","uuid":"8979d662-3938-4159-8c7c-ed6044605a34"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"PROVISION_NUTANIX","uuid":"77ed9016-a7a3-48c1-b499-9403a4f74b8d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","categories":"","availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"099dbe61-2c00-4964-9567-f547ec224e10"},"type":""}],"parent_reference":null,"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"serial_port_list":[],"gpu_list":[],"memory_size_mib":2048,"power_state":"ON","hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"type":"","boot_config":{"boot_device":{"type":"","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":1,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":2,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":3,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":4,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":5,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":6,"type":""}}}]}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Provision_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"8979d662-3938-4159-8c7c-ed6044605a34","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"cf107f76-14f3-4953-a53a-b3056b62048c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"941ae366-9e93-4b2e-a311-f82d763c1912"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for powering on an application","message_list":[],"uuid":"3030a6a0-bf28-42bb-81e4-435cba55f3ef","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"a3599f55-3569-454d-9987-4ce2d77a15bc","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_PowerOn_07dace66_598d_4d29_a271_7965340bd074","uuid":"2cfd9507-b764-40c3-89a8-d8c65f1ae028"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074","uuid":"45f5a4fb-faaa-4ab6-abe8-a0c4d58b6b27"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_PowerOn_07dace66_598d_4d29_a271_7965340bd074","uuid":"2cfd9507-b764-40c3-89a8-d8c65f1ae028"},"edge_type":"inherent","type":"","uuid":"749eec9c-615d-42c8-bd72-fe75d92bed76","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074","uuid":"45f5a4fb-faaa-4ab6-abe8-a0c4d58b6b27"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"VMOPERATION_NUTANIX","uuid":"2cfd9507-b764-40c3-89a8-d8c65f1ae028","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Operation_PowerOn_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"45f5a4fb-faaa-4ab6-abe8-a0c4d58b6b27","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"2a374ff2-a350-45d7-a50a-cb62e6ad1d91","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"a3599f55-3569-454d-9987-4ce2d77a15bc"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for restarting an application","message_list":[],"uuid":"9bdd9061-51ba-4a8a-b5bb-026703c677ec","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"5fd69551-1e44-4a98-aabf-f92aafa1c0c5","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_Restart_07dace66_598d_4d29_a271_7965340bd074","uuid":"edc9c701-beed-43ff-b0ac-ad4d37207eea"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074","uuid":"fb8d8ef3-efb5-4742-bb49-5cf70e34dfd9"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_Restart_07dace66_598d_4d29_a271_7965340bd074","uuid":"edc9c701-beed-43ff-b0ac-ad4d37207eea"},"edge_type":"inherent","type":"","uuid":"971ed317-8c9d-4bcd-835b-84496edbfde5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074","uuid":"fb8d8ef3-efb5-4742-bb49-5cf70e34dfd9"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"VMOPERATION_NUTANIX","uuid":"edc9c701-beed-43ff-b0ac-ad4d37207eea","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Operation_Restart_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"fb8d8ef3-efb5-4742-bb49-5cf70e34dfd9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AHV_Centos_K8SM_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"5ac1a255-9680-4498-923d-1c988a73c212","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"5fd69551-1e44-4a98-aabf-f92aafa1c0c5"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for suspending an application","message_list":[],"uuid":"3068a7fa-aeb6-4e3b-8a14-92b217ce8bcc","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"3e198cc1-0bf9-4e5e-a76e-8c49027c07bd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"16fe99bd-d895-40f0-b9c5-824a47759f54","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"3e198cc1-0bf9-4e5e-a76e-8c49027c07bd"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for modifying an application","message_list":[],"uuid":"20b23d6b-2795-43cc-a5f8-64288358fd4c","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"d7be5f41-2ae3-48e2-93c8-3ff522e3162b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"d4b5a7de-8e51-4f1c-aa85-660d64a373dd","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"d7be5f41-2ae3-48e2-93c8-3ff522e3162b"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for powering off an application","message_list":[],"uuid":"d25cef69-e48f-4b3b-a239-ec2495f653ce","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"a36f8a64-b474-4a5b-b6fa-079fa3106d07","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_PowerOff_07dace66_598d_4d29_a271_7965340bd074","uuid":"0e2f69e8-e592-4a07-8973-405642ddad8d"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"VMOPERATION_NUTANIX","uuid":"0e2f69e8-e592-4a07-8973-405642ddad8d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Operation_PowerOff_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"6e960390-4097-4b45-980c-d5dbec246e6b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"a36f8a64-b474-4a5b-b6fa-079fa3106d07"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"3fcf3679-f92e-44c1-9d10-dcf7e379c21c","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"b8b30be4-8ef6-45a0-a31a-b5067ae65407","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Delete_07dace66_598d_4d29_a271_7965340bd074","uuid":"fb65f26e-dc8d-4c21-8a68-0d8b229260be"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DELETE_NUTANIX","uuid":"fb65f26e-dc8d-4c21-8a68-0d8b229260be","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Delete_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"854e01da-37ea-4910-bcbc-4e93675a13cc","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"b8b30be4-8ef6-45a0-a31a-b5067ae65407"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"5267d8fe-3c65-4450-ba87-6029ab0994da","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"DAG","uuid":"dcbcd04b-d079-4165-8915-8127a0c47034","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_07dace66_598d_4d29_a271_7965340bd074","uuid":"bba968a9-f2d0-421e-ad5e-b2ba64ad2e6c"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"bba968a9-f2d0-421e-ad5e-b2ba64ad2e6c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"2dac9b64-0e96-4618-aeb2-dfca93f96f39","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"dcbcd04b-d079-4165-8915-8127a0c47034"},"name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074"}}],"message_list":[],"uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"resources":{"nic_list":{"0":{"subnet_reference":true}},"serial_port_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"memory_size_mib":true,"guest_customization":true,"disk_list":{"1":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"0":{"device_properties":{"disk_address":{}},"disk_size_mib":true},"3":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"2":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"5":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"4":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"6":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true}}},"name":true,"categories":true}},"os_type":"Linux","type":"AHV_VM","create_spec":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","categories":"","availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"099dbe61-2c00-4964-9567-f547ec224e10"},"type":""}],"parent_reference":null,"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"serial_port_list":[],"gpu_list":[],"memory_size_mib":2048,"power_state":"ON","hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"type":"","boot_config":{"boot_device":{"type":"","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":1,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":2,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":3,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":4,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":5,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":6,"type":""}}}]}},"variable_list":[],"name":"AHV_Centos_K8SM"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"fbc77294-33bf-4f5e-8ee4-e2d55bdf04c0","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"5181a4f6-c41c-449a-88ac-7bf961bba598","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Provision_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"1aa4c128-6450-4742-858b-10820e14fed7"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"5b89030d-2eed-4d1e-9fe1-11176fea5069"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Nutanix_Provision_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"1aa4c128-6450-4742-858b-10820e14fed7"},"edge_type":"inherent","type":"","uuid":"ef32670b-d878-41d0-8127-8e0694ad0d5d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"5b89030d-2eed-4d1e-9fe1-11176fea5069"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"PROVISION_NUTANIX","uuid":"1aa4c128-6450-4742-858b-10820e14fed7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","categories":"","availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"099dbe61-2c00-4964-9567-f547ec224e10"},"type":""}],"parent_reference":null,"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"serial_port_list":[],"gpu_list":[],"memory_size_mib":6144,"power_state":"ON","hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"type":"","boot_config":{"boot_device":{"type":"","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":1,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":2,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":3,"type":""}}}]}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Provision_7acd857f_e4f1_4490_92db_48bfd41123ec"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"5b89030d-2eed-4d1e-9fe1-11176fea5069","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec"}],"description":"","message_list":[],"uuid":"e9b73ef7-f8cf-4790-983f-d989b7783f9c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5181a4f6-c41c-449a-88ac-7bf961bba598"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for powering on an application","message_list":[],"uuid":"0f767944-6451-45f4-ad4d-1f8c4e968140","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"c41a665e-4af2-42cc-a46f-e5e5358f2c7b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_PowerOn_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"bc151a5d-410e-4828-89f6-d3950b1cf497"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"744532ad-62c9-4400-b78b-7dfb562f514f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_PowerOn_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"bc151a5d-410e-4828-89f6-d3950b1cf497"},"edge_type":"inherent","type":"","uuid":"cc82f8b7-da83-4f67-b2c5-52d113153847","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"744532ad-62c9-4400-b78b-7dfb562f514f"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"VMOPERATION_NUTANIX","uuid":"bc151a5d-410e-4828-89f6-d3950b1cf497","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Operation_PowerOn_7acd857f_e4f1_4490_92db_48bfd41123ec"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"744532ad-62c9-4400-b78b-7dfb562f514f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec"}],"description":"","message_list":[],"uuid":"cc1a50b1-bcee-4730-b74d-587af4540088","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"c41a665e-4af2-42cc-a46f-e5e5358f2c7b"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for restarting an application","message_list":[],"uuid":"620513a5-c5a0-404f-9767-5a7e3c2ebb09","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"4ec31855-aecd-4657-ab62-1483be0825a0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_Restart_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"a82982da-e10d-4999-9318-994191e0977e"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"b9e8a37a-7037-453f-ade0-01eb21b2f087"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_Restart_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"a82982da-e10d-4999-9318-994191e0977e"},"edge_type":"inherent","type":"","uuid":"a607c963-40e2-4bdf-9083-396a608b0c1f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"b9e8a37a-7037-453f-ade0-01eb21b2f087"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"VMOPERATION_NUTANIX","uuid":"a82982da-e10d-4999-9318-994191e0977e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Operation_Restart_7acd857f_e4f1_4490_92db_48bfd41123ec"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"b9e8a37a-7037-453f-ade0-01eb21b2f087","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AHV_Centos_K8SW_7acd857f_e4f1_4490_92db_48bfd41123ec"}],"description":"","message_list":[],"uuid":"b9f3560c-801b-42e1-8c5e-0d1dad1f8171","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"4ec31855-aecd-4657-ab62-1483be0825a0"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for suspending an application","message_list":[],"uuid":"c48214de-0709-4858-a367-5b9791820269","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"aaa2f876-b341-4132-9a9f-a037334edf36","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}],"description":"","message_list":[],"uuid":"9e1413d0-5ad1-426b-bd37-8a8a0a06278e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"aaa2f876-b341-4132-9a9f-a037334edf36"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for modifying an application","message_list":[],"uuid":"094ef308-b2a8-428d-aa56-6f3e0883d4e0","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"05b20c6d-387d-4782-84c6-03b9378f17ea","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}],"description":"","message_list":[],"uuid":"d4e1007d-3ef4-45ad-ac47-1c0c9ec1429c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"05b20c6d-387d-4782-84c6-03b9378f17ea"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for powering off an application","message_list":[],"uuid":"d942d0e9-3fc4-4145-941c-75e45bba84b3","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"a0face63-6d79-449f-98f9-65940ca3b7dc","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Operation_PowerOff_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"f93151ef-dc61-48e9-9a88-9113e96fa7c9"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"VMOPERATION_NUTANIX","uuid":"f93151ef-dc61-48e9-9a88-9113e96fa7c9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Operation_PowerOff_7acd857f_e4f1_4490_92db_48bfd41123ec"}],"description":"","message_list":[],"uuid":"1cbc3063-ea08-4443-abfd-c3737e4b89fa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"a0face63-6d79-449f-98f9-65940ca3b7dc"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"6a51b146-93fa-407a-b552-1ff5691183c0","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"07bdbca7-cb06-42ef-a1dd-75d0adbffa74","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Nutanix_Delete_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"d859978f-4098-4f3f-a898-2a26770b39eb"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DELETE_NUTANIX","uuid":"d859978f-4098-4f3f-a898-2a26770b39eb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Nutanix_Delete_7acd857f_e4f1_4490_92db_48bfd41123ec"}],"description":"","message_list":[],"uuid":"dbee90b2-b491-4587-8ebd-905d0585ebdd","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"07bdbca7-cb06-42ef-a1dd-75d0adbffa74"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"1722880e-c40f-4bc5-9603-d5dd626a7d86","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"DAG","uuid":"b362b9ee-ed8f-40ab-a809-a73e4aa8cd61","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_7acd857f_e4f1_4490_92db_48bfd41123ec","uuid":"3c373280-597a-46a8-9c2d-630deb31ca68"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"3c373280-597a-46a8-9c2d-630deb31ca68","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_7acd857f_e4f1_4490_92db_48bfd41123ec"}],"description":"","message_list":[],"uuid":"02d17512-271d-40c1-86b1-221509483615","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"b362b9ee-ed8f-40ab-a809-a73e4aa8cd61"},"name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}}],"message_list":[],"uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"resources":{"nic_list":{"0":{"subnet_reference":true}},"serial_port_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"memory_size_mib":true,"guest_customization":true,"disk_list":{"1":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"0":{"device_properties":{"disk_address":{}},"disk_size_mib":true},"3":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"2":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true}}},"name":true,"categories":true}},"os_type":"Linux","type":"AHV_VM","create_spec":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","categories":"","availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"099dbe61-2c00-4964-9567-f547ec224e10"},"type":""}],"parent_reference":null,"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"serial_port_list":[],"gpu_list":[],"memory_size_mib":6144,"power_state":"ON","hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"type":"","boot_config":{"boot_device":{"type":"","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":1,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":2,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":3,"type":""}}}]}},"variable_list":[],"name":"AHV_Centos_K8SW"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"76b433cb-76f4-485d-8f09-f57d28b649d4","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"282cdf4e-ac91-4d73-a72d-269d62b64752","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Provision_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"1d8a91ac-b1fb-4495-8a30-301993dbafd5"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"24b9539c-e3ab-4f8b-a550-a13c576ab651"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Aws_Provision_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"1d8a91ac-b1fb-4495-8a30-301993dbafd5"},"edge_type":"inherent","type":"","uuid":"fcb9e96a-9d58-4605-ace1-0eb8f7c5bb4b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"24b9539c-e3ab-4f8b-a550-a13c576ab651"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"PROVISION_AWS_VM","uuid":"1d8a91ac-b1fb-4495-8a30-301993dbafd5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"type":"PROVISION_AWS_VM","cluster_reference":null,"resources":{"instance_profile_name":"kubernetes-ebs-volumes","instance_type":"t2.medium","subnet_id":"subnet-c599a5ef","key_name":"calm-blueprints","region":"us-east-1","availability_zone":"us-east-1a","instance_initiated_shutdown_behavior":"","user_data":"","image_id":"ami-0ccec2041ac92b449","state":"RUNNING","security_group_list":[{"type":"","security_group_id":"sg-3b938f40"}],"block_device_map":{"data_disk_list":[{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdb","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdc","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdd","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sde","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sdf","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sdg","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}],"type":"","root_disk":{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sda1","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}},"private_ip_address":"","vpc_id":"vpc-ffd54d98","tag_list":[{"type":"","value":"true","key":"kubernetes.io\/cluster\/@@{KUBE_CLUSTER_NAME}@@"}],"type":"","account_uuid":"8c2e0a6b-620a-c62a-c3f4-e58b101dfd0d","associate_public_ip_address":true}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Provision_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"24b9539c-e3ab-4f8b-a550-a13c576ab651","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"f339ef9a-5f78-45d2-9ed7-16ed727014af","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"282cdf4e-ac91-4d73-a72d-269d62b64752"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for powering on an application","message_list":[],"uuid":"ecef7469-61c1-434e-afa3-ff6af4979ff5","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"3005ccd1-6edd-46e0-92cc-8ff26a8d90c4","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Operation_PowerOn_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e793c59b-3f94-43ad-8309-6238b086d7a1"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"72eb6488-0a2f-4303-a869-197085f2ed04"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Aws_Operation_PowerOn_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e793c59b-3f94-43ad-8309-6238b086d7a1"},"edge_type":"inherent","type":"","uuid":"8b815e51-4202-4c68-940c-cdaa7f184c18","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"72eb6488-0a2f-4303-a869-197085f2ed04"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"VMOPERATION_AWS_VM","uuid":"e793c59b-3f94-43ad-8309-6238b086d7a1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Operation_PowerOn_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"72eb6488-0a2f-4303-a869-197085f2ed04","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"b28a41b5-ea80-4bcd-b2b7-9fc4432853b6","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"3005ccd1-6edd-46e0-92cc-8ff26a8d90c4"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for restarting an application","message_list":[],"uuid":"e3ee6f3c-4f76-441f-97d3-3c3e88e16217","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"a9a76e4c-54e1-408d-84f9-a5f1be1088d4","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Operation_Restart_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"2daabf64-b996-4b46-ab08-7df488dda56c"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"9d4602b1-dfec-4279-8626-e01e29fb9615"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Aws_Operation_Restart_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"2daabf64-b996-4b46-ab08-7df488dda56c"},"edge_type":"inherent","type":"","uuid":"29350f5a-a114-4a2c-a5e1-b94f14020039","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"9d4602b1-dfec-4279-8626-e01e29fb9615"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"VMOPERATION_AWS_VM","uuid":"2daabf64-b996-4b46-ab08-7df488dda56c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Operation_Restart_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"9d4602b1-dfec-4279-8626-e01e29fb9615","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AWS_Centos_K8SM_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"cb7b9ecd-3057-4bac-a022-82f8fa95bca7","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"a9a76e4c-54e1-408d-84f9-a5f1be1088d4"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for suspending an application","message_list":[],"uuid":"b964eb47-a1b3-4a0c-99b8-3af9ea0b9a57","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"4c89f07b-9b2e-4fd6-abb0-5d4f31bdc617","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"9daab09c-4a19-4ca2-91b8-0260577a0753","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"4c89f07b-9b2e-4fd6-abb0-5d4f31bdc617"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for modifying an application","message_list":[],"uuid":"4233d8c1-80d7-4bba-9b51-a3360b84d01b","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"d9bd761b-4f96-4993-af65-ad5e4c6d5c9c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"b510b814-cb50-4869-9e72-40fe7c790d3d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"d9bd761b-4f96-4993-af65-ad5e4c6d5c9c"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for powering off an application","message_list":[],"uuid":"6db30622-9dd8-4b3f-9f55-0817296d00d6","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"c068d31c-67ed-4566-8ccb-bbdc98dc1d48","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Operation_PowerOff_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e998896f-9004-40ca-a12a-ce487f38d755"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"VMOPERATION_AWS_VM","uuid":"e998896f-9004-40ca-a12a-ce487f38d755","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Operation_PowerOff_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"40413f8e-7fea-4257-9d12-b44202526b69","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"c068d31c-67ed-4566-8ccb-bbdc98dc1d48"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"9308dd85-9802-4177-9e50-6d622275fd1e","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"a1874b14-fcc6-4727-810c-37e44d6efdfd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Delete_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"671f4004-155b-4776-b848-ff2688b603fd"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DELETE_AWS_VM","uuid":"671f4004-155b-4776-b848-ff2688b603fd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Delete_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"7ff106d6-4bc2-4197-ba14-4704842f88b4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"a1874b14-fcc6-4727-810c-37e44d6efdfd"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"4008f51f-7b63-4715-bf31-0af30f55b83b","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"DAG","uuid":"0c7cdf64-4d2c-4d28-8670-6459830cf0c6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"edd9e58a-d76e-417e-8f11-c33daac135ec"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"edd9e58a-d76e-417e-8f11-c33daac135ec","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"61b0ed56-6de5-429e-af3e-829afbc0aab5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"0c7cdf64-4d2c-4d28-8670-6459830cf0c6"},"name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}}],"message_list":[],"uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{public_ip_address}@@","delay_secs":"0","connection_port":22},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"name":true,"resources":{"instance_profile_name":true,"availability_zone":true,"subnet_id":true,"key_name":true,"region":true,"user_data":true,"image_id":true,"instance_type":true,"security_group_list":true,"block_device_map":{"data_disk_list":{"1":{"size_gb":true},"0":{"size_gb":true},"3":{"size_gb":true},"2":{"size_gb":true},"5":{"size_gb":true},"4":{"size_gb":true}},"root_disk":{"size_gb":true}},"associate_public_ip_address":true,"vpc_id":true,"tag_list":true}}},"os_type":"Linux","type":"AWS_VM","create_spec":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"type":"PROVISION_AWS_VM","cluster_reference":null,"resources":{"instance_profile_name":"kubernetes-ebs-volumes","instance_type":"t2.medium","subnet_id":"subnet-c599a5ef","key_name":"calm-blueprints","region":"us-east-1","availability_zone":"us-east-1a","instance_initiated_shutdown_behavior":"","user_data":"","image_id":"ami-0ccec2041ac92b449","state":"RUNNING","security_group_list":[{"type":"","security_group_id":"sg-3b938f40"}],"block_device_map":{"data_disk_list":[{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdb","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdc","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdd","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sde","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sdf","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sdg","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}],"type":"","root_disk":{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sda1","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}},"private_ip_address":"","vpc_id":"vpc-ffd54d98","tag_list":[{"type":"","value":"true","key":"kubernetes.io\/cluster\/@@{KUBE_CLUSTER_NAME}@@"}],"type":"","account_uuid":"8c2e0a6b-620a-c62a-c3f4-e58b101dfd0d","associate_public_ip_address":true}},"variable_list":[],"name":"AWS_Centos_K8SM"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"ffb4251a-f9e7-43cb-8116-6aeff88eee8f","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"aecb67b0-8ff4-4670-9e13-d556b63cbedb","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Provision_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"f520ad47-5a95-435c-ba54-1d64ca997f18"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"8077c571-7911-4996-b495-9d47e1ccc036"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Aws_Provision_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"f520ad47-5a95-435c-ba54-1d64ca997f18"},"edge_type":"inherent","type":"","uuid":"809e79d1-5e3c-4c93-bb78-c30ded3e25d8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"8077c571-7911-4996-b495-9d47e1ccc036"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"PROVISION_AWS_VM","uuid":"f520ad47-5a95-435c-ba54-1d64ca997f18","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"type":"PROVISION_AWS_VM","cluster_reference":null,"resources":{"instance_profile_name":"kubernetes-ebs-volumes","instance_type":"t2.large","subnet_id":"subnet-9d1085b1","key_name":"calm-blueprints","region":"us-east-1","availability_zone":"us-east-1a","instance_initiated_shutdown_behavior":"","user_data":"","image_id":"ami-0ccec2041ac92b449","state":"RUNNING","security_group_list":[{"type":"","security_group_id":"sg-3b938f40"}],"block_device_map":{"data_disk_list":[{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdb","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdc","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdd","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}],"type":"","root_disk":{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sda1","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}},"private_ip_address":"","vpc_id":"vpc-ffd54d98","tag_list":[{"type":"","value":"owned","key":"kubernetes.io\/cluster\/@@{KUBE_CLUSTER_NAME}@@"}],"type":"","account_uuid":"8c2e0a6b-620a-c62a-c3f4-e58b101dfd0d","associate_public_ip_address":true}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Provision_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"8077c571-7911-4996-b495-9d47e1ccc036","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"35da4f86-8999-40d3-a6ce-0769311e3d6c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"aecb67b0-8ff4-4670-9e13-d556b63cbedb"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for powering on an application","message_list":[],"uuid":"1dc90afd-1286-4d92-808c-6efbf6e65926","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"59ee9365-e1b7-458b-b211-450b4f64a9fa","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Operation_PowerOn_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"67d46fd4-c1c5-4741-b63b-1cb002695fb6"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"9107d87a-6951-47bc-a863-016c94ca8713"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Aws_Operation_PowerOn_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"67d46fd4-c1c5-4741-b63b-1cb002695fb6"},"edge_type":"inherent","type":"","uuid":"49841dcd-5e04-49e9-a9ce-5e804bfb9969","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"9107d87a-6951-47bc-a863-016c94ca8713"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"VMOPERATION_AWS_VM","uuid":"67d46fd4-c1c5-4741-b63b-1cb002695fb6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Operation_PowerOn_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"9107d87a-6951-47bc-a863-016c94ca8713","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"9edfccae-1df1-4b73-8e8e-bbbdc3ea536c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"59ee9365-e1b7-458b-b211-450b4f64a9fa"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for restarting an application","message_list":[],"uuid":"2232422c-66d6-4933-8f71-fcf55ca97e4f","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"4f253c99-69eb-4164-b237-7b220bb78936","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Operation_Restart_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"c3324fd2-b531-4799-87da-49001d79c5aa"},{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"6fb61ce6-65c6-4781-8e28-8fd83d498a37"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Aws_Operation_Restart_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"c3324fd2-b531-4799-87da-49001d79c5aa"},"edge_type":"inherent","type":"","uuid":"4dfd81d0-dc27-415d-b104-2812e652dd23","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"6fb61ce6-65c6-4781-8e28-8fd83d498a37"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"VMOPERATION_AWS_VM","uuid":"c3324fd2-b531-4799-87da-49001d79c5aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Operation_Restart_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"6fb61ce6-65c6-4781-8e28-8fd83d498a37","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_AWS_Centos_K8SW_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"75586467-60ad-4ef4-a18e-982f88fda933","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"4f253c99-69eb-4164-b237-7b220bb78936"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for suspending an application","message_list":[],"uuid":"7e224e3e-ed75-4352-9310-a8a499c47088","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"14f00de5-bdb2-46b8-a4e5-5f1eaf2010a2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"ad6b97fa-52f3-4807-a57e-c515d5f10473","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"14f00de5-bdb2-46b8-a4e5-5f1eaf2010a2"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for modifying an application","message_list":[],"uuid":"01d16aaf-3374-48b2-b339-a52d5246ab9c","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"db5cb252-cfc4-4b32-b7d8-5d8cc76b1fa2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"326f871e-98f5-4b57-90be-9c993338d5d4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"db5cb252-cfc4-4b32-b7d8-5d8cc76b1fa2"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for powering off an application","message_list":[],"uuid":"0b4cb70c-6180-4a0e-ba8d-694a08d7d5dd","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"06667836-5faf-4f5e-9baf-dd763f46637f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Operation_PowerOff_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"7b791078-35ac-4ea4-b8f1-81f840e1bd2d"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"VMOPERATION_AWS_VM","uuid":"7b791078-35ac-4ea4-b8f1-81f840e1bd2d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Operation_PowerOff_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"733c5ca8-74c8-42e1-9387-e27017bdffb8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"06667836-5faf-4f5e-9baf-dd763f46637f"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"390cc95c-84cc-40cf-9b5e-53db7afef2ba","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"10685b6d-78bc-46b3-89bc-4c1c15fdb880","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Aws_Delete_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"07fd6846-5f3e-475c-940c-3434f6bf48dc"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DELETE_AWS_VM","uuid":"07fd6846-5f3e-475c-940c-3434f6bf48dc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Aws_Delete_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"f1cfff66-1af0-48f5-8c96-29574130d056","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"10685b6d-78bc-46b3-89bc-4c1c15fdb880"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"e7a37927-2e23-4b0e-ae32-961ea612b491","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"DAG","uuid":"54eb3afe-10d4-475e-b751-965cfd29249b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"ce0f5897-af0c-4c7d-8607-0089d1334c58"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"ce0f5897-af0c-4c7d-8607-0089d1334c58","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"b510f63b-6cb0-450a-9d85-92f8db044bc0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"54eb3afe-10d4-475e-b751-965cfd29249b"},"name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}}],"message_list":[],"uuid":"4452b5c1-19a7-4544-80e1-683064b97872","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{public_ip_address}@@","delay_secs":"0","connection_port":22},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"name":true,"resources":{"instance_profile_name":true,"availability_zone":true,"subnet_id":true,"key_name":true,"region":true,"user_data":true,"image_id":true,"instance_type":true,"security_group_list":true,"block_device_map":{"data_disk_list":{"1":{"size_gb":true},"0":{"size_gb":true},"2":{"size_gb":true}},"root_disk":{"size_gb":true}},"associate_public_ip_address":true,"vpc_id":true,"tag_list":true}}},"os_type":"Linux","type":"AWS_VM","create_spec":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"type":"PROVISION_AWS_VM","cluster_reference":null,"resources":{"instance_profile_name":"kubernetes-ebs-volumes","instance_type":"t2.large","subnet_id":"subnet-9d1085b1","key_name":"calm-blueprints","region":"us-east-1","availability_zone":"us-east-1a","instance_initiated_shutdown_behavior":"","user_data":"","image_id":"ami-0ccec2041ac92b449","state":"RUNNING","security_group_list":[{"type":"","security_group_id":"sg-3b938f40"}],"block_device_map":{"data_disk_list":[{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdb","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdc","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdd","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}],"type":"","root_disk":{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sda1","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}},"private_ip_address":"","vpc_id":"vpc-ffd54d98","tag_list":[{"type":"","value":"owned","key":"kubernetes.io\/cluster\/@@{KUBE_CLUSTER_NAME}@@"}],"type":"","account_uuid":"8c2e0a6b-620a-c62a-c3f4-e58b101dfd0d","associate_public_ip_address":true}},"variable_list":[],"name":"AWS_Centos_K8SW"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"0e3119a6-03ee-4797-af21-2409cd0e13f3","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"c69e4154-b851-49e8-bbaa-e4819c6ad248","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Provision_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"bd66259e-bb2e-47d7-8723-063d6897192d"},{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"13f21684-5844-47bc-94be-a057580a9f80"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Gcp_Provision_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"bd66259e-bb2e-47d7-8723-063d6897192d"},"edge_type":"inherent","type":"","uuid":"2c2c3956-ac2c-439b-b16c-d5537026ab06","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"13f21684-5844-47bc-94be-a057580a9f80"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"PROVISION_GCP_VM","uuid":"bd66259e-bb2e-47d7-8723-063d6897192d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"PROVISION_GCP_VM","resources":{"labels":[],"machineType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/machineTypes\/n1-highcpu-2","description":"","zone":"us-central1-c","tags":{"items":[],"type":"","fingerprint":""},"guestCustomization":{"type":"","sysprep":"","startupScript":""},"labelFingerprint":"","disks":[{"diskEncryptionKey":{"rawKey":"","type":""},"deviceName":"","initializeParams":{"sourceImageEncryptionKey":{"rawKey":"","type":""},"diskName":"","diskType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","diskSizeGb":10,"sourceImage":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/images\/centos-7","type":""},"autoDelete":true,"boot":true,"source":"","mode":"","interface":"","disk_type":"PERSISTENT","type":""}],"metadata":{"items":[],"type":"","fingerprint":""},"sshKeys":["centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMGAS\/K0Mb\/uwFXwD+hkjguy7VMZk2hpuhwPl9FUZwVBrURf\/i9QMJ5\/paPEZixu8VlRx7Inu4iun7rQfrnfeIYInmBwspXHYiTK3oHJAgZnrAHVEf1p6YaxLINlT1NI5yOAGPRWW6of8rBDBH1ObwU2+wcSx\/1H0uIs3aZNLufr+Rh628ACxAum2Gt8AVRj6ua2BPFyt5VTdclyysAmeh1AiixNgOZXOz6y\/i4TbzpY78I3isuKpxsUeXX6jxEMQol406jHDUF6njEOPIQG2zVZ3QJlTG9OlN+NiyZG9WkZz0VG\/6M8ixxIHHI2dNwUbBFv2HUu+8X9LTLFq2O7KjX9Hp7uZKBAySHA3eKaKHIp2bZuU1bT5PRPkggngX86xg+T+OMNnutbAiMnRJ8+FvD5So+5TIx4b9GgxAxure3x2yRPT9lOiQOB+CVpJPxR0Rn9bOI+wiPnD0kAGvK\/fHT+pqL4PM+hTnJtp9rrCRzIQApBx1263jEcYffhW2epZQRO+he5CMawFJ5TBe08om2AaDJ8GQdrpF6YA3W8DzHbmL3DPVVHdmqPLn10o+LX4gv5SdIIDVGdjKOc1BCnLTRmM28d5+sLDt\/M+kvcQgf0y0yDjMVjGECZkt39hbm4ELMHzZtzYLmHNhBZxRqHeJ7qFTuv1kx88OW3Xc5mbBNQ== centos@nutanix.com\n"],"minCpuPlatform":"","scheduling":{"automaticRestart":true,"type":"","preemptible":false,"onHostMaintenance":"TERMINATE"},"canIpForward":false,"blankDisks":[{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk1-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk2-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk3-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk4-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk5-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk6-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true}],"networkInterfaces":[{"aliasIpRanges":[],"network":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/networks\/default","accessConfigs":[{"config_type":"ONE_TO_ONE_NAT","type":"","name":"k8sc-acn-@@{calm_array_index}@@-@@{calm_time}@@","natIP":""}],"networkIP":"","subnetwork":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/regions\/us-central1\/subnetworks\/default","type":"","associatePublicIP":true}],"type":"","account_uuid":"84213a31-4fe8-7e39-3799-e093e5d0dc2e","serviceAccounts":[{"scopes":["https:\/\/www.googleapis.com\/auth\/cloud-platform"],"type":"","email":"108048128720-compute@developer.gserviceaccount.com"}],"name":"k8sm-@@{calm_array_index}@@-@@{calm_time}@@"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Provision_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"13f21684-5844-47bc-94be-a057580a9f80","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"d64e4d0f-1705-4336-a84a-35cd583d5213","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"c69e4154-b851-49e8-bbaa-e4819c6ad248"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for powering on an application","message_list":[],"uuid":"be453978-532a-4077-8be3-1366ec022e4e","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"167ff643-8068-43e5-a3c6-edd629bc92c5","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_PowerOn_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"68887b7d-da47-489e-a8cd-755c21b2b7bc"},{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"172865df-8c9c-41db-9d65-a9a4cb2623b0"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_PowerOn_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"68887b7d-da47-489e-a8cd-755c21b2b7bc"},"edge_type":"inherent","type":"","uuid":"8869cf08-c296-4c39-9512-76e162883771","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"172865df-8c9c-41db-9d65-a9a4cb2623b0"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"VMOPERATION_GCP_VM","uuid":"68887b7d-da47-489e-a8cd-755c21b2b7bc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Operation_PowerOn_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"172865df-8c9c-41db-9d65-a9a4cb2623b0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"bf67dfe4-7105-49a0-a82d-48911564bfc9","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"167ff643-8068-43e5-a3c6-edd629bc92c5"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for restarting an application","message_list":[],"uuid":"67279f49-3c89-48db-8e92-bcaae95a3e4b","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"d16357fd-422b-4293-ab82-25d6230b5fac","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_Restart_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"f5815c32-2633-4eb4-aecf-53edec4185c2"},{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"29278402-1cca-4097-8563-174982b85bb3"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_Restart_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"f5815c32-2633-4eb4-aecf-53edec4185c2"},"edge_type":"inherent","type":"","uuid":"1e89acac-9e12-44b4-898a-131f169cd18c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"29278402-1cca-4097-8563-174982b85bb3"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"VMOPERATION_GCP_VM","uuid":"f5815c32-2633-4eb4-aecf-53edec4185c2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Operation_Restart_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"29278402-1cca-4097-8563-174982b85bb3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_GCP_Centos_K8SM_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"4f04d37f-a1fb-4993-9180-71a2a2c052fb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d16357fd-422b-4293-ab82-25d6230b5fac"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for suspending an application","message_list":[],"uuid":"9f1bf31c-c529-47cd-af19-52255d1996c7","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"8d6d7145-660f-4cfd-a5b6-c9b95faa7b45","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"bee7029b-7d95-4fdb-a00b-835f53a8ecff","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"8d6d7145-660f-4cfd-a5b6-c9b95faa7b45"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for modifying an application","message_list":[],"uuid":"a6969774-c2dc-4ba3-b290-3da0a1ca0d54","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"bede7f39-ede0-4743-91d0-4cb5fd824ac3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"a4172e67-d4b3-4f38-a51e-0d7cb74bb421","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"bede7f39-ede0-4743-91d0-4cb5fd824ac3"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for powering off an application","message_list":[],"uuid":"62a77ea1-d2ef-46b3-9263-114990f87e50","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"8aa49b05-299e-44ff-a0bd-1e8a53ed7618","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_PowerOff_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"e50b8e6d-3a6c-4184-9e80-2084992e058b"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"VMOPERATION_GCP_VM","uuid":"e50b8e6d-3a6c-4184-9e80-2084992e058b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Operation_PowerOff_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"499f2f07-9aec-4851-adcb-a3ebc68f7d63","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"8aa49b05-299e-44ff-a0bd-1e8a53ed7618"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"b4245391-0c22-45c7-ad72-747f2133de2a","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"81fbbb07-306c-49a6-b95b-d087c238366c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Delete_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"38761905-3970-444b-8a95-894eabde4a18"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DELETE_GCP_VM","uuid":"38761905-3970-444b-8a95-894eabde4a18","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Delete_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"99bfb5ef-49b9-4e84-b2bc-9ae1ca0cdc5b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"81fbbb07-306c-49a6-b95b-d087c238366c"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"1cb7cf93-ef69-4ec1-805c-a98c7e8c5bdd","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"DAG","uuid":"abbff0ca-e7dd-44b0-9fa7-3a5d9817e688","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"600dd3a3-18f8-470f-a0b2-9f4d32308c96"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"600dd3a3-18f8-470f-a0b2-9f4d32308c96","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"44eaecd0-1490-4213-915f-c79374013b7c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"abbff0ca-e7dd-44b0-9fa7-3a5d9817e688"},"name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}}],"message_list":[],"uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.networkInterfaces[0].accessConfigs[0].natIP}@@","delay_secs":"0","connection_port":22},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"timeout_secs":true,"address":true,"delay_secs":true,"connection_port":true},"create_spec":{"resources":{"labels":true,"machineType":true,"name":true,"zone":true,"tags":{"items":true},"guestCustomization":{"startupScript":true},"disks":{"0":{"initializeParams":{"diskSizeGb":true,"sourceImage":true,"diskType":true},"autoDelete":true}},"blankDisks":{"1":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"0":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"3":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"2":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"5":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"4":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true}},"networkInterfaces":{"0":{"accessConfigs":{"0":{"config_type":true,"name":true}},"network":true,"subnetwork":true,"associatePublicIP":true}},"sshKeys":{"0":true},"serviceAccounts":{"0":{"scopes":true,"email":true}},"metadata":{"items":true}}}},"os_type":"Linux","type":"GCP_VM","create_spec":{"type":"PROVISION_GCP_VM","resources":{"labels":[],"machineType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/machineTypes\/n1-highcpu-2","description":"","zone":"us-central1-c","tags":{"items":[],"type":"","fingerprint":""},"guestCustomization":{"type":"","sysprep":"","startupScript":""},"labelFingerprint":"","disks":[{"diskEncryptionKey":{"rawKey":"","type":""},"deviceName":"","initializeParams":{"sourceImageEncryptionKey":{"rawKey":"","type":""},"diskName":"","diskType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","diskSizeGb":10,"sourceImage":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/images\/centos-7","type":""},"autoDelete":true,"boot":true,"source":"","mode":"","interface":"","disk_type":"PERSISTENT","type":""}],"metadata":{"items":[],"type":"","fingerprint":""},"sshKeys":["centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMGAS\/K0Mb\/uwFXwD+hkjguy7VMZk2hpuhwPl9FUZwVBrURf\/i9QMJ5\/paPEZixu8VlRx7Inu4iun7rQfrnfeIYInmBwspXHYiTK3oHJAgZnrAHVEf1p6YaxLINlT1NI5yOAGPRWW6of8rBDBH1ObwU2+wcSx\/1H0uIs3aZNLufr+Rh628ACxAum2Gt8AVRj6ua2BPFyt5VTdclyysAmeh1AiixNgOZXOz6y\/i4TbzpY78I3isuKpxsUeXX6jxEMQol406jHDUF6njEOPIQG2zVZ3QJlTG9OlN+NiyZG9WkZz0VG\/6M8ixxIHHI2dNwUbBFv2HUu+8X9LTLFq2O7KjX9Hp7uZKBAySHA3eKaKHIp2bZuU1bT5PRPkggngX86xg+T+OMNnutbAiMnRJ8+FvD5So+5TIx4b9GgxAxure3x2yRPT9lOiQOB+CVpJPxR0Rn9bOI+wiPnD0kAGvK\/fHT+pqL4PM+hTnJtp9rrCRzIQApBx1263jEcYffhW2epZQRO+he5CMawFJ5TBe08om2AaDJ8GQdrpF6YA3W8DzHbmL3DPVVHdmqPLn10o+LX4gv5SdIIDVGdjKOc1BCnLTRmM28d5+sLDt\/M+kvcQgf0y0yDjMVjGECZkt39hbm4ELMHzZtzYLmHNhBZxRqHeJ7qFTuv1kx88OW3Xc5mbBNQ== centos@nutanix.com\n"],"minCpuPlatform":"","scheduling":{"automaticRestart":true,"type":"","preemptible":false,"onHostMaintenance":"TERMINATE"},"canIpForward":false,"blankDisks":[{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk1-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk2-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk3-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk4-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk5-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk6-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true}],"networkInterfaces":[{"aliasIpRanges":[],"network":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/networks\/default","accessConfigs":[{"config_type":"ONE_TO_ONE_NAT","type":"","name":"k8sc-acn-@@{calm_array_index}@@-@@{calm_time}@@","natIP":""}],"networkIP":"","subnetwork":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/regions\/us-central1\/subnetworks\/default","type":"","associatePublicIP":true}],"type":"","account_uuid":"84213a31-4fe8-7e39-3799-e093e5d0dc2e","serviceAccounts":[{"scopes":["https:\/\/www.googleapis.com\/auth\/cloud-platform"],"type":"","email":"108048128720-compute@developer.gserviceaccount.com"}],"name":"k8sm-@@{calm_array_index}@@-@@{calm_time}@@"}},"variable_list":[],"name":"GCP_Centos_K8SM"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"3ebdd1b5-0ad4-467a-958d-3414404067e8","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"02cc79ad-dc8e-4fdb-b1de-f134a14d884b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Provision_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"e967a235-bb23-4ee4-a224-fd47c4b6e492"},{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"80a823b3-0388-46f4-a8ff-be1ca3a19b70"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Gcp_Provision_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"e967a235-bb23-4ee4-a224-fd47c4b6e492"},"edge_type":"inherent","type":"","uuid":"66b4996f-3892-48f6-9d56-ad1e2f3f7769","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"80a823b3-0388-46f4-a8ff-be1ca3a19b70"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"PROVISION_GCP_VM","uuid":"e967a235-bb23-4ee4-a224-fd47c4b6e492","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"PROVISION_GCP_VM","resources":{"labels":[],"machineType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/machineTypes\/n1-highcpu-4","description":"","zone":"us-central1-c","tags":{"items":[],"type":"","fingerprint":""},"guestCustomization":{"type":"","sysprep":"","startupScript":""},"labelFingerprint":"","disks":[{"diskEncryptionKey":{"rawKey":"","type":""},"deviceName":"","initializeParams":{"sourceImageEncryptionKey":{"rawKey":"","type":""},"diskName":"","diskType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","diskSizeGb":10,"sourceImage":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/images\/centos-7","type":""},"autoDelete":true,"boot":true,"source":"","mode":"","interface":"","disk_type":"PERSISTENT","type":""}],"metadata":{"items":[],"type":"","fingerprint":""},"sshKeys":["centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMGAS\/K0Mb\/uwFXwD+hkjguy7VMZk2hpuhwPl9FUZwVBrURf\/i9QMJ5\/paPEZixu8VlRx7Inu4iun7rQfrnfeIYInmBwspXHYiTK3oHJAgZnrAHVEf1p6YaxLINlT1NI5yOAGPRWW6of8rBDBH1ObwU2+wcSx\/1H0uIs3aZNLufr+Rh628ACxAum2Gt8AVRj6ua2BPFyt5VTdclyysAmeh1AiixNgOZXOz6y\/i4TbzpY78I3isuKpxsUeXX6jxEMQol406jHDUF6njEOPIQG2zVZ3QJlTG9OlN+NiyZG9WkZz0VG\/6M8ixxIHHI2dNwUbBFv2HUu+8X9LTLFq2O7KjX9Hp7uZKBAySHA3eKaKHIp2bZuU1bT5PRPkggngX86xg+T+OMNnutbAiMnRJ8+FvD5So+5TIx4b9GgxAxure3x2yRPT9lOiQOB+CVpJPxR0Rn9bOI+wiPnD0kAGvK\/fHT+pqL4PM+hTnJtp9rrCRzIQApBx1263jEcYffhW2epZQRO+he5CMawFJ5TBe08om2AaDJ8GQdrpF6YA3W8DzHbmL3DPVVHdmqPLn10o+LX4gv5SdIIDVGdjKOc1BCnLTRmM28d5+sLDt\/M+kvcQgf0y0yDjMVjGECZkt39hbm4ELMHzZtzYLmHNhBZxRqHeJ7qFTuv1kx88OW3Xc5mbBNQ== centos@nutanix.com\n"],"minCpuPlatform":"","scheduling":{"automaticRestart":true,"type":"","preemptible":false,"onHostMaintenance":"TERMINATE"},"canIpForward":false,"blankDisks":[{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk1-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk2-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk3-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true}],"networkInterfaces":[{"aliasIpRanges":[],"network":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/networks\/default","accessConfigs":[{"config_type":"ONE_TO_ONE_NAT","type":"","name":"k8sm-acm-@@{calm_array_index}@@-@@{calm_time}@@","natIP":""}],"networkIP":"","subnetwork":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/regions\/us-central1\/subnetworks\/default","type":"","associatePublicIP":true}],"type":"","account_uuid":"84213a31-4fe8-7e39-3799-e093e5d0dc2e","serviceAccounts":[{"scopes":["https:\/\/www.googleapis.com\/auth\/cloud-platform"],"type":"","email":"108048128720-compute@developer.gserviceaccount.com"}],"name":"k8sw-@@{calm_array_index}@@-@@{calm_time}@@"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Provision_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"80a823b3-0388-46f4-a8ff-be1ca3a19b70","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"9825e114-5173-4617-b9ac-af974d81db28","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"02cc79ad-dc8e-4fdb-b1de-f134a14d884b"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for powering on an application","message_list":[],"uuid":"10920faf-945b-4377-b088-cae801d77349","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"6623f36d-2e4f-481d-8be6-94e65e5e98e0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_PowerOn_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"5da3f3ad-e515-4bb3-8194-4a8fb350807c"},{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"14c0c687-38e8-44ee-9ec1-3dad88b8fb6b"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_PowerOn_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"5da3f3ad-e515-4bb3-8194-4a8fb350807c"},"edge_type":"inherent","type":"","uuid":"c9e9b936-3901-43f7-af6d-17839b22752d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"14c0c687-38e8-44ee-9ec1-3dad88b8fb6b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"VMOPERATION_GCP_VM","uuid":"5da3f3ad-e515-4bb3-8194-4a8fb350807c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Operation_PowerOn_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"14c0c687-38e8-44ee-9ec1-3dad88b8fb6b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"0821d97f-d22a-49eb-bfa0-4abdeb73ab23","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"6623f36d-2e4f-481d-8be6-94e65e5e98e0"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for restarting an application","message_list":[],"uuid":"30bf9921-49eb-49e1-9504-5e44d28b72a4","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"da7903de-5470-4211-a39c-583618a0e5c4","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_Restart_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"125f992d-e0f0-489e-addd-17d99319f9f1"},{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"5e9b8999-037b-4b62-b21b-d0c329d814a8"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_Restart_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"125f992d-e0f0-489e-addd-17d99319f9f1"},"edge_type":"inherent","type":"","uuid":"e9355c23-9c16-467a-b0d2-762579072739","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"5e9b8999-037b-4b62-b21b-d0c329d814a8"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"VMOPERATION_GCP_VM","uuid":"125f992d-e0f0-489e-addd-17d99319f9f1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Operation_Restart_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"5e9b8999-037b-4b62-b21b-d0c329d814a8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{public_ip_address}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_GCP_Centos_K8SW_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"843efa80-5962-4f97-aa29-48b5ba3b3d84","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"da7903de-5470-4211-a39c-583618a0e5c4"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for suspending an application","message_list":[],"uuid":"36ccd711-90cf-475b-84b7-fd4484a4d764","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"d0e661e0-3c87-4d70-b1a4-d54ca3e94916","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"3d44b5e8-11b5-4ce4-8aea-2c4a1c80918b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"d0e661e0-3c87-4d70-b1a4-d54ca3e94916"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for modifying an application","message_list":[],"uuid":"a02e1eb8-9ade-442b-89f8-35e8d5d275dc","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"23da07c9-adcd-421e-a9d6-425e3cc7c063","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"b3c6c327-9887-4c74-96bb-ca79dee3fbfb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"23da07c9-adcd-421e-a9d6-425e3cc7c063"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for powering off an application","message_list":[],"uuid":"f0ec3748-2903-40fb-b996-dbd80f54ac62","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"c951be4c-eb8f-47ad-aaa4-3f884c0f6363","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Operation_PowerOff_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"03443e5a-47c9-4078-9ddb-a888e2cb0207"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"VMOPERATION_GCP_VM","uuid":"03443e5a-47c9-4078-9ddb-a888e2cb0207","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Operation_PowerOff_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"970353c4-39f8-4737-bd80-22ecde661c25","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"c951be4c-eb8f-47ad-aaa4-3f884c0f6363"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"23fbeca3-b7e3-4c89-9077-bf9437ce9c6f","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"2c5ed5d1-4ad1-4ad9-af2f-0afc6421fe43","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Gcp_Delete_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"1dc3606a-2b31-4568-8d8f-5e022923c1e1"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DELETE_GCP_VM","uuid":"1dc3606a-2b31-4568-8d8f-5e022923c1e1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Gcp_Delete_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"58e293aa-b21d-46b7-8d7d-a52e04f8cde0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"2c5ed5d1-4ad1-4ad9-af2f-0afc6421fe43"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"b3b02afa-969b-455f-8d5b-f5c36a0759f2","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"DAG","uuid":"99a625f5-e936-40d3-82b5-594f2e1f9840","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"260fe0ed-47e1-49d9-a49c-b1ee6a13ab6b"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"260fe0ed-47e1-49d9-a49c-b1ee6a13ab6b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"a54da0b3-68a6-4c4e-ad24-87e5724d4aaa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"99a625f5-e936-40d3-82b5-594f2e1f9840"},"name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}}],"message_list":[],"uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.networkInterfaces[0].accessConfigs[0].natIP}@@","delay_secs":"0","connection_port":22},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"timeout_secs":true,"address":true,"delay_secs":true,"connection_port":true},"create_spec":{"resources":{"labels":true,"machineType":true,"name":true,"zone":true,"tags":{"items":true},"guestCustomization":{"startupScript":true},"disks":{"0":{"initializeParams":{"diskSizeGb":true,"sourceImage":true,"diskType":true},"autoDelete":true}},"blankDisks":{"1":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"0":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"2":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true}},"networkInterfaces":{"0":{"accessConfigs":{"0":{"config_type":true,"name":true}},"network":true,"subnetwork":true,"associatePublicIP":true}},"sshKeys":{"0":true},"serviceAccounts":{"0":{"scopes":true,"email":true}},"metadata":{"items":true}}}},"os_type":"Linux","type":"GCP_VM","create_spec":{"type":"PROVISION_GCP_VM","resources":{"labels":[],"machineType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/machineTypes\/n1-highcpu-4","description":"","zone":"us-central1-c","tags":{"items":[],"type":"","fingerprint":""},"guestCustomization":{"type":"","sysprep":"","startupScript":""},"labelFingerprint":"","disks":[{"diskEncryptionKey":{"rawKey":"","type":""},"deviceName":"","initializeParams":{"sourceImageEncryptionKey":{"rawKey":"","type":""},"diskName":"","diskType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","diskSizeGb":10,"sourceImage":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/images\/centos-7","type":""},"autoDelete":true,"boot":true,"source":"","mode":"","interface":"","disk_type":"PERSISTENT","type":""}],"metadata":{"items":[],"type":"","fingerprint":""},"sshKeys":["centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMGAS\/K0Mb\/uwFXwD+hkjguy7VMZk2hpuhwPl9FUZwVBrURf\/i9QMJ5\/paPEZixu8VlRx7Inu4iun7rQfrnfeIYInmBwspXHYiTK3oHJAgZnrAHVEf1p6YaxLINlT1NI5yOAGPRWW6of8rBDBH1ObwU2+wcSx\/1H0uIs3aZNLufr+Rh628ACxAum2Gt8AVRj6ua2BPFyt5VTdclyysAmeh1AiixNgOZXOz6y\/i4TbzpY78I3isuKpxsUeXX6jxEMQol406jHDUF6njEOPIQG2zVZ3QJlTG9OlN+NiyZG9WkZz0VG\/6M8ixxIHHI2dNwUbBFv2HUu+8X9LTLFq2O7KjX9Hp7uZKBAySHA3eKaKHIp2bZuU1bT5PRPkggngX86xg+T+OMNnutbAiMnRJ8+FvD5So+5TIx4b9GgxAxure3x2yRPT9lOiQOB+CVpJPxR0Rn9bOI+wiPnD0kAGvK\/fHT+pqL4PM+hTnJtp9rrCRzIQApBx1263jEcYffhW2epZQRO+he5CMawFJ5TBe08om2AaDJ8GQdrpF6YA3W8DzHbmL3DPVVHdmqPLn10o+LX4gv5SdIIDVGdjKOc1BCnLTRmM28d5+sLDt\/M+kvcQgf0y0yDjMVjGECZkt39hbm4ELMHzZtzYLmHNhBZxRqHeJ7qFTuv1kx88OW3Xc5mbBNQ== centos@nutanix.com\n"],"minCpuPlatform":"","scheduling":{"automaticRestart":true,"type":"","preemptible":false,"onHostMaintenance":"TERMINATE"},"canIpForward":false,"blankDisks":[{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk1-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk2-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk3-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true}],"networkInterfaces":[{"aliasIpRanges":[],"network":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/networks\/default","accessConfigs":[{"config_type":"ONE_TO_ONE_NAT","type":"","name":"k8sm-acm-@@{calm_array_index}@@-@@{calm_time}@@","natIP":""}],"networkIP":"","subnetwork":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/regions\/us-central1\/subnetworks\/default","type":"","associatePublicIP":true}],"type":"","account_uuid":"84213a31-4fe8-7e39-3799-e093e5d0dc2e","serviceAccounts":[{"scopes":["https:\/\/www.googleapis.com\/auth\/cloud-platform"],"type":"","email":"108048128720-compute@developer.gserviceaccount.com"}],"name":"k8sw-@@{calm_array_index}@@-@@{calm_time}@@"}},"variable_list":[],"name":"GCP_Centos_K8SW"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"2f4283f2-1847-4de2-a9c2-37a5df779f4e","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"ac8fb64e-6d64-441d-a590-f837340260c5","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Provision_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"c598f169-492b-4459-ae91-c3f77964e6be"},{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"8f6b9402-d9c5-41fd-81ee-8395bb3ccd81"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Azure_Provision_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"c598f169-492b-4459-ae91-c3f77964e6be"},"edge_type":"inherent","type":"","uuid":"43694c92-0c31-4e9c-b644-cba94e245974","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"8f6b9402-d9c5-41fd-81ee-8395bb3ccd81"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"PROVISION_AZURE_VM","uuid":"c598f169-492b-4459-ae91-c3f77964e6be","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"PROVISION_AZURE_VM","name":"","resources":{"vm_name":"K8SM-@@{calm_unique_hash}@@-@@{calm_array_index}@@","storage_profile":{"is_managed":true,"image_details":{"sku":"7.4","publisher":"OpenLogic","offer":"CentOS-HPC","source_image_id":"","use_custom_image":false,"version":"7.4.20180719","type":""},"type":"","os_disk_details":{"size_in_gb":127,"name":"os-@@{calm_unique_hash}@@-@@{calm_array_index}@@-disk","storage_name":"","storage_type":"Standard_LRS","lun":-1,"type":"","create_option":"FromImage","caching_type":"ReadWrite"},"data_disk_list":[]},"nw_profile":{"nic_list":[{"nsg_name":"sg-allow-all-eastus2","vnet_name":"calm-virtual-network-eastus2","private_ip_info":{"ip_address":"","ip_allocation_method":"Dynamic","type":""},"nic_name":"nic-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","subnet_name":"default","type":"","public_ip_info":{"ip_name":"public-ip-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","dns_label":"dns-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","ip_allocation_method":"Dynamic","type":""}}],"primary_nic":-1,"type":""},"resource_group":"calmrg","os_profile":{"secrets":[],"type":"","windows_config":{"winrm_listeners":[],"time_zone":"","additional_unattend_content":[],"provision_vm_agent":true,"auto_updates":false,"type":""},"linux_config":null},"hw_profile":{"max_data_disk_count":4,"vm_size":"Standard_D1_v2","type":""},"location":"eastus2","availability_set_id":"","tag_list":[],"type":"","account_uuid":"3c0f2d94-878c-f34c-6d39-90b854129782"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Provision_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"8f6b9402-d9c5-41fd-81ee-8395bb3ccd81","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.publicIPAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"04577d7d-79e2-4457-93d6-e3f4898b6cb3","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"ac8fb64e-6d64-441d-a590-f837340260c5"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for powering on an application","message_list":[],"uuid":"7a63e6e0-ba50-4afd-89ad-2a77fe1b14a5","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"bc707325-cdae-4104-a623-23ffcc95d4b0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Operation_PowerOn_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"3c6266e4-d0ba-48ef-a1cb-1885294e0b7f"},{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"646a70b8-2599-492e-998b-92ee265a1bbc"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Azure_Operation_PowerOn_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"3c6266e4-d0ba-48ef-a1cb-1885294e0b7f"},"edge_type":"inherent","type":"","uuid":"a24bc199-e6f4-42ce-a2e7-aac8a522c4fd","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"646a70b8-2599-492e-998b-92ee265a1bbc"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"VMOPERATION_AZURE_VM","uuid":"3c6266e4-d0ba-48ef-a1cb-1885294e0b7f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Operation_PowerOn_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"646a70b8-2599-492e-998b-92ee265a1bbc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.publicIPAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"ac412d5b-d99f-48f9-a9bd-07d3ec52af54","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"bc707325-cdae-4104-a623-23ffcc95d4b0"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for restarting an application","message_list":[],"uuid":"788ef5cf-1f07-433a-996f-78a6d59db3c6","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"03e29c38-4a13-4fe0-bf77-3a4fd96ca6c1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Operation_Restart2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"288280e2-b75d-44f9-8c06-d0557bebc185"},{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"58f490db-17c7-41ea-9a14-dac579b8cca2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Azure_Operation_Restart2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"288280e2-b75d-44f9-8c06-d0557bebc185"},"edge_type":"inherent","type":"","uuid":"07c99729-a925-4f6e-81bd-815372c58527","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"58f490db-17c7-41ea-9a14-dac579b8cca2"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"VMOPERATION_AZURE_VM","uuid":"288280e2-b75d-44f9-8c06-d0557bebc185","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Operation_Restart2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"58f490db-17c7-41ea-9a14-dac579b8cca2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.publicIPAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_Azure_Centos_K8SM_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"e2da215a-2560-4cd4-9c45-c9a96ac2adfe","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"03e29c38-4a13-4fe0-bf77-3a4fd96ca6c1"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for suspending an application","message_list":[],"uuid":"0e02f7df-0756-4326-b39a-405385d06448","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"b5d8c440-c16f-4bec-aec1-2ba36e6e8110","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"16d3ef64-b275-4a13-b574-85f846e4ca49","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"b5d8c440-c16f-4bec-aec1-2ba36e6e8110"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for modifying an application","message_list":[],"uuid":"9f182926-5309-4f61-bd8d-47abcf39b87d","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"24ff69b6-bdc7-4860-a520-265c7f316248","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"f7b93c49-2eb8-4653-8684-7623174aa975","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"24ff69b6-bdc7-4860-a520-265c7f316248"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for powering off an application","message_list":[],"uuid":"2024f38f-21a0-41ad-82d3-3e88eef3a52e","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"1e9e19b1-e442-4985-82f2-e94314dea094","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Operation_Poweroff_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"ef2951ec-4d48-4ff5-b8af-e9a31c446c87"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"VMOPERATION_AZURE_VM","uuid":"ef2951ec-4d48-4ff5-b8af-e9a31c446c87","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Operation_Poweroff_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"083ab61d-ed6b-4bf3-bcb7-2274a931643d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"1e9e19b1-e442-4985-82f2-e94314dea094"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"92468844-0a58-42ec-8eaa-171871cd62a5","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"75c73c0d-a980-43d4-8832-c29e312f1dd6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Delete_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"e341c7b9-99c3-442a-a922-fde842ee690f"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DELETE_AZURE_VM","uuid":"e341c7b9-99c3-442a-a922-fde842ee690f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Delete_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"652ecce4-72ef-4741-acaf-e2dd8b40939d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"75c73c0d-a980-43d4-8832-c29e312f1dd6"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"f0c6bf21-2859-4939-8ff5-77b341c8dcfe","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"DAG","uuid":"034d70be-9fd7-4f3c-afc8-7c18fa20089f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"ff703da5-41b8-4522-adf7-290c40227570"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"ff703da5-41b8-4522-adf7-290c40227570","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"91d25710-39ab-4a8d-8f07-9b5c956a77fb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"034d70be-9fd7-4f3c-afc8-7c18fa20089f"},"name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}}],"message_list":[],"uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.publicIPAddressList[0]}@@","delay_secs":"0","connection_port":22},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"resources":{"vm_name":true,"storage_profile":{"is_managed":true,"image_details":{"sku":true,"publisher":true,"offer":true,"source_image_id":true,"use_custom_image":true,"version":true},"os_disk_details":{"storage_type":true,"name":true,"caching_type":true,"create_option":true}},"nw_profile":{"nic_list":{"0":{"nsg_name":true,"vnet_name":true,"private_ip_info":{"ip_allocation_method":true},"nic_name":true,"subnet_name":true,"public_ip_info":{"ip_name":true,"dns_label":true,"ip_allocation_method":true}}}},"resource_group":true,"os_profile":{"linux_config":{"custom_data":true}},"hw_profile":{"vm_size":true},"location":true,"availability_set_id":true,"tag_list":true}}},"os_type":"Linux","type":"AZURE_VM","create_spec":{"type":"PROVISION_AZURE_VM","name":"","resources":{"vm_name":"K8SM-@@{calm_unique_hash}@@-@@{calm_array_index}@@","storage_profile":{"is_managed":true,"image_details":{"sku":"7.4","publisher":"OpenLogic","offer":"CentOS-HPC","source_image_id":"","use_custom_image":false,"version":"7.4.20180719","type":""},"type":"","os_disk_details":{"size_in_gb":127,"name":"os-@@{calm_unique_hash}@@-@@{calm_array_index}@@-disk","storage_name":"","storage_type":"Standard_LRS","lun":-1,"type":"","create_option":"FromImage","caching_type":"ReadWrite"},"data_disk_list":[]},"nw_profile":{"nic_list":[{"nsg_name":"sg-allow-all-eastus2","vnet_name":"calm-virtual-network-eastus2","private_ip_info":{"ip_address":"","ip_allocation_method":"Dynamic","type":""},"nic_name":"nic-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","subnet_name":"default","type":"","public_ip_info":{"ip_name":"public-ip-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","dns_label":"dns-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","ip_allocation_method":"Dynamic","type":""}}],"primary_nic":-1,"type":""},"resource_group":"calmrg","os_profile":{"secrets":[],"type":"","windows_config":{"winrm_listeners":[],"time_zone":"","additional_unattend_content":[],"provision_vm_agent":true,"auto_updates":false,"type":""},"linux_config":null},"hw_profile":{"max_data_disk_count":4,"vm_size":"Standard_D1_v2","type":""},"location":"eastus2","availability_set_id":"","tag_list":[],"type":"","account_uuid":"3c0f2d94-878c-f34c-6d39-90b854129782"}},"variable_list":[],"name":"Azure_Centos_K8SM"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"0f3bb465-b8c3-4832-8ad3-ea22342ff619","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"f248c9c3-4eb8-495c-ad78-9f047fb56989","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Provision_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"3f82f514-27eb-435e-9f05-4c89310fa16b"},{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"20c9d64c-e1de-4ee0-92a6-a191af155962"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Azure_Provision_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"3f82f514-27eb-435e-9f05-4c89310fa16b"},"edge_type":"inherent","type":"","uuid":"24f03ff3-cc18-4d1f-bdb8-c87a5e871ace","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"20c9d64c-e1de-4ee0-92a6-a191af155962"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"PROVISION_AZURE_VM","uuid":"3f82f514-27eb-435e-9f05-4c89310fa16b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"PROVISION_AZURE_VM","name":"","resources":{"vm_name":"K8SW-@@{calm_unique_hash}@@-@@{calm_array_index}@@","storage_profile":{"is_managed":true,"image_details":{"sku":"7.4","publisher":"OpenLogic","offer":"CentOS-HPC","source_image_id":"","use_custom_image":false,"version":"7.4.20180719","type":""},"type":"","os_disk_details":{"size_in_gb":127,"name":"os-@@{calm_unique_hash}@@-@@{calm_array_index}@@-disk","storage_name":"","storage_type":"Standard_LRS","lun":-1,"type":"","create_option":"FromImage","caching_type":"ReadWrite"},"data_disk_list":[]},"nw_profile":{"nic_list":[{"nsg_name":"sg-allow-all-eastus2","vnet_name":"calm-virtual-network-eastus2","private_ip_info":{"ip_address":"","ip_allocation_method":"Dynamic","type":""},"nic_name":"nic-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","subnet_name":"default","type":"","public_ip_info":{"ip_name":"public-ip-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","dns_label":"dns-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","ip_allocation_method":"Dynamic","type":""}}],"primary_nic":-1,"type":""},"resource_group":"calmrg","os_profile":{"secrets":[],"type":"","windows_config":{"winrm_listeners":[],"time_zone":"","additional_unattend_content":[],"provision_vm_agent":true,"auto_updates":false,"type":""},"linux_config":null},"hw_profile":{"max_data_disk_count":4,"vm_size":"Standard_D1_v2","type":""},"location":"eastus2","availability_set_id":"","tag_list":[],"type":"","account_uuid":"3c0f2d94-878c-f34c-6d39-90b854129782"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Provision_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"20c9d64c-e1de-4ee0-92a6-a191af155962","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.publicIPAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"a9184bf2-3616-4a4d-bdbc-545890384b8f","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"f248c9c3-4eb8-495c-ad78-9f047fb56989"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for powering on an application","message_list":[],"uuid":"e9a3da39-f24d-4c48-b4b6-124616f27b8a","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"a047a83e-a1f6-4a4c-8c50-ad10c17b3395","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Operation_PowerOn_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"13f8cff9-990a-4880-b1a9-e31bb4e50ffe"},{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"0df0e0e9-15c2-4558-883e-59148cfd77a4"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Azure_Operation_PowerOn_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"13f8cff9-990a-4880-b1a9-e31bb4e50ffe"},"edge_type":"inherent","type":"","uuid":"80917d62-4e9a-4aa2-890b-972bd48c2ce6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"0df0e0e9-15c2-4558-883e-59148cfd77a4"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"VMOPERATION_AZURE_VM","uuid":"13f8cff9-990a-4880-b1a9-e31bb4e50ffe","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Operation_PowerOn_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"0df0e0e9-15c2-4558-883e-59148cfd77a4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.publicIPAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"8c3c905a-839a-41fb-b90b-b96b39b6f32b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"a047a83e-a1f6-4a4c-8c50-ad10c17b3395"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for restarting an application","message_list":[],"uuid":"9f878d99-6ef1-4403-800d-d3ff445afe83","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"8d57138d-e6d7-4633-8909-3a840ad9efcd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Operation_Restart03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ec6e935f-5b64-4602-9165-21bb7c0f31de"},{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"662ebbdc-fc5c-4905-b6dc-27f61c1aafe0"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Azure_Operation_Restart03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ec6e935f-5b64-4602-9165-21bb7c0f31de"},"edge_type":"inherent","type":"","uuid":"abdd306f-f4db-4c55-9e41-2ab460c6d1e6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"662ebbdc-fc5c-4905-b6dc-27f61c1aafe0"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"VMOPERATION_AZURE_VM","uuid":"ec6e935f-5b64-4602-9165-21bb7c0f31de","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Operation_Restart03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"662ebbdc-fc5c-4905-b6dc-27f61c1aafe0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.publicIPAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_Azure_Centos_K8SW_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"413ec063-9f43-47e4-a254-a909f03adec5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"8d57138d-e6d7-4633-8909-3a840ad9efcd"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for suspending an application","message_list":[],"uuid":"517b30fc-fe04-4543-8ed5-6390915e35cf","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"31225870-be24-4d5f-b306-03aee75f7824","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"c39d4a4f-5557-4979-b2bd-61cd2ca82ecb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"31225870-be24-4d5f-b306-03aee75f7824"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for modifying an application","message_list":[],"uuid":"1aabaca2-1a96-44af-b166-e3c9a7ad7e84","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"956d8f88-c35b-43f1-8dc8-fda40434389d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"5a59f699-fef8-4bf1-a3b6-a655fcdb5500","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"956d8f88-c35b-43f1-8dc8-fda40434389d"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for powering off an application","message_list":[],"uuid":"741cc724-f157-4e15-84bf-d3387bfa2bbd","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"ec228ae4-14e2-42c3-9e87-56516358b3f8","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Operation_Poweroff_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"a59043c9-8b17-4a2e-8305-ee124da3b180"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"VMOPERATION_AZURE_VM","uuid":"a59043c9-8b17-4a2e-8305-ee124da3b180","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Operation_Poweroff_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"656140d0-c555-44bf-9698-6681292ec8c8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ec228ae4-14e2-42c3-9e87-56516358b3f8"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"14ffcec3-3e46-4f53-9c97-88d1939ef8e1","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"ffdee6e7-6853-41b0-b805-6b0959e8d591","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Azure_Delete_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"74245a2c-d635-4945-97f1-696bfbb839b4"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DELETE_AZURE_VM","uuid":"74245a2c-d635-4945-97f1-696bfbb839b4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Azure_Delete_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"5118f63f-4679-4119-9791-64b9a6a94212","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ffdee6e7-6853-41b0-b805-6b0959e8d591"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"009e6d6b-343a-4398-971f-861df88da749","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"DAG","uuid":"5d53001c-f50c-40e3-82a3-96ae91c78745","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"d1e7b22d-79a8-4a67-bdaa-11b86f3be67c"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"d1e7b22d-79a8-4a67-bdaa-11b86f3be67c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"c2bcae96-aff4-49e3-a23c-a11b79f32123","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"5d53001c-f50c-40e3-82a3-96ae91c78745"},"name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}}],"message_list":[],"uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.publicIPAddressList[0]}@@","delay_secs":"0","connection_port":22},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"resources":{"vm_name":true,"storage_profile":{"is_managed":true,"image_details":{"sku":true,"publisher":true,"offer":true,"source_image_id":true,"use_custom_image":true,"version":true},"os_disk_details":{"storage_type":true,"name":true,"caching_type":true,"create_option":true}},"nw_profile":{"nic_list":{"0":{"nsg_name":true,"vnet_name":true,"private_ip_info":{"ip_allocation_method":true},"nic_name":true,"subnet_name":true,"public_ip_info":{"ip_allocation_method":true,"dns_label":true,"ip_name":true}}}},"resource_group":true,"os_profile":{"linux_config":{"custom_data":true}},"hw_profile":{"vm_size":true},"location":true,"availability_set_id":true,"tag_list":true}}},"os_type":"Linux","type":"AZURE_VM","create_spec":{"type":"PROVISION_AZURE_VM","name":"","resources":{"vm_name":"K8SW-@@{calm_unique_hash}@@-@@{calm_array_index}@@","storage_profile":{"is_managed":true,"image_details":{"sku":"7.4","publisher":"OpenLogic","offer":"CentOS-HPC","source_image_id":"","use_custom_image":false,"version":"7.4.20180719","type":""},"type":"","os_disk_details":{"size_in_gb":127,"name":"os-@@{calm_unique_hash}@@-@@{calm_array_index}@@-disk","storage_name":"","storage_type":"Standard_LRS","lun":-1,"type":"","create_option":"FromImage","caching_type":"ReadWrite"},"data_disk_list":[]},"nw_profile":{"nic_list":[{"nsg_name":"sg-allow-all-eastus2","vnet_name":"calm-virtual-network-eastus2","private_ip_info":{"ip_address":"","ip_allocation_method":"Dynamic","type":""},"nic_name":"nic-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","subnet_name":"default","type":"","public_ip_info":{"ip_name":"public-ip-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","dns_label":"dns-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","ip_allocation_method":"Dynamic","type":""}}],"primary_nic":-1,"type":""},"resource_group":"calmrg","os_profile":{"secrets":[],"type":"","windows_config":{"winrm_listeners":[],"time_zone":"","additional_unattend_content":[],"provision_vm_agent":true,"auto_updates":false,"type":""},"linux_config":null},"hw_profile":{"max_data_disk_count":4,"vm_size":"Standard_D1_v2","type":""},"location":"eastus2","availability_set_id":"","tag_list":[],"type":"","account_uuid":"3c0f2d94-878c-f34c-6d39-90b854129782"}},"variable_list":[],"name":"Azure_Centos_K8SW"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"547e26cc-8d55-4da1-9398-f3f97419c9ce","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"71e2ae0f-638b-4fbe-9a68-dd3d461a05c9","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Provision_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"37e3d48a-76ad-405d-8af0-06ccedf641e4"},{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"94e47030-7bc2-411f-afca-bd64b4f10eff"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Vmware_Provision_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"37e3d48a-76ad-405d-8af0-06ccedf641e4"},"edge_type":"inherent","type":"","uuid":"6e0e99e0-dc24-4008-a28e-4d4127c879f3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"94e47030-7bc2-411f-afca-bd64b4f10eff"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"PROVISION_VCENTER","uuid":"37e3d48a-76ad-405d-8af0-06ccedf641e4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","storage_pod":"TestQA","drs_mode":true,"cluster":"Sabine59-Cluster","host":"","clone_is_template":false,"template":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","datastore":"","type":"PROVISION_VMWARE_VM","resources":{"nic_list":[{"nic_type":"e1000","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[],"template_controller_list":[],"num_vcpus_per_socket":1,"num_sockets":2,"controller_list":[],"memory_size_mib":2048,"power_state":"poweron","guest_customization":{"type":"","cloud_init":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']","linux_data":null,"customization_name":"","customization_type":"GUEST_OS_LINUX","windows_data":null},"template_disk_list":[],"type":"","account_uuid":"7f90399d-ed3d-1c70-447d-17004ef1bd0a","disk_list":[{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""}]}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Provision_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"94e47030-7bc2-411f-afca-bd64b4f10eff","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.ipAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"}],"description":"","message_list":[],"uuid":"a396340a-d297-4420-a28b-8b3d28273dcd","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"71e2ae0f-638b-4fbe-9a68-dd3d461a05c9"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for powering on an application","message_list":[],"uuid":"8726af15-ead1-4e84-a626-3743375b5b35","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"847927c4-232b-4924-b72b-496193663fe8","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_PowerOn_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"954b3989-f931-474f-a56d-33b32e0616ad"},{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"7bcd2b29-3195-4885-837c-a523f5e385c1"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_PowerOn_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"954b3989-f931-474f-a56d-33b32e0616ad"},"edge_type":"inherent","type":"","uuid":"6287c356-43cf-4002-8358-85ab4732f0e6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"7bcd2b29-3195-4885-837c-a523f5e385c1"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"VMOPERATION_VCENTER","uuid":"954b3989-f931-474f-a56d-33b32e0616ad","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Operation_PowerOn_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"7bcd2b29-3195-4885-837c-a523f5e385c1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.ipAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"}],"description":"","message_list":[],"uuid":"2a998bd1-ded5-4fa3-bc75-4a7825177872","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"847927c4-232b-4924-b72b-496193663fe8"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for restarting an application","message_list":[],"uuid":"2ee237e6-149e-4981-bfc9-e1e7f516150c","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"490484aa-0685-487b-ac45-073fdbdaf29e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_Restart3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"39ad0032-dbf5-4b29-83ce-bc7095638dfe"},{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"ffc86a3b-7938-4549-a38b-57018dd7eec4"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_Restart3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"39ad0032-dbf5-4b29-83ce-bc7095638dfe"},"edge_type":"inherent","type":"","uuid":"426ea8de-3b53-4ef8-97fd-0ce96b09dcc3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"ffc86a3b-7938-4549-a38b-57018dd7eec4"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"VMOPERATION_VCENTER","uuid":"39ad0032-dbf5-4b29-83ce-bc7095638dfe","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Operation_Restart3bf08be3_f50e_4f36_ab3a_bd94ca4332af"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"ffc86a3b-7938-4549-a38b-57018dd7eec4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.ipAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_VMware_Centos_K8SM_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"}],"description":"","message_list":[],"uuid":"53a9fcd0-9e52-441b-b330-a6f379123146","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"490484aa-0685-487b-ac45-073fdbdaf29e"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for suspending an application","message_list":[],"uuid":"442fe9f7-d97a-4c07-8fc4-f0b240f15f91","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"1a43e0f9-3f2e-487e-b7da-14f028e03cb3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}],"description":"","message_list":[],"uuid":"04656d34-921c-4923-8c5b-bb2650c73ec1","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"1a43e0f9-3f2e-487e-b7da-14f028e03cb3"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for modifying an application","message_list":[],"uuid":"faaacb19-6a8a-4b86-b711-7afb443b7cc2","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"ba245346-6151-429a-ae0f-f1ac9d04e991","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}],"description":"","message_list":[],"uuid":"3f82c223-7660-448f-9d7d-ba7f1ab9decf","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ba245346-6151-429a-ae0f-f1ac9d04e991"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for powering off an application","message_list":[],"uuid":"e7c9c1a4-47b1-40a7-8e89-d996fcb7fd24","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"e7f49428-94cd-431a-a52a-fc0a7ead68b1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_Poweroff_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"0d9916fc-d63f-4bb7-a892-fd1f36473a1f"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"VMOPERATION_VCENTER","uuid":"0d9916fc-d63f-4bb7-a892-fd1f36473a1f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Operation_Poweroff_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"}],"description":"","message_list":[],"uuid":"6c0047eb-407e-4616-bf14-d88c60d7d4d2","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"e7f49428-94cd-431a-a52a-fc0a7ead68b1"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"e23e1c80-ab2a-4f86-82f6-745bd1250fdc","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"491d1415-d447-4634-9777-9acd4bbf00cb","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Delete_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"e6c1cdb7-d9f5-4740-b640-c9fc030bd54b"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DELETE_VCENTER","uuid":"e6c1cdb7-d9f5-4740-b640-c9fc030bd54b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Delete_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"}],"description":"","message_list":[],"uuid":"6ab59ece-9fd4-4d84-9ad8-5566e3e795eb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"491d1415-d447-4634-9777-9acd4bbf00cb"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"7c9ac536-558e-4d7b-9f7d-26e0d8e2ea92","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"DAG","uuid":"6db45224-2396-4382-bb2d-2db7f5a8d67d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_3bf08be3_f50e_4f36_ab3a_bd94ca4332af","uuid":"aef1e764-f2da-473b-a0ec-73294986dd82"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"aef1e764-f2da-473b-a0ec-73294986dd82","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_3bf08be3_f50e_4f36_ab3a_bd94ca4332af"}],"description":"","message_list":[],"uuid":"ad444417-b30f-4c73-929b-132ea6e86758","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6db45224-2396-4382-bb2d-2db7f5a8d67d"},"name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}}],"message_list":[],"uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.ipAddressList[0]}@@","delay_secs":"30","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"name":true,"drs_mode":true,"cluster":true,"host":true,"datastore":true,"storage_pod":true,"resources":{"template_nic_list":{},"nic_list":{"0":{"nic_type":true,"net_name":true}},"template_controller_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"controller_list":{},"memory_size_mib":true,"guest_customization":{"customization_name":true,"cloud_init":true},"template_disk_list":{},"disk_list":true}}},"os_type":"Linux","type":"VMWARE_VM","create_spec":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","storage_pod":"TestQA","drs_mode":true,"cluster":"Sabine59-Cluster","host":"","clone_is_template":false,"template":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","datastore":"","type":"PROVISION_VMWARE_VM","resources":{"nic_list":[{"nic_type":"e1000","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[],"template_controller_list":[],"num_vcpus_per_socket":1,"num_sockets":2,"controller_list":[],"memory_size_mib":2048,"power_state":"poweron","guest_customization":{"type":"","cloud_init":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']","linux_data":null,"customization_name":"","customization_type":"GUEST_OS_LINUX","windows_data":null},"template_disk_list":[],"type":"","account_uuid":"7f90399d-ed3d-1c70-447d-17004ef1bd0a","disk_list":[{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""}]}},"variable_list":[],"name":"VMware_Centos_K8SM"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"b3b1dc9c-de4a-4e0a-acdf-4c36b54ca63b","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"e83216a4-8cb2-4027-9dc3-1639967dc321","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Provision_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"b7375a0d-d818-44ee-8c2b-a437480f7348"},{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"eaf8f37a-ab1b-48cb-a0b1-2a2cdc559190"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Vmware_Provision_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"b7375a0d-d818-44ee-8c2b-a437480f7348"},"edge_type":"inherent","type":"","uuid":"c482f77e-29df-438a-aa30-c6ac30de991b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"eaf8f37a-ab1b-48cb-a0b1-2a2cdc559190"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"PROVISION_VCENTER","uuid":"b7375a0d-d818-44ee-8c2b-a437480f7348","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","storage_pod":"TestQA","drs_mode":true,"cluster":"Sabine59-Cluster","host":"","clone_is_template":false,"template":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","datastore":"","type":"PROVISION_VMWARE_VM","resources":{"nic_list":[{"nic_type":"e1000","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[],"template_controller_list":[],"num_vcpus_per_socket":1,"num_sockets":4,"controller_list":[],"memory_size_mib":6144,"power_state":"poweron","guest_customization":{"type":"","cloud_init":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']","linux_data":null,"customization_name":"","customization_type":"GUEST_OS_LINUX","windows_data":null},"template_disk_list":[],"type":"","account_uuid":"7f90399d-ed3d-1c70-447d-17004ef1bd0a","disk_list":[{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""}]}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Provision_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"eaf8f37a-ab1b-48cb-a0b1-2a2cdc559190","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.ipAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"}],"description":"","message_list":[],"uuid":"be1cb23e-0b1f-4692-9c6b-14de7553d129","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e83216a4-8cb2-4027-9dc3-1639967dc321"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for powering on an application","message_list":[],"uuid":"0440e89c-f00c-41bf-abed-1105188599b9","name":"action_poweron","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"f17a9ba2-0bbe-4522-bd13-294d55fe9d32","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_PowerOn_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"6b8c2f40-1243-4ea2-a3c8-c0bd41744855"},{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"6d3d7034-73ff-4e4e-99b9-230cb1ad7bab"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_PowerOn_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"6b8c2f40-1243-4ea2-a3c8-c0bd41744855"},"edge_type":"inherent","type":"","uuid":"7e143fd8-e3a6-4a79-bdb2-f9d3b7900cf2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"6d3d7034-73ff-4e4e-99b9-230cb1ad7bab"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"VMOPERATION_VCENTER","uuid":"6b8c2f40-1243-4ea2-a3c8-c0bd41744855","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Operation_PowerOn_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"6d3d7034-73ff-4e4e-99b9-230cb1ad7bab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.ipAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"}],"description":"","message_list":[],"uuid":"273e374c-1c79-40b9-a054-12354b5176fc","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"f17a9ba2-0bbe-4522-bd13-294d55fe9d32"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for restarting an application","message_list":[],"uuid":"2d4ff840-5e61-453a-a655-a2098086dca1","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"9494e181-3791-451e-9dc9-4f5539c2bd29","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_Restartebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"199c1645-88c7-41eb-ab44-d3a7f5fcfd47"},{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"1219913e-122c-46b6-b885-105e5c8ef112"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_Restartebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"199c1645-88c7-41eb-ab44-d3a7f5fcfd47"},"edge_type":"inherent","type":"","uuid":"da439ae0-ef91-404d-ab66-58f2512b2ae0","to_task_reference":{"kind":"app_task","name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"1219913e-122c-46b6-b885-105e5c8ef112"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"VMOPERATION_VCENTER","uuid":"199c1645-88c7-41eb-ab44-d3a7f5fcfd47","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Operation_Restartebbe4ed9_d7ab_412b_9ec5_52483784f6ff"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CHECK_LOGIN","uuid":"1219913e-122c-46b6-b885-105e5c8ef112","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"retries":"5","dial_timeout":"","timeout":"60","address":"@@{platform.ipAddressList[0]}@@","type":"CHECK_LOGIN","sleep_time":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__check_login_for_VMware_Centos_K8SW_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"}],"description":"","message_list":[],"uuid":"220fca82-ddc4-466f-8a34-7132073512e6","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"9494e181-3791-451e-9dc9-4f5539c2bd29"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for suspending an application","message_list":[],"uuid":"01d82f80-5e4f-469f-94c9-e97a9dc75e27","name":"action_suspend","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"8c383ea4-a8db-4659-bd07-9961983a6570","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}],"description":"","message_list":[],"uuid":"84e068d9-1b8d-43a2-9b2e-f93f55674bfa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"8c383ea4-a8db-4659-bd07-9961983a6570"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for modifying an application","message_list":[],"uuid":"1dad0cef-6b19-4229-808c-38697dd0c66e","name":"action_modify","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"ce8972eb-c465-466f-a170-609c99fb4ed4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}],"description":"","message_list":[],"uuid":"7336473c-75dc-44a4-aa23-4734c924a848","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ce8972eb-c465-466f-a170-609c99fb4ed4"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for powering off an application","message_list":[],"uuid":"e6fa66c9-9064-494f-bd84-9f49525986c9","name":"action_poweroff","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"bd747c27-bd07-4165-9ebc-e8cca9b646db","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Operation_Poweroff_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"8b97d7c1-ebd6-4d4b-bea5-2df7fb59aa73"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"VMOPERATION_VCENTER","uuid":"8b97d7c1-ebd6-4d4b-bea5-2df7fb59aa73","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"GENERIC_OPERATION"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Operation_Poweroff_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"}],"description":"","message_list":[],"uuid":"842b6cec-36eb-47ea-bf16-7a1bc6ea917a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"bd747c27-bd07-4165-9ebc-e8cca9b646db"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"9044a11f-345a-4a7c-91d6-4817c09534d1","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"3a000255-fe4d-4cdd-9471-94e8702f67fa","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Vmware_Delete_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"56ab42a6-f248-42ce-8327-49d5bbd43a81"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DELETE_VCENTER","uuid":"56ab42a6-f248-42ce-8327-49d5bbd43a81","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Vmware_Delete_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"}],"description":"","message_list":[],"uuid":"30023c2d-c9ac-4e2a-974f-e22bfbcf8b2c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"3a000255-fe4d-4cdd-9471-94e8702f67fa"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"c27e954e-627a-4d48-b9cc-6daa58973d60","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"DAG","uuid":"8b1f7edf-2ec3-4556-85f3-fe0ddf8661f2","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Substrate_Element_Delete_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff","uuid":"d44ccf47-fea1-465c-9b01-9b18d018cefb"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"d44ccf47-fea1-465c-9b01-9b18d018cefb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Substrate_Element_Delete_ebbe4ed9_d7ab_412b_9ec5_52483784f6ff"}],"description":"","message_list":[],"uuid":"81b77774-e456-4a56-93c9-8163af557a10","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"8b1f7edf-2ec3-4556-85f3-fe0ddf8661f2"},"name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}}],"message_list":[],"uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff","state":"ACTIVE","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.ipAddressList[0]}@@","delay_secs":"30","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"name":true,"drs_mode":true,"cluster":true,"host":true,"datastore":true,"storage_pod":true,"resources":{"template_nic_list":{},"nic_list":{"0":{"nic_type":true,"net_name":true}},"template_controller_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"controller_list":{},"memory_size_mib":true,"guest_customization":{"customization_name":true,"cloud_init":true},"template_disk_list":{},"disk_list":true}}},"os_type":"Linux","type":"VMWARE_VM","create_spec":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","storage_pod":"TestQA","drs_mode":true,"cluster":"Sabine59-Cluster","host":"","clone_is_template":false,"template":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","datastore":"","type":"PROVISION_VMWARE_VM","resources":{"nic_list":[{"nic_type":"e1000","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[],"template_controller_list":[],"num_vcpus_per_socket":1,"num_sockets":4,"controller_list":[],"memory_size_mib":6144,"power_state":"poweron","guest_customization":{"type":"","cloud_init":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']","linux_data":null,"customization_name":"","customization_type":"GUEST_OS_LINUX","windows_data":null},"template_disk_list":[],"type":"","account_uuid":"7f90399d-ed3d-1c70-447d-17004ef1bd0a","disk_list":[{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""}]}},"variable_list":[],"name":"VMware_Centos_K8SW"}],"credential_definition_list":[{"username":"centos","description":"","state":"ACTIVE","message_list":[],"uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"editables":{"username":true,"secret":true},"type":"KEY","name":"CENTOS"}],"type":"USER","app_profile_list":[{"deployment_create_list":[{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"482c51a8-724c-4322-a86d-15d1bc352ba0","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"eb1681b5-fd6d-4e7c-8176-46add79c8bb6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"fc9881b9-d7bc-4994-bc30-6e845bd5f8b2"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"d44fd1f3-a4b4-4817-9ed4-e14f532b669d"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"57049c41-f6c0-43c9-a722-5011dc4241d0"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"69aa077f-04e7-4695-966c-0af5338fc6b8"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"584a271c-4b5c-4343-a3fe-49e37c869dab"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"dc2e0f61-3ac3-4b88-b46b-4c05f289e89b"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"584a271c-4b5c-4343-a3fe-49e37c869dab"},"edge_type":"inherent","type":"","uuid":"50c03801-a8c7-4639-8474-f12ba8103183","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"dc2e0f61-3ac3-4b88-b46b-4c05f289e89b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"69aa077f-04e7-4695-966c-0af5338fc6b8"},"edge_type":"inherent","type":"","uuid":"b9e08279-4319-4dc3-bdbd-fab49d362407","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"584a271c-4b5c-4343-a3fe-49e37c869dab"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"fc9881b9-d7bc-4994-bc30-6e845bd5f8b2"},"edge_type":"inherent","type":"","uuid":"5b0072e7-6a69-4831-8dff-32380155e9b8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"d44fd1f3-a4b4-4817-9ed4-e14f532b669d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"57049c41-f6c0-43c9-a722-5011dc4241d0"},"edge_type":"inherent","type":"","uuid":"5dd3e501-7043-44d6-af60-c68faaf4d5e2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"69aa077f-04e7-4695-966c-0af5338fc6b8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"fc9881b9-d7bc-4994-bc30-6e845bd5f8b2"},"edge_type":"inherent","type":"","uuid":"01445364-46b4-435f-bb05-2604559f4add","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"57049c41-f6c0-43c9-a722-5011dc4241d0"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"d44fd1f3-a4b4-4817-9ed4-e14f532b669d"},"edge_type":"inherent","type":"","uuid":"4fdee060-c155-4f9b-9e9f-ef3bf450056b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"57049c41-f6c0-43c9-a722-5011dc4241d0"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"fc9881b9-d7bc-4994-bc30-6e845bd5f8b2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d44fd1f3-a4b4-4817-9ed4-e14f532b669d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"a5ba11b8-3243-42d3-ad3a-c8910474c25a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"57049c41-f6c0-43c9-a722-5011dc4241d0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"cf107f76-14f3-4953-a53a-b3056b62048c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"69aa077f-04e7-4695-966c-0af5338fc6b8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"8e9a2b4d-47a6-4d79-921f-afb80176b37b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"584a271c-4b5c-4343-a3fe-49e37c869dab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dc2e0f61-3ac3-4b88-b46b-4c05f289e89b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"e9bd5ade-69fc-4fcf-a09d-3603addb8831","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"eb1681b5-fd6d-4e7c-8176-46add79c8bb6"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for starting an application","message_list":[],"uuid":"e2df30d3-c1d5-41b8-87de-bc25376f9bbf","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"06f37a0d-7208-46cf-bc89-83a932f4d90f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"430312f2-a02c-47ac-9674-ac62ad05c8f4"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"bf4f1513-42b3-45fc-9eec-3c380f0479e9"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"430312f2-a02c-47ac-9674-ac62ad05c8f4"},"edge_type":"inherent","type":"","uuid":"d0277c2c-eea4-4ff9-a287-957b9fda8dcf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"bf4f1513-42b3-45fc-9eec-3c380f0479e9"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"430312f2-a02c-47ac-9674-ac62ad05c8f4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"2a374ff2-a350-45d7-a50a-cb62e6ad1d91"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bf4f1513-42b3-45fc-9eec-3c380f0479e9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"383365c9-5111-47a7-b60f-bb6d09d9c2cb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"06f37a0d-7208-46cf-bc89-83a932f4d90f"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for restarting an application","message_list":[],"uuid":"560d25ff-4190-4bcd-bdd1-8160aeb8bb34","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"d292ccb3-3c6f-4fa7-8c7f-cfd81dfdd05a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"bef4cd7d-310d-4393-9213-1c981adbb0ed"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"325da6ce-9914-4f68-81fd-0d703b0da6de"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"bef4cd7d-310d-4393-9213-1c981adbb0ed"},"edge_type":"inherent","type":"","uuid":"66d948e7-28e6-4def-8b88-96f95eca9770","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"325da6ce-9914-4f68-81fd-0d703b0da6de"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bef4cd7d-310d-4393-9213-1c981adbb0ed","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"5ac1a255-9680-4498-923d-1c988a73c212"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"325da6ce-9914-4f68-81fd-0d703b0da6de","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"d54dd4d2-2c1f-43c7-99c4-b9ceba25e52e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"d292ccb3-3c6f-4fa7-8c7f-cfd81dfdd05a"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for stopping an application","message_list":[],"uuid":"fbfa25f6-5aba-4207-9df9-cd49604ca183","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"67d99a3a-7305-4d15-8020-8eb45e316504","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"02af1fba-ea8e-4c04-bed0-9673c4a45bfa"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"2da7675f-29e9-482c-a281-e236306b4077"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"02af1fba-ea8e-4c04-bed0-9673c4a45bfa"},"edge_type":"inherent","type":"","uuid":"3cb8ec18-b063-472b-96d8-0268746daf8d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"2da7675f-29e9-482c-a281-e236306b4077"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"02af1fba-ea8e-4c04-bed0-9673c4a45bfa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2da7675f-29e9-482c-a281-e236306b4077","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"6e960390-4097-4b45-980c-d5dbec246e6b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"}],"description":"","message_list":[],"uuid":"5e0e1618-5ec8-4f8f-81a5-3434f499b61e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"67d99a3a-7305-4d15-8020-8eb45e316504"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"51afc2bd-fc2f-4a6c-aa44-edeb1b7ad194","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"d6c09a07-05a5-4ec5-8d9d-c465750a90f3","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"346c52c0-90f3-4ae3-acbb-43cb8b005a3c"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"dfdad4f7-2f1c-4637-8354-2af6e95de908"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"4c577bf3-6497-40d7-86f7-bdc378d5f296"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"d0b51f74-d71a-468c-bc54-31926e8a8854"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"7c314aa9-6fb0-443c-9024-92f4fcc70429"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"346c52c0-90f3-4ae3-acbb-43cb8b005a3c"},"edge_type":"inherent","type":"","uuid":"5f8e7c00-47a5-4831-8d02-594c3c062ebb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"dfdad4f7-2f1c-4637-8354-2af6e95de908"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"dfdad4f7-2f1c-4637-8354-2af6e95de908"},"edge_type":"inherent","type":"","uuid":"8fa4ba45-f06c-485a-a0ae-5006ca652219","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"4c577bf3-6497-40d7-86f7-bdc378d5f296"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"4c577bf3-6497-40d7-86f7-bdc378d5f296"},"edge_type":"inherent","type":"","uuid":"43c9c226-25b6-45dc-b728-3f3de74b9ebf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"d0b51f74-d71a-468c-bc54-31926e8a8854"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"d0b51f74-d71a-468c-bc54-31926e8a8854"},"edge_type":"inherent","type":"","uuid":"1ecd7748-2092-4c8c-8c87-cdfffb64865b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"7c314aa9-6fb0-443c-9024-92f4fcc70429"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"346c52c0-90f3-4ae3-acbb-43cb8b005a3c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dfdad4f7-2f1c-4637-8354-2af6e95de908","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4c577bf3-6497-40d7-86f7-bdc378d5f296","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"f37a859c-b530-4deb-9176-20bdca3576da"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d0b51f74-d71a-468c-bc54-31926e8a8854","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"854e01da-37ea-4910-bcbc-4e93675a13cc"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"7c314aa9-6fb0-443c-9024-92f4fcc70429","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db"}],"description":"","message_list":[],"uuid":"f28fecf2-448c-4051-84a2-722d4e8887fe","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"d6c09a07-05a5-4ec5-8d9d-c465750a90f3"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for scaleout","message_list":[],"uuid":"327817fa-f5e0-4e63-bb3c-a371b324ab23","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"fe1eb7fb-11b4-419d-96c1-df4ab7a95746","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"0489042d-841d-492a-90fd-49de1f25cf7a"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"SCALING","uuid":"0489042d-841d-492a-90fd-49de1f25cf7a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_56a7c02a_9a6e_46e2_8d39_c786833649db"}],"description":"","message_list":[],"uuid":"a57fef61-8fca-4771-a155-aad7e6894df4","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"b0fe829c-194b-49ea-be32-75b510ca30ce","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"fe1eb7fb-11b4-419d-96c1-df4ab7a95746"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for scalein","message_list":[],"uuid":"9b81f7f8-3131-443a-ab32-8cc3ba53763e","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"eb3b955c-5491-42ef-8b95-04dbc2a1d80e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"b8a2413e-3eb8-45bd-8832-145b01427311"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"SCALING","uuid":"b8a2413e-3eb8-45bd-8832-145b01427311","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_56a7c02a_9a6e_46e2_8d39_c786833649db"}],"description":"","message_list":[],"uuid":"b3b75843-e43a-48e1-916c-6ce632354305","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"f1dd3a82-5ab2-4344-a910-34cdd7de29bb","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"eb3b955c-5491-42ef-8b95-04dbc2a1d80e"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"6378a5aa-4685-4f0a-b816-59de5ab91373","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DAG","uuid":"f45f57d2-0b7f-4cd1-af2c-6f220f1b1c71","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d1c5e79d-33b7-44d4-a4a7-345f88a9e04e"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"00c525cc-e3cb-48cc-98d5-fdf8792f527f"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"8854a2ac-3146-4aeb-8063-4fe8f559220e"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"6a3a15ac-d482-491e-b828-af7ca8ca6036"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d1c5e79d-33b7-44d4-a4a7-345f88a9e04e"},"edge_type":"inherent","type":"","uuid":"c5d16004-62b1-4d4c-9fc4-629dfb50a2cf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"00c525cc-e3cb-48cc-98d5-fdf8792f527f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"00c525cc-e3cb-48cc-98d5-fdf8792f527f"},"edge_type":"inherent","type":"","uuid":"22c07b07-c028-4556-8b53-25a6ae4f512f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"8854a2ac-3146-4aeb-8063-4fe8f559220e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"8854a2ac-3146-4aeb-8063-4fe8f559220e"},"edge_type":"inherent","type":"","uuid":"d10110b2-9c36-4593-851a-1b707df84aea","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"6a3a15ac-d482-491e-b828-af7ca8ca6036"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d1c5e79d-33b7-44d4-a4a7-345f88a9e04e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"00c525cc-e3cb-48cc-98d5-fdf8792f527f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8854a2ac-3146-4aeb-8063-4fe8f559220e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"2dac9b64-0e96-4618-aeb2-dfca93f96f39"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"6a3a15ac-d482-491e-b828-af7ca8ca6036","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db"}],"description":"","message_list":[],"uuid":"0061501a-6315-4347-bfee-72c31aea0aa4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"f45f57d2-0b7f-4cd1-af2c-6f220f1b1c71"},"name":"SYS_GEN__Runbook_Deployment_56a7c02a_9a6e_46e2_8d39_c786833649db"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9","min_replicas":"3","state":"ACTIVE","max_replicas":"3","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"}],"substrate_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"2cbb2f6a_deployment"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"dffbc462-195b-482b-882b-d247bffe2389","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"abe758be-4482-47de-bc77-ad17fa8facd7","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"2074c70d-a779-457a-a279-80b10ede6d79"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"4271b92c-9b7c-47b8-bf86-9b41e59abfa7"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"e35cbe11-aa2d-440b-bb1a-bd0bcabcfb72"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"bf37c9f4-fc91-4c3b-91ec-119eb79b74a7"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"71dd6a53-6730-4699-b429-2a4fcb5452ef"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"479e3f61-6d71-49be-8f21-1fc5dfba4eab"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"71dd6a53-6730-4699-b429-2a4fcb5452ef"},"edge_type":"inherent","type":"","uuid":"55540768-4536-4cb1-8168-fbf4fdbe5e5d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"479e3f61-6d71-49be-8f21-1fc5dfba4eab"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"bf37c9f4-fc91-4c3b-91ec-119eb79b74a7"},"edge_type":"inherent","type":"","uuid":"57dbfea9-a746-4d64-a240-be6d7c68dc29","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"71dd6a53-6730-4699-b429-2a4fcb5452ef"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"4271b92c-9b7c-47b8-bf86-9b41e59abfa7"},"edge_type":"inherent","type":"","uuid":"42c9321e-f6a2-4448-b0e6-d815151ce4b1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"e35cbe11-aa2d-440b-bb1a-bd0bcabcfb72"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"e35cbe11-aa2d-440b-bb1a-bd0bcabcfb72"},"edge_type":"inherent","type":"","uuid":"62712a90-3d34-4931-aaa0-e6f8f2b9c5d7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"bf37c9f4-fc91-4c3b-91ec-119eb79b74a7"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"2074c70d-a779-457a-a279-80b10ede6d79"},"edge_type":"inherent","type":"","uuid":"96945ec8-62b1-48f4-a253-f6d6302dbbc5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"e35cbe11-aa2d-440b-bb1a-bd0bcabcfb72"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"2074c70d-a779-457a-a279-80b10ede6d79"},"edge_type":"inherent","type":"","uuid":"a0891a24-151f-4405-8cc5-ca58cea5b0bc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"4271b92c-9b7c-47b8-bf86-9b41e59abfa7"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"2074c70d-a779-457a-a279-80b10ede6d79","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4271b92c-9b7c-47b8-bf86-9b41e59abfa7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"a5ba11b8-3243-42d3-ad3a-c8910474c25a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e35cbe11-aa2d-440b-bb1a-bd0bcabcfb72","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"e9b73ef7-f8cf-4790-983f-d989b7783f9c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bf37c9f4-fc91-4c3b-91ec-119eb79b74a7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"878f2f2b-f4ff-45c2-84c1-bbc61ec8fcb2"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"71dd6a53-6730-4699-b429-2a4fcb5452ef","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"479e3f61-6d71-49be-8f21-1fc5dfba4eab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"f2e3c453-4f9a-4738-b011-23cdaa9df41f","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"abe758be-4482-47de-bc77-ad17fa8facd7"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for starting an application","message_list":[],"uuid":"796c851d-5020-4261-b388-30816e9c75f8","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"79361002-b449-4811-9371-f868a494a3ae","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"47b9dab7-ed6e-45f8-a452-591f511a4b01"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e801a73d-b559-4f97-93f6-8f36a9027078"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"47b9dab7-ed6e-45f8-a452-591f511a4b01"},"edge_type":"inherent","type":"","uuid":"7a7d87d1-718d-4387-91b6-5ea020199db2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e801a73d-b559-4f97-93f6-8f36a9027078"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"47b9dab7-ed6e-45f8-a452-591f511a4b01","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"cc1a50b1-bcee-4730-b74d-587af4540088"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e801a73d-b559-4f97-93f6-8f36a9027078","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"6fc41e32-e075-4c4b-b8ca-29d98ca78bf8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"79361002-b449-4811-9371-f868a494a3ae"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for restarting an application","message_list":[],"uuid":"6457c26a-2028-4801-9f91-fd56f2bdc9ad","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"7b2c4c45-7d99-42b0-a208-a1340d0e06fd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"b50d89c3-2457-4b55-910d-f69f4f5f537c"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"dd34f05d-0114-41c0-9d07-5de94b3abd4c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"b50d89c3-2457-4b55-910d-f69f4f5f537c"},"edge_type":"inherent","type":"","uuid":"2b367425-4d41-4488-809d-1b22efec5661","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"dd34f05d-0114-41c0-9d07-5de94b3abd4c"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b50d89c3-2457-4b55-910d-f69f4f5f537c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"b9f3560c-801b-42e1-8c5e-0d1dad1f8171"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dd34f05d-0114-41c0-9d07-5de94b3abd4c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"d69d0b00-e0a7-4133-8ee0-15ca16497114","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"7b2c4c45-7d99-42b0-a208-a1340d0e06fd"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for stopping an application","message_list":[],"uuid":"c76589e2-0482-4227-9108-3d0fb379c227","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"eb97467b-1643-47b8-b151-fb7d38901fe1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ec98c651-9c67-4447-8f5f-0c0c5767ea12"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"32aa2de1-3337-4c71-a252-96589b8ac6ac"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ec98c651-9c67-4447-8f5f-0c0c5767ea12"},"edge_type":"inherent","type":"","uuid":"0faeb3b5-7e22-4c05-8f8e-a7f4e8fa20f0","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"32aa2de1-3337-4c71-a252-96589b8ac6ac"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ec98c651-9c67-4447-8f5f-0c0c5767ea12","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"32aa2de1-3337-4c71-a252-96589b8ac6ac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"1cbc3063-ea08-4443-abfd-c3737e4b89fa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}],"description":"","message_list":[],"uuid":"8be5c396-898f-4930-a5b1-27d4e6330fa3","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"eb97467b-1643-47b8-b151-fb7d38901fe1"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"fc33fc4d-f0c5-4b91-b4f9-3b52c2a99a15","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"83a8db86-011c-4149-bab7-a2d49c2e870b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"649c9829-6411-4fc6-af4c-428825541c55"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"053963b3-0771-40e6-971f-85edc663d6b7"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"8ce01918-ff4b-4c0d-816d-3602156b3055"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5f228bc8-b7f4-4189-bf28-edeeb86d9f93"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"cf30f9c8-62ac-48a6-879e-30062c930ad2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"649c9829-6411-4fc6-af4c-428825541c55"},"edge_type":"inherent","type":"","uuid":"3531b0eb-6308-4d11-9bdd-3e531bc9aaea","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"053963b3-0771-40e6-971f-85edc663d6b7"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"053963b3-0771-40e6-971f-85edc663d6b7"},"edge_type":"inherent","type":"","uuid":"fd2caedc-39e3-4b0a-86de-f74a8b895c5b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"8ce01918-ff4b-4c0d-816d-3602156b3055"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5f228bc8-b7f4-4189-bf28-edeeb86d9f93"},"edge_type":"inherent","type":"","uuid":"dadde4c5-3d43-4afc-8be1-1e41693fa9b7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"cf30f9c8-62ac-48a6-879e-30062c930ad2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"8ce01918-ff4b-4c0d-816d-3602156b3055"},"edge_type":"inherent","type":"","uuid":"86f35edf-299b-4f8b-83f5-0c31d17a60e0","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5f228bc8-b7f4-4189-bf28-edeeb86d9f93"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"649c9829-6411-4fc6-af4c-428825541c55","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"053963b3-0771-40e6-971f-85edc663d6b7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8ce01918-ff4b-4c0d-816d-3602156b3055","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f0dabcb4-57e3-4e7c-abb7-7f11732941ef"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5f228bc8-b7f4-4189-bf28-edeeb86d9f93","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"dbee90b2-b491-4587-8ebd-905d0585ebdd"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"cf30f9c8-62ac-48a6-879e-30062c930ad2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}],"description":"","message_list":[],"uuid":"fd3b4ba4-9cf5-4d02-8152-07c4551c087f","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"83a8db86-011c-4149-bab7-a2d49c2e870b"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for scaleout","message_list":[],"uuid":"bfcd0b8b-3391-470d-b7c9-4b22eae73974","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"733e61a3-2ed1-49f9-b13b-9fabfe74b07f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"cc37a61d-38cf-4e38-b88e-e113fc42949b"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"SCALING","uuid":"cc37a61d-38cf-4e38-b88e-e113fc42949b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}],"description":"","message_list":[],"uuid":"a47c5331-9ff6-494e-8eac-e10c745601a0","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"659106e1-7cf4-4fa7-ad83-d52076184f6e","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"733e61a3-2ed1-49f9-b13b-9fabfe74b07f"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for scalein","message_list":[],"uuid":"26d0441a-aaed-4f07-93dc-fe6fbfa9e666","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"d27c2c5c-a238-4a90-b28a-bafaf3d04713","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"dd1faec0-3e1d-4b54-b747-1866292b0f35"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"SCALING","uuid":"dd1faec0-3e1d-4b54-b747-1866292b0f35","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}],"description":"","message_list":[],"uuid":"15555fc0-1a54-480a-8aa7-91ef36f22760","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"c64d2fee-8b56-44e5-8865-034789886334","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"d27c2c5c-a238-4a90-b28a-bafaf3d04713"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"8be4a0fc-2a43-43b9-884d-953d4bd02786","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DAG","uuid":"bc5ef2d4-a746-4a5f-86bf-6c164ab0a7ba","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"6ec1b53c-9c19-4ab3-8f3c-eabe70b2709d"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"3763dd81-4285-498f-bc68-145ffa2df95d"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"a2dffd73-88ee-472e-9072-31c01e785510"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"53942139-80e1-457b-a20b-173abf7a834e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"6ec1b53c-9c19-4ab3-8f3c-eabe70b2709d"},"edge_type":"inherent","type":"","uuid":"921bf6e8-88b4-4f65-bdc1-2c1b23f13a7b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"3763dd81-4285-498f-bc68-145ffa2df95d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"3763dd81-4285-498f-bc68-145ffa2df95d"},"edge_type":"inherent","type":"","uuid":"c349f359-6e88-4f68-9a81-65105c9f0237","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"a2dffd73-88ee-472e-9072-31c01e785510"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"a2dffd73-88ee-472e-9072-31c01e785510"},"edge_type":"inherent","type":"","uuid":"c9d054d3-d43c-474f-b5be-c47f4ebe2aa1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"53942139-80e1-457b-a20b-173abf7a834e"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6ec1b53c-9c19-4ab3-8f3c-eabe70b2709d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"3763dd81-4285-498f-bc68-145ffa2df95d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a2dffd73-88ee-472e-9072-31c01e785510","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"02d17512-271d-40c1-86b1-221509483615"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"53942139-80e1-457b-a20b-173abf7a834e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}],"description":"","message_list":[],"uuid":"2eb79ed5-88a7-4e6c-bb30-aad3836b40d4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"bc5ef2d4-a746-4a5f-86bf-6c164ab0a7ba"},"name":"SYS_GEN__Runbook_Deployment_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8","min_replicas":"3","state":"ACTIVE","max_replicas":"9","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"}],"substrate_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"39cf7283_deployment"}],"description":"","action_list":[{"description":"","message_list":[],"uuid":"9593a08d-92d4-4f4d-8378-cd2203a9a46f","name":"Upgrade","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"b37f469d-0e25-4479-ab63-0b19c84ae2d8","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024"},{"kind":"app_task","name":"Upgrade Master","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321"},{"kind":"app_task","name":"Set Version Minion","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34"},{"kind":"app_task","name":"Upgrade Minion","uuid":"4b61f705-dd43-416c-8071-e9904159690b"},{"kind":"app_task","name":"RestartServices","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024"},"edge_type":"user_defined","type":"","uuid":"f9dc20ef-b3b3-4776-b89c-22ecfd58f908","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321"},"edge_type":"user_defined","type":"","uuid":"20a8f316-c37b-4633-8822-61d75cf5dddd","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024"},"edge_type":"user_defined","type":"","uuid":"00204690-aee8-4934-8ea1-74c86714f130","to_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34"},"edge_type":"user_defined","type":"","uuid":"3ab35cda-e48b-49f1-9147-2522b51ea0dd","to_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"4b61f705-dd43-416c-8071-e9904159690b"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"4b61f705-dd43-416c-8071-e9904159690b"},"edge_type":"user_defined","type":"","uuid":"8618c7d4-7731-4e67-befe-a38fd9dec9eb","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6ee65d8a_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Minion"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"4b61f705-dd43-416c-8071-e9904159690b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Minion"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo \"${WORKER_IPS}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"worker${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=worker${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon worker${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"master${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=master${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon master${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"RestartServices"}],"description":"","message_list":[],"uuid":"6f4e46c9-1bb3-46b7-a9a2-48f18d04da93","state":"ACTIVE","variable_list":[{"regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"fbb87bf3-bd50-4c85-9060-916badd4aa36","value":"v1.13.6","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"6ee65d8a_dag","uuid":"b37f469d-0e25-4479-ab63-0b19c84ae2d8"},"name":"68a7ffd0_runbook"}},{"description":"","message_list":[],"uuid":"de150f00-efd5-40ee-8e3a-da7abbc9427b","name":"ScaleOut","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"018613f0-3588-4a27-bd9b-06266dae476f","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"f1037079-92c5-482f-ba0d-7de0f28fbb5b"},{"kind":"app_task","name":"Set Hosts file","uuid":"7c1a8068-0af3-42ef-9083-80c7d0c2c015"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"f1037079-92c5-482f-ba0d-7de0f28fbb5b"},"edge_type":"user_defined","type":"","uuid":"7c7b1a63-e73a-4fe1-baaa-68db376fe1f8","to_task_reference":{"kind":"app_task","name":"Set Hosts file","uuid":"7c1a8068-0af3-42ef-9083-80c7d0c2c015"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"03b33121_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"SCALING","uuid":"f1037079-92c5-482f-ba0d-7de0f28fbb5b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"7c1a8068-0af3-42ef-9083-80c7d0c2c015","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMINION_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n  \techo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Hosts file"}],"description":"","message_list":[],"uuid":"13750f72-8c26-4a5a-b0b7-b38c01a354d2","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"2c8a1e6e-8943-46df-b329-1935d204920a","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"03b33121_dag","uuid":"018613f0-3588-4a27-bd9b-06266dae476f"},"name":"00cf5417_runbook"}},{"description":"","message_list":[],"uuid":"26052caf-9d18-4a96-af6b-06b6416ba03e","name":"ScaleIn","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"c4268c07-b799-45fd-ae43-1c1d369fc644","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"14f41976-12a0-49a6-a733-e7a0fe7d1a8e"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e72a9133_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"SCALING","uuid":"14f41976-12a0-49a6-a733-e7a0fe7d1a8e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale In"}],"description":"","message_list":[],"uuid":"b66ff3db-62a1-4da1-b063-26a500f0e4ef","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"3f45c72e-02e5-4819-b953-5cc23a6e211e","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"e72a9133_dag","uuid":"c4268c07-b799-45fd-ae43-1c1d369fc644"},"name":"96546f6c_runbook"}},{"description":"System action for creating an application","message_list":[],"uuid":"6cb0a342-878a-40ce-8e17-d1865476d80c","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix","uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},"retries":"0","description":"","type":"DAG","uuid":"b1fb4c76-20a5-410d-abad-19bcd40c9dad","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"36673013-adc6-4e2c-9b6d-fed1191c7a39"},{"kind":"app_task","name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"9ae69b6c-ab68-458e-90d3-5a3c9f134152"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277_1","uuid":"552c1e56-14cf-419f-af71-d04421dd5a0d"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"8af6829d-3ce0-405f-961c-c7797bd0f7f9"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5490a56e-e5d7-4ae4-b5c7-48862bc34375"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"9c3a8622-4daf-4d44-b276-4b09405e1b59"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"0470b8e9-fc13-4edc-9917-63f07edd35af"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"670cdbb1-d885-476a-915d-636a3134c46b"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"264068e8-0f8f-4b71-b70e-871549dea886"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"eab44be1-fb1f-4ae2-9059-28f0f10760c4"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"77eb5aca-40c4-471e-87e6-cc899a1277c2"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d704992c-ea19-430c-913e-a4e716b1e8d6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"264068e8-0f8f-4b71-b70e-871549dea886"},"edge_type":"inherent","type":"","uuid":"c67c2068-500e-4d28-a911-ce17fb3851d2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d704992c-ea19-430c-913e-a4e716b1e8d6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"0470b8e9-fc13-4edc-9917-63f07edd35af"},"edge_type":"inherent","type":"","uuid":"8ddee3bf-77f7-4a3a-8d30-e4f398fc7bdb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"264068e8-0f8f-4b71-b70e-871549dea886"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"36673013-adc6-4e2c-9b6d-fed1191c7a39"},"edge_type":"inherent","type":"","uuid":"0da4ffba-0634-4af6-ab70-5adb75427769","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"8af6829d-3ce0-405f-961c-c7797bd0f7f9"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"9c3a8622-4daf-4d44-b276-4b09405e1b59"},"edge_type":"inherent","type":"","uuid":"3c81aba4-f4ab-4bd1-ad56-e9059a396c49","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"0470b8e9-fc13-4edc-9917-63f07edd35af"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"36673013-adc6-4e2c-9b6d-fed1191c7a39"},"edge_type":"inherent","type":"","uuid":"dc06fb51-7673-49d0-a054-f4d553941fc1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"9c3a8622-4daf-4d44-b276-4b09405e1b59"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"8af6829d-3ce0-405f-961c-c7797bd0f7f9"},"edge_type":"inherent","type":"","uuid":"c47f2981-2bff-49c7-95a7-349c75651552","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"9c3a8622-4daf-4d44-b276-4b09405e1b59"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"eab44be1-fb1f-4ae2-9059-28f0f10760c4"},"edge_type":"inherent","type":"","uuid":"fad24635-993e-499f-ab91-cdcba40f2aa9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"77eb5aca-40c4-471e-87e6-cc899a1277c2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"670cdbb1-d885-476a-915d-636a3134c46b"},"edge_type":"inherent","type":"","uuid":"95a5e882-3cd6-4f2b-b16b-9612ba3c1d6a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"eab44be1-fb1f-4ae2-9059-28f0f10760c4"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277_1","uuid":"552c1e56-14cf-419f-af71-d04421dd5a0d"},"edge_type":"inherent","type":"","uuid":"113376a1-c84c-46a6-9960-b1e07ad62a7c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5490a56e-e5d7-4ae4-b5c7-48862bc34375"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5490a56e-e5d7-4ae4-b5c7-48862bc34375"},"edge_type":"inherent","type":"","uuid":"abf25768-5985-4802-a633-7f7ce1affc7a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"670cdbb1-d885-476a-915d-636a3134c46b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"9ae69b6c-ab68-458e-90d3-5a3c9f134152"},"edge_type":"inherent","type":"","uuid":"6f5121ba-2f5c-4458-8615-7c56a138d948","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5490a56e-e5d7-4ae4-b5c7-48862bc34375"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"9ae69b6c-ab68-458e-90d3-5a3c9f134152"},"edge_type":"inherent","type":"","uuid":"3319b777-4b58-4f45-9374-d2d0648d4d70","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277_1","uuid":"552c1e56-14cf-419f-af71-d04421dd5a0d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"5490a56e-e5d7-4ae4-b5c7-48862bc34375"},"edge_type":"dependency","type":"","uuid":"16610ed0-086b-4e20-a321-a9a30ed1d6dc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"0470b8e9-fc13-4edc-9917-63f07edd35af"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"9c3a8622-4daf-4d44-b276-4b09405e1b59"},"edge_type":"dependency","type":"","uuid":"1ecc2e02-c38d-424b-8f94-997f51325e9e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"670cdbb1-d885-476a-915d-636a3134c46b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"36673013-adc6-4e2c-9b6d-fed1191c7a39","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"9ae69b6c-ab68-458e-90d3-5a3c9f134152","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"552c1e56-14cf-419f-af71-d04421dd5a0d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"a5ba11b8-3243-42d3-ad3a-c8910474c25a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277_1"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8af6829d-3ce0-405f-961c-c7797bd0f7f9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"a5ba11b8-3243-42d3-ad3a-c8910474c25a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5490a56e-e5d7-4ae4-b5c7-48862bc34375","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"e9b73ef7-f8cf-4790-983f-d989b7783f9c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9c3a8622-4daf-4d44-b276-4b09405e1b59","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"cf107f76-14f3-4953-a53a-b3056b62048c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0470b8e9-fc13-4edc-9917-63f07edd35af","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"8e9a2b4d-47a6-4d79-921f-afb80176b37b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"670cdbb1-d885-476a-915d-636a3134c46b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"878f2f2b-f4ff-45c2-84c1-bbc61ec8fcb2"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"264068e8-0f8f-4b71-b70e-871549dea886","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"eab44be1-fb1f-4ae2-9059-28f0f10760c4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"77eb5aca-40c4-471e-87e6-cc899a1277c2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d704992c-ea19-430c-913e-a4e716b1e8d6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"a5f4a6eb-d2aa-4909-be74-9d2e60702b94","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792","uuid":"b1fb4c76-20a5-410d-abad-19bcd40c9dad"},"name":"SYS_GEN__Runbook_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"}},{"description":"System action for starting an application","message_list":[],"uuid":"4e578062-4eed-4a12-a4ef-57ab0fac99d7","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix","uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},"retries":"0","description":"","type":"DAG","uuid":"3a608aac-3a0f-451d-91e2-e5dbc824b902","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"a0bfbda4-5a8c-47a1-94dd-a9d2a428dbfb"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"efc94956-3558-48c6-9702-11137f11f70f"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"70898b70-cced-4b9d-afa8-a56f62811429"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5c201daf-25dd-49dc-aa10-a61fabbb7799"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"efc94956-3558-48c6-9702-11137f11f70f"},"edge_type":"inherent","type":"","uuid":"2e8fc0d4-5323-439d-b204-57561c82b9e1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5c201daf-25dd-49dc-aa10-a61fabbb7799"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"a0bfbda4-5a8c-47a1-94dd-a9d2a428dbfb"},"edge_type":"inherent","type":"","uuid":"6ac5f9a9-3f91-4ecc-9e78-a3840b9e55b7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"70898b70-cced-4b9d-afa8-a56f62811429"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a0bfbda4-5a8c-47a1-94dd-a9d2a428dbfb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"cc1a50b1-bcee-4730-b74d-587af4540088"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"efc94956-3558-48c6-9702-11137f11f70f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"2a374ff2-a350-45d7-a50a-cb62e6ad1d91"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"70898b70-cced-4b9d-afa8-a56f62811429","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5c201daf-25dd-49dc-aa10-a61fabbb7799","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"56a1289b-f283-4fce-8370-49be5192ce4a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792","uuid":"3a608aac-3a0f-451d-91e2-e5dbc824b902"},"name":"SYS_GEN__Runbook_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"}},{"description":"System action for restarting an application","message_list":[],"uuid":"f3bdf790-9e3a-47cc-a317-10a7a8e6b9be","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix","uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},"retries":"0","description":"","type":"DAG","uuid":"2aeced5d-5866-453b-8f5c-b53f3c9d648c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"86f37d75-5978-42e0-bccf-fda6cb708767"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"0b6c4797-f7eb-4aeb-8d44-3871fae4ef3b"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"be227463-a902-456a-9946-02f029e38b5a"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b2f9f0b9-ca79-4007-a0f0-5d69b04d5e74"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"86f37d75-5978-42e0-bccf-fda6cb708767"},"edge_type":"inherent","type":"","uuid":"3fc031d5-fe9e-441a-840c-861beb7bc825","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"be227463-a902-456a-9946-02f029e38b5a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"0b6c4797-f7eb-4aeb-8d44-3871fae4ef3b"},"edge_type":"inherent","type":"","uuid":"285a4e2d-809b-4228-9b29-bd635d656464","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b2f9f0b9-ca79-4007-a0f0-5d69b04d5e74"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"86f37d75-5978-42e0-bccf-fda6cb708767","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"5ac1a255-9680-4498-923d-1c988a73c212"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0b6c4797-f7eb-4aeb-8d44-3871fae4ef3b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"b9f3560c-801b-42e1-8c5e-0d1dad1f8171"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"be227463-a902-456a-9946-02f029e38b5a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b2f9f0b9-ca79-4007-a0f0-5d69b04d5e74","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"b36624d5-54d1-43b0-a8ce-29b6eed01510","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792","uuid":"2aeced5d-5866-453b-8f5c-b53f3c9d648c"},"name":"SYS_GEN__Runbook_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"}},{"description":"System action for stopping an application","message_list":[],"uuid":"c0ed6c93-b478-4c27-a013-0dc259ebcef4","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix","uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},"retries":"0","description":"","type":"DAG","uuid":"14cc97fe-e11a-43d6-80ab-448a028bca78","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"df4d88f3-a94a-47c6-8b51-335da2a7a74f"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ee47670b-e768-4cf5-9655-9b3c985f2de0"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"a20c2886-ef64-4b7a-bf99-c4ff7030a13e"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"2b815560-ba38-44e0-87a3-165f26cb67fe"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"df4d88f3-a94a-47c6-8b51-335da2a7a74f"},"edge_type":"inherent","type":"","uuid":"cb473275-3a5c-433a-ad4a-91024636ad9f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"a20c2886-ef64-4b7a-bf99-c4ff7030a13e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ee47670b-e768-4cf5-9655-9b3c985f2de0"},"edge_type":"inherent","type":"","uuid":"731aa6a8-a1df-4971-9dfa-baec688e83dc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"2b815560-ba38-44e0-87a3-165f26cb67fe"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"df4d88f3-a94a-47c6-8b51-335da2a7a74f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ee47670b-e768-4cf5-9655-9b3c985f2de0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a20c2886-ef64-4b7a-bf99-c4ff7030a13e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"6e960390-4097-4b45-980c-d5dbec246e6b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2b815560-ba38-44e0-87a3-165f26cb67fe","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"1cbc3063-ea08-4443-abfd-c3737e4b89fa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"}],"description":"","message_list":[],"uuid":"21beed35-0ea8-48c9-9822-41940cb07599","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792","uuid":"14cc97fe-e11a-43d6-80ab-448a028bca78"},"name":"SYS_GEN__Runbook_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"b827d239-cd39-45ac-9c35-9fb5c5f4f8ba","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix","uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},"retries":"0","description":"","type":"DAG","uuid":"3c71414c-b50f-4050-bc90-67099b1877e8","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"cae54668-6943-4e36-be59-62b67bf624ea"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b1ae6bd6-4a99-4c35-8651-3aa503588bf4"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5443fb84-ea91-4cc3-bd3d-340718cb4f34"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9b0148a8-d2f8-4e41-a057-bdad6927653e"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f551c9d9-7171-45b6-a1f2-5e7ca3fb29f2"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"50469b80-f982-4b48-9cec-235093f0787f"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"3cf845e8-19b8-4781-a34c-f2730ebf7d24"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"f5bd464c-dcee-4575-9494-bf4effe7df6a"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"4fc539bc-71d2-448b-b88d-97d786d772d0"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"7d1c8eb0-7fd6-46d8-9ec4-990a1f7e81c8"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"cae54668-6943-4e36-be59-62b67bf624ea"},"edge_type":"inherent","type":"","uuid":"245cdb66-dd10-439e-989a-d352c450b77a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5443fb84-ea91-4cc3-bd3d-340718cb4f34"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5443fb84-ea91-4cc3-bd3d-340718cb4f34"},"edge_type":"inherent","type":"","uuid":"8b7bee2c-0062-43ac-9550-ed6e452e2452","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"50469b80-f982-4b48-9cec-235093f0787f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"50469b80-f982-4b48-9cec-235093f0787f"},"edge_type":"inherent","type":"","uuid":"0aee1cf5-0718-4028-ad66-53a516989113","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"3cf845e8-19b8-4781-a34c-f2730ebf7d24"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"3cf845e8-19b8-4781-a34c-f2730ebf7d24"},"edge_type":"inherent","type":"","uuid":"aa7f6400-5e30-43bf-9fa9-0908bc52254e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"4fc539bc-71d2-448b-b88d-97d786d772d0"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b1ae6bd6-4a99-4c35-8651-3aa503588bf4"},"edge_type":"inherent","type":"","uuid":"a79b0d2f-a64d-4507-894a-20958c0959fa","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9b0148a8-d2f8-4e41-a057-bdad6927653e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9b0148a8-d2f8-4e41-a057-bdad6927653e"},"edge_type":"inherent","type":"","uuid":"ae97d403-8cd3-4580-bd54-1bc9bb08c384","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f551c9d9-7171-45b6-a1f2-5e7ca3fb29f2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"f5bd464c-dcee-4575-9494-bf4effe7df6a"},"edge_type":"inherent","type":"","uuid":"327067e9-2824-4d23-8182-f8c6a8ba5592","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"7d1c8eb0-7fd6-46d8-9ec4-990a1f7e81c8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f551c9d9-7171-45b6-a1f2-5e7ca3fb29f2"},"edge_type":"inherent","type":"","uuid":"c9096f9c-be95-43cd-9cbb-3feadccacd6b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"f5bd464c-dcee-4575-9494-bf4effe7df6a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"50469b80-f982-4b48-9cec-235093f0787f"},"edge_type":"create_action_edge","type":"","uuid":"30168659-8676-4236-a9a9-65eb087ae69e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"f5bd464c-dcee-4575-9494-bf4effe7df6a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f551c9d9-7171-45b6-a1f2-5e7ca3fb29f2"},"edge_type":"create_action_edge","type":"","uuid":"fb3bc394-9fb6-4dee-91ce-2031b3363f73","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"3cf845e8-19b8-4781-a34c-f2730ebf7d24"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5443fb84-ea91-4cc3-bd3d-340718cb4f34"},"edge_type":"dependency","type":"","uuid":"6e61df40-e913-4ef5-9d82-098479576e4c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f551c9d9-7171-45b6-a1f2-5e7ca3fb29f2"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"cae54668-6943-4e36-be59-62b67bf624ea","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b1ae6bd6-4a99-4c35-8651-3aa503588bf4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5443fb84-ea91-4cc3-bd3d-340718cb4f34","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9b0148a8-d2f8-4e41-a057-bdad6927653e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f551c9d9-7171-45b6-a1f2-5e7ca3fb29f2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f0dabcb4-57e3-4e7c-abb7-7f11732941ef"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"50469b80-f982-4b48-9cec-235093f0787f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"f37a859c-b530-4deb-9176-20bdca3576da"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3cf845e8-19b8-4781-a34c-f2730ebf7d24","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"854e01da-37ea-4910-bcbc-4e93675a13cc"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f5bd464c-dcee-4575-9494-bf4effe7df6a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"dbee90b2-b491-4587-8ebd-905d0585ebdd"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"4fc539bc-71d2-448b-b88d-97d786d772d0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"7d1c8eb0-7fd6-46d8-9ec4-990a1f7e81c8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f"}],"description":"","message_list":[],"uuid":"26a4da69-a787-4141-8f03-bf4f1e9a833d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792","uuid":"3c71414c-b50f-4050-bc90-67099b1877e8"},"name":"SYS_GEN__Runbook_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"3243dc06-3611-4823-ae3a-ca2fdb7a8a47","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix","uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},"retries":"0","description":"","type":"DAG","uuid":"3efbcdc6-7c04-4d6a-b70e-23100a842665","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"217bd1a9-010d-4299-9f05-645f30d0cf0c"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0a09b634-b29e-4281-983a-d3a3ce85447e"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9f2f3aab-d8b8-4754-a152-f164eb669175"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"5acd10bb-ec87-43bb-90c1-fb66d9cc30ad"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"c83b7fe7-b32d-46ca-b863-315c6df7c871"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"3aa46972-f6cc-462f-87e0-0608b14ee058"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"dcfdd2aa-e4e6-4d2b-86d4-7e03ad4b91be"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"910dd2c3-d71d-462f-848d-e987cecf8ca3"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"217bd1a9-010d-4299-9f05-645f30d0cf0c"},"edge_type":"inherent","type":"","uuid":"ff75042e-771f-4ae3-a089-605ce8dca6e0","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"5acd10bb-ec87-43bb-90c1-fb66d9cc30ad"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"5acd10bb-ec87-43bb-90c1-fb66d9cc30ad"},"edge_type":"inherent","type":"","uuid":"ccd6e0fd-f863-48dc-9ce0-7e4a72de57e1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"c83b7fe7-b32d-46ca-b863-315c6df7c871"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"c83b7fe7-b32d-46ca-b863-315c6df7c871"},"edge_type":"inherent","type":"","uuid":"2882f525-eef0-41d0-83ec-0c7a4d75c7a1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db","uuid":"910dd2c3-d71d-462f-848d-e987cecf8ca3"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0a09b634-b29e-4281-983a-d3a3ce85447e"},"edge_type":"inherent","type":"","uuid":"7e1d9084-fe5a-4f31-aeb1-d77f1f630df8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9f2f3aab-d8b8-4754-a152-f164eb669175"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9f2f3aab-d8b8-4754-a152-f164eb669175"},"edge_type":"inherent","type":"","uuid":"0c07a40f-2112-4967-8ad0-19e0d3b9d81b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"3aa46972-f6cc-462f-87e0-0608b14ee058"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"3aa46972-f6cc-462f-87e0-0608b14ee058"},"edge_type":"inherent","type":"","uuid":"bb86477a-95f8-4cef-9e81-71000ad44e96","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f","uuid":"dcfdd2aa-e4e6-4d2b-86d4-7e03ad4b91be"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"5acd10bb-ec87-43bb-90c1-fb66d9cc30ad"},"edge_type":"create_action_edge","type":"","uuid":"de5afe9b-dd95-4c58-b557-6f7dbaf16a5b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"3aa46972-f6cc-462f-87e0-0608b14ee058"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9f2f3aab-d8b8-4754-a152-f164eb669175"},"edge_type":"create_action_edge","type":"","uuid":"95aa57fe-3d65-4155-8027-936c040d0cc6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"c83b7fe7-b32d-46ca-b863-315c6df7c871"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"217bd1a9-010d-4299-9f05-645f30d0cf0c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0a09b634-b29e-4281-983a-d3a3ce85447e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"9f2f3aab-d8b8-4754-a152-f164eb669175","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"5acd10bb-ec87-43bb-90c1-fb66d9cc30ad","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c83b7fe7-b32d-46ca-b863-315c6df7c871","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_07dace66_598d_4d29_a271_7965340bd074","uuid":"2dac9b64-0e96-4618-aeb2-dfca93f96f39"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_07dace66_598d_4d29_a271_7965340bd074"},{"target_any_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3aa46972-f6cc-462f-87e0-0608b14ee058","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26","uuid":"02d17512-271d-40c1-86b1-221509483615"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_caf4c659_7d09_49d7_91f5_cfe1c85dbf26"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"dcfdd2aa-e4e6-4d2b-86d4-7e03ad4b91be","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_7306a3c9_9a76_45c2_90c9_27729ab58b5f"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment","uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"910dd2c3-d71d-462f-848d-e987cecf8ca3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_56a7c02a_9a6e_46e2_8d39_c786833649db"}],"description":"","message_list":[],"uuid":"64a2af4d-9f4e-45db-9869-d89bef4b0665","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792","uuid":"3efbcdc6-7c04-4d6a-b70e-23100a842665"},"name":"SYS_GEN__Runbook_Application_ec3b1924_dd2a_4b53_894a_86b92cc06792"}}],"message_list":[],"uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a","state":"ACTIVE","dependency_list":[{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AHV_Centos_K8SW","action_name":"action_create","action_resource_name":"Nutanix","getter_resource_name":"AHV_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AHV_Centos_K8SM","action_name":"action_create","action_resource_name":"Nutanix","getter_resource_name":"AHV_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"ServiceCfg","setter_resource_name":"Kubernetes_Master","action_name":"action_delete","action_resource_name":"Nutanix","getter_resource_name":"AHV_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"}],"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"c47f3c5e-4f48-4101-a00e-8fd6bc570713","value":"ahv-kubenetes-cluster","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_NAME"},{"regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"bc66ae83-3b68-445b-9e68-c722e698cf95","value":"v1.12.8","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"69e9beaf-f747-41c2-b963-dfe2db42c12e","value":"17.03.3.ce","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"aff4cc9c-7363-4398-840b-a6449db1a159","value":"10.200.0.0\/16","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"a06508cb-681e-43c6-9dae-108e173c7f70","value":"10.32.0.0\/24","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_SERVICE_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"8a3c0063-9875-4dbb-8a3e-680082cc3ef8","value":"10.32.0.10","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_DNS_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"281456e9-fdfe-4d86-8a78-5bfa211b9a3a","value":"flannel","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"a770ead2-46c0-47c1-b6f5-52d2de71b5e4","value":"10.46.34.95","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_CLUSTER_IP"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"df3b5d86-1bcd-4b9e-acda-e893dd0ff41f","value":"10.46.34.96","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_DATA_SERVICE_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"18a0524d-bb44-4883-8827-663e78c031f4","value":"admin","label":"","state":"ACTIVE","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_USERNAME"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"442b5766-fb5d-4c58-8631-090bf7403684","value":"","label":"","state":"ACTIVE","attrs":{"is_secret_modified":false,"secret_reference":{"uuid":"fff01c73-d839-4cea-86e3-18b770de7f10"},"type":""},"editables":{"value":true},"is_hidden":false,"type":"SECRET","options":{},"name":"PE_PASSWORD"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"e8b38cbc-ef73-4dc4-b05c-078055276afd","value":"default-container-69049036518763","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_CONTAINER_NAME"}],"name":"Nutanix"},{"deployment_create_list":[{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"8638f7d1-88bf-45bf-9ba9-701dbdc8670d","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"fc5dcc0d-69bb-43a0-800a-2a82826622c6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"113fcf5c-1fd3-40ef-acf0-785d399666e9"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"a3f278d1-c02e-4875-bec4-e687307cb4a8"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"e33d622f-51b6-4707-b40a-18431833477b"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"10df7947-05b9-44dd-b829-c16b0576db0e"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"eea755e0-8bb8-42d4-80b8-0a95ee19a9ac"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"10df7947-05b9-44dd-b829-c16b0576db0e"},"edge_type":"inherent","type":"","uuid":"24ac90c3-129e-4cec-8fd4-ed320adb259f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"eea755e0-8bb8-42d4-80b8-0a95ee19a9ac"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"e33d622f-51b6-4707-b40a-18431833477b"},"edge_type":"inherent","type":"","uuid":"0439adfb-b72e-4ba5-b5d6-3b11e37fab89","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"10df7947-05b9-44dd-b829-c16b0576db0e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"113fcf5c-1fd3-40ef-acf0-785d399666e9"},"edge_type":"inherent","type":"","uuid":"73aab60b-38fe-4847-81ff-cf196fc04665","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"a3f278d1-c02e-4875-bec4-e687307cb4a8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"a3f278d1-c02e-4875-bec4-e687307cb4a8"},"edge_type":"inherent","type":"","uuid":"9982f4f7-99c2-4539-92da-ea1837a9a350","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"e33d622f-51b6-4707-b40a-18431833477b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"113fcf5c-1fd3-40ef-acf0-785d399666e9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a3f278d1-c02e-4875-bec4-e687307cb4a8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"f339ef9a-5f78-45d2-9ed7-16ed727014af"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e33d622f-51b6-4707-b40a-18431833477b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2db0982c-f71c-4b8e-a7fd-bcc922c14767"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"10df7947-05b9-44dd-b829-c16b0576db0e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"eea755e0-8bb8-42d4-80b8-0a95ee19a9ac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"95142d26-91fc-4560-a03e-f0e290224249","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"fc5dcc0d-69bb-43a0-800a-2a82826622c6"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for starting an application","message_list":[],"uuid":"b77cfd23-bfa8-4948-b7e4-5e824092ebce","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"b80fde65-1869-433f-8150-3893b69c8b90","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e467f88e-bb67-4129-b4b6-e6ecd194ef1f"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"10f5e926-f945-41f2-ab04-94952f5e2b9e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e467f88e-bb67-4129-b4b6-e6ecd194ef1f"},"edge_type":"inherent","type":"","uuid":"95bb9d88-81af-439e-b2e7-a0ab1150953f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"10f5e926-f945-41f2-ab04-94952f5e2b9e"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e467f88e-bb67-4129-b4b6-e6ecd194ef1f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"b28a41b5-ea80-4bcd-b2b7-9fc4432853b6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"10f5e926-f945-41f2-ab04-94952f5e2b9e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"3da47f06-a394-483d-a3c9-89293444639c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"b80fde65-1869-433f-8150-3893b69c8b90"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for restarting an application","message_list":[],"uuid":"cec94f01-4983-4a9f-8406-66a0be1e6d2e","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"0d0570df-e8d3-4566-9778-0311f555c6d7","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"5f532764-3426-448c-b6e6-a43acc721aa6"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2fb9858c-4c82-4c37-a8d1-a9cdf0667725"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"5f532764-3426-448c-b6e6-a43acc721aa6"},"edge_type":"inherent","type":"","uuid":"1a42448e-e5e0-4af4-b771-21c254e383f7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2fb9858c-4c82-4c37-a8d1-a9cdf0667725"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5f532764-3426-448c-b6e6-a43acc721aa6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"cb7b9ecd-3057-4bac-a022-82f8fa95bca7"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2fb9858c-4c82-4c37-a8d1-a9cdf0667725","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"9c8494e6-9b9f-4045-b442-e4f33d0e4085","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"0d0570df-e8d3-4566-9778-0311f555c6d7"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for stopping an application","message_list":[],"uuid":"4e2f140b-2bcf-434f-aa51-496c126d4a0b","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"0a11fa1b-b433-46fb-95e0-cf253a4cb08a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"51378e82-18ea-49ea-9cdc-e133ac8622d8"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"b2e32c60-46bd-4ff4-9eee-a1ac19fa0467"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"51378e82-18ea-49ea-9cdc-e133ac8622d8"},"edge_type":"inherent","type":"","uuid":"84205393-9ec7-4974-950d-383a4fe3e0b3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"b2e32c60-46bd-4ff4-9eee-a1ac19fa0467"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"51378e82-18ea-49ea-9cdc-e133ac8622d8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b2e32c60-46bd-4ff4-9eee-a1ac19fa0467","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"40413f8e-7fea-4257-9d12-b44202526b69"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"c13f03e2-ae2e-40ee-ad3b-2ba4fa408ece","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"0a11fa1b-b433-46fb-95e0-cf253a4cb08a"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"b5cb6f39-19e9-4f58-bbf4-e861dec3f17f","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"a093e6db-eb26-4508-8cfc-407a79f9c869","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"70afc3a2-d255-410f-91cd-88d122ee7557"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"a1c48927-4915-4e38-98ae-5169824f2a8d"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"9a800fb2-7803-4346-8127-bbaba532f1a8"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e90737b7-7426-4d41-a256-747dd6825b17"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"98b8ea90-88ec-4d29-9d6f-5a4c2abf4d78"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"70afc3a2-d255-410f-91cd-88d122ee7557"},"edge_type":"inherent","type":"","uuid":"63d1da6f-fa07-468b-b02f-67f6bc776325","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"a1c48927-4915-4e38-98ae-5169824f2a8d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"a1c48927-4915-4e38-98ae-5169824f2a8d"},"edge_type":"inherent","type":"","uuid":"65466d76-34bb-4bf1-9866-fb16ad4f4b5d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"9a800fb2-7803-4346-8127-bbaba532f1a8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e90737b7-7426-4d41-a256-747dd6825b17"},"edge_type":"inherent","type":"","uuid":"80b54e00-daef-4822-b1f8-4f7dae576a7c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"98b8ea90-88ec-4d29-9d6f-5a4c2abf4d78"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"9a800fb2-7803-4346-8127-bbaba532f1a8"},"edge_type":"inherent","type":"","uuid":"1066bcce-0029-4d8d-9512-471a4862a400","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"e90737b7-7426-4d41-a256-747dd6825b17"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"70afc3a2-d255-410f-91cd-88d122ee7557","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a1c48927-4915-4e38-98ae-5169824f2a8d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9a800fb2-7803-4346-8127-bbaba532f1a8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ceaf6d0-347f-4cc0-9225-4ab2264e6c5e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e90737b7-7426-4d41-a256-747dd6825b17","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"7ff106d6-4bc2-4197-ba14-4704842f88b4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"98b8ea90-88ec-4d29-9d6f-5a4c2abf4d78","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_d0f58896_b535_451c_a462_71690d7d9c43"}],"description":"","message_list":[],"uuid":"24a715b1-2e5e-45dd-8890-d713149caef6","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"a093e6db-eb26-4508-8cfc-407a79f9c869"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for scaleout","message_list":[],"uuid":"1b08037d-180e-416b-999d-696bf0cb3f6f","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"0cdfdd53-b5f1-4212-aec6-812c083b64c3","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"493a4433-a48f-4a26-b2dd-d42c4c10f6e9"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"SCALING","uuid":"493a4433-a48f-4a26-b2dd-d42c4c10f6e9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_d0f58896_b535_451c_a462_71690d7d9c43"}],"description":"","message_list":[],"uuid":"4a6bd6ac-ee41-4ebf-b430-8d759cf8da18","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"1b4721cc-b61d-4c1f-a063-64dd182a71f5","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"0cdfdd53-b5f1-4212-aec6-812c083b64c3"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for scalein","message_list":[],"uuid":"360efd4e-4d63-421f-a1e0-6ccca13918e6","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"65cc97a4-6c9f-47e4-9341-88ccbd29a69c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"97f635fb-05d6-4484-ae68-2baa46053eab"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"SCALING","uuid":"97f635fb-05d6-4484-ae68-2baa46053eab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_d0f58896_b535_451c_a462_71690d7d9c43"}],"description":"","message_list":[],"uuid":"5cd6deec-1b31-4579-ad56-9b99f1769e8c","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"fb52a81b-1a76-4adc-b919-46fae07fb454","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"65cc97a4-6c9f-47e4-9341-88ccbd29a69c"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"6e01a6dc-ebcf-426f-8923-63b59ad57604","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DAG","uuid":"e4d0244b-b7a1-4fa4-a885-e43cf67bcc9b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"898c95ee-22a7-43c1-8514-2bbecfcfb8e4"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"8c9816e8-697a-48b8-b741-4fe9c850adbd"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"72b1811a-feaf-49c4-8212-484cbb229f3b"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"be2cbb51-1468-42f6-96c8-f6c0ae7138aa"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"898c95ee-22a7-43c1-8514-2bbecfcfb8e4"},"edge_type":"inherent","type":"","uuid":"bed63be1-cc2f-4bc7-8e3a-e9e710e3a3c9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"8c9816e8-697a-48b8-b741-4fe9c850adbd"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"72b1811a-feaf-49c4-8212-484cbb229f3b"},"edge_type":"inherent","type":"","uuid":"8e26216a-20cd-4654-9779-5b9d5631a1aa","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"be2cbb51-1468-42f6-96c8-f6c0ae7138aa"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"8c9816e8-697a-48b8-b741-4fe9c850adbd"},"edge_type":"inherent","type":"","uuid":"4311e973-ce90-42f1-8e41-ee72aa620589","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"72b1811a-feaf-49c4-8212-484cbb229f3b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"898c95ee-22a7-43c1-8514-2bbecfcfb8e4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"8c9816e8-697a-48b8-b741-4fe9c850adbd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"72b1811a-feaf-49c4-8212-484cbb229f3b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"61b0ed56-6de5-429e-af3e-829afbc0aab5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"be2cbb51-1468-42f6-96c8-f6c0ae7138aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_d0f58896_b535_451c_a462_71690d7d9c43"}],"description":"","message_list":[],"uuid":"45d483d7-709c-418e-b895-61ad3820a60b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"e4d0244b-b7a1-4fa4-a885-e43cf67bcc9b"},"name":"SYS_GEN__Runbook_Deployment_d0f58896_b535_451c_a462_71690d7d9c43"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021","min_replicas":"3","state":"ACTIVE","max_replicas":"3","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"}],"substrate_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"85fa2262_deployment"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"7b186c70-bd07-464f-b87d-9bf857aa0e2f","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"f3241b2d-b015-4b2b-a721-8a8c14dc6ad0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"fd19a204-d868-42d1-a3f1-53754e384b68"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"ad01cfb0-31b9-49f1-ba25-4e75f5086ece"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"5e13ca8a-1272-4a7a-9c1e-100c729ff0f5"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"3b15ce95-6971-4cf6-884e-ba35f43e14e6"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5c63d8a0-b404-46fa-959d-edd6575e5fa6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"3b15ce95-6971-4cf6-884e-ba35f43e14e6"},"edge_type":"inherent","type":"","uuid":"05665692-09c1-4a2a-a07b-b8537285f5f8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5c63d8a0-b404-46fa-959d-edd6575e5fa6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"5e13ca8a-1272-4a7a-9c1e-100c729ff0f5"},"edge_type":"inherent","type":"","uuid":"c9b200f5-9c62-4656-9159-7a7dcc81633c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"3b15ce95-6971-4cf6-884e-ba35f43e14e6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"fd19a204-d868-42d1-a3f1-53754e384b68"},"edge_type":"inherent","type":"","uuid":"57ef0ced-cc9e-4d03-bc94-bc2b5f07d5ab","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"ad01cfb0-31b9-49f1-ba25-4e75f5086ece"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"ad01cfb0-31b9-49f1-ba25-4e75f5086ece"},"edge_type":"inherent","type":"","uuid":"f5e917ad-e423-4fb7-b0b9-2f0a3b873650","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"5e13ca8a-1272-4a7a-9c1e-100c729ff0f5"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"fd19a204-d868-42d1-a3f1-53754e384b68","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ad01cfb0-31b9-49f1-ba25-4e75f5086ece","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"35da4f86-8999-40d3-a6ce-0769311e3d6c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5e13ca8a-1272-4a7a-9c1e-100c729ff0f5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e77c3808-4c31-4565-bf37-79da84f81878"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3b15ce95-6971-4cf6-884e-ba35f43e14e6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5c63d8a0-b404-46fa-959d-edd6575e5fa6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"2abf35c2-01b5-4f54-a641-d1307fe1c093","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"f3241b2d-b015-4b2b-a721-8a8c14dc6ad0"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for starting an application","message_list":[],"uuid":"d3fd6905-13d7-43f8-8f8a-94d9b8245561","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"94d78030-a86c-4a4d-b07c-0247b675761a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"f2215f42-b883-49e0-8b64-37c8ff60746f"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"81f70ad4-f323-4abb-a2eb-e21d8c382197"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"f2215f42-b883-49e0-8b64-37c8ff60746f"},"edge_type":"inherent","type":"","uuid":"fa927925-c6b2-4220-9b83-019fb1c6778e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"81f70ad4-f323-4abb-a2eb-e21d8c382197"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f2215f42-b883-49e0-8b64-37c8ff60746f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"9edfccae-1df1-4b73-8e8e-bbbdc3ea536c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"81f70ad4-f323-4abb-a2eb-e21d8c382197","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"7ee5fddf-9c35-4a1d-88c7-ab14097f9b14","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"94d78030-a86c-4a4d-b07c-0247b675761a"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for restarting an application","message_list":[],"uuid":"491b11f9-97d2-4ce7-be46-238ccacb95f2","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"7e80b742-aa0e-4f9f-816f-6f2028b724bf","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"00ad3a16-d17d-45e6-9737-98e3403dd2dd"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9a01292d-35f7-49ae-859c-359d244436a8"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"00ad3a16-d17d-45e6-9737-98e3403dd2dd"},"edge_type":"inherent","type":"","uuid":"630933f9-6fd9-4d39-b47a-3093c68e7fa7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9a01292d-35f7-49ae-859c-359d244436a8"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"00ad3a16-d17d-45e6-9737-98e3403dd2dd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"75586467-60ad-4ef4-a18e-982f88fda933"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9a01292d-35f7-49ae-859c-359d244436a8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"962fd7c0-e283-45ba-a659-5a6c799c149e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"7e80b742-aa0e-4f9f-816f-6f2028b724bf"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for stopping an application","message_list":[],"uuid":"c826e289-54c4-4189-98be-d23cb16d0e0c","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"e57b2a0a-7556-488b-8e41-e0506d2df7fa","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"29f76208-8cb6-4455-9f15-64f803e0e1a2"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"85ce4bc2-5abe-4edb-a110-f0cefa5a6de3"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"29f76208-8cb6-4455-9f15-64f803e0e1a2"},"edge_type":"inherent","type":"","uuid":"1acbf808-7a27-4dcc-8b23-8dc2d63d0acc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"85ce4bc2-5abe-4edb-a110-f0cefa5a6de3"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"29f76208-8cb6-4455-9f15-64f803e0e1a2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"85ce4bc2-5abe-4edb-a110-f0cefa5a6de3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"733c5ca8-74c8-42e1-9387-e27017bdffb8"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"}],"description":"","message_list":[],"uuid":"15ad0701-c6e7-45a1-877b-536ca28f6902","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"e57b2a0a-7556-488b-8e41-e0506d2df7fa"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"bbce0553-0fab-4347-8456-fd24f24db655","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"474a928c-f4e5-44ba-afbb-b1b60e6c8f0e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"466db9d0-7d4c-44d1-8e2a-2d1a82c693e2"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"30e77211-52d4-4c6d-b46f-2de79e483910"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1abae8cd-6b04-4025-ae67-2399cf34b221"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"022b1716-d2b1-42f3-bf76-0cab12c331d3"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"312c2c29-85a5-4f7b-a752-c4aa11629743"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"466db9d0-7d4c-44d1-8e2a-2d1a82c693e2"},"edge_type":"inherent","type":"","uuid":"c9c219a6-2132-41a4-90a3-e12759af4fc8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"30e77211-52d4-4c6d-b46f-2de79e483910"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"30e77211-52d4-4c6d-b46f-2de79e483910"},"edge_type":"inherent","type":"","uuid":"f285417e-7bd6-4ec2-a8ab-ef9edaa64aec","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1abae8cd-6b04-4025-ae67-2399cf34b221"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"022b1716-d2b1-42f3-bf76-0cab12c331d3"},"edge_type":"inherent","type":"","uuid":"9d3b47eb-d410-4dfc-ac40-a60266603d36","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"312c2c29-85a5-4f7b-a752-c4aa11629743"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1abae8cd-6b04-4025-ae67-2399cf34b221"},"edge_type":"inherent","type":"","uuid":"bb2d118c-aca2-4a46-a65e-1ac6f6220064","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"022b1716-d2b1-42f3-bf76-0cab12c331d3"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"466db9d0-7d4c-44d1-8e2a-2d1a82c693e2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"30e77211-52d4-4c6d-b46f-2de79e483910","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1abae8cd-6b04-4025-ae67-2399cf34b221","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"fafd9288-5802-44cd-b6e7-add43f395238"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"022b1716-d2b1-42f3-bf76-0cab12c331d3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"f1cfff66-1af0-48f5-8c96-29574130d056"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"312c2c29-85a5-4f7b-a752-c4aa11629743","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97"}],"description":"","message_list":[],"uuid":"34055d41-bf3a-4700-a7d4-39d053433e19","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"474a928c-f4e5-44ba-afbb-b1b60e6c8f0e"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for scaleout","message_list":[],"uuid":"e27613fc-3f68-4997-a2d0-08eda4325a9a","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"98e32ed7-9810-46be-a86e-ba78e442ce8d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"e80a0251-6416-432e-b133-cf7e34fcd5a0"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"SCALING","uuid":"e80a0251-6416-432e-b133-cf7e34fcd5a0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_72e86e92_9738_41e0_bad3_0fcf79e92c97"}],"description":"","message_list":[],"uuid":"ff5cea16-7d8d-4c24-9a87-e8d18fa7f8fc","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"129e0ce5-0d24-4dfa-8c6e-ba3740c74235","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"98e32ed7-9810-46be-a86e-ba78e442ce8d"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for scalein","message_list":[],"uuid":"7140b05a-1bb7-4b3c-a10a-afa55ca81305","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"39858ae5-48b9-4f0b-829d-e340ae878356","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"a68354ca-7de9-4bba-9452-8a4b0d03b5e8"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"SCALING","uuid":"a68354ca-7de9-4bba-9452-8a4b0d03b5e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_72e86e92_9738_41e0_bad3_0fcf79e92c97"}],"description":"","message_list":[],"uuid":"cf236520-0313-4c32-9c43-1ccb5bdb3a29","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"93632b1a-627a-45a9-adb9-6b3cf776f142","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"39858ae5-48b9-4f0b-829d-e340ae878356"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"ac27aede-ad95-4b47-bc16-dcd993ed8d8f","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DAG","uuid":"afd11445-ddf5-4638-be42-4130b12f63d0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"73cc68af-7139-43c9-95cd-80f763540ff8"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"7cffecb5-5699-4758-a3e0-95093df38983"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"a505af78-4734-4bca-8487-cd217cb2977a"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"8636605e-f986-4f13-b943-87329c897757"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"73cc68af-7139-43c9-95cd-80f763540ff8"},"edge_type":"inherent","type":"","uuid":"fa5b9934-0159-4e91-be0c-240f4e291920","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"7cffecb5-5699-4758-a3e0-95093df38983"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"7cffecb5-5699-4758-a3e0-95093df38983"},"edge_type":"inherent","type":"","uuid":"df10b587-f044-403f-8ffc-38ab5598af7a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"a505af78-4734-4bca-8487-cd217cb2977a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"a505af78-4734-4bca-8487-cd217cb2977a"},"edge_type":"inherent","type":"","uuid":"5a89d207-c8cb-42fb-ab06-eab9dc18cf6e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"8636605e-f986-4f13-b943-87329c897757"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"73cc68af-7139-43c9-95cd-80f763540ff8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"7cffecb5-5699-4758-a3e0-95093df38983","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a505af78-4734-4bca-8487-cd217cb2977a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"b510f63b-6cb0-450a-9d85-92f8db044bc0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"8636605e-f986-4f13-b943-87329c897757","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97"}],"description":"","message_list":[],"uuid":"3cb50dae-5706-4e5d-b9cb-36dce802dbbe","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"afd11445-ddf5-4638-be42-4130b12f63d0"},"name":"SYS_GEN__Runbook_Deployment_72e86e92_9738_41e0_bad3_0fcf79e92c97"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913","min_replicas":"3","state":"ACTIVE","max_replicas":"9","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"}],"substrate_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"d6584f2e_deployment"}],"description":"","action_list":[{"description":"","message_list":[],"uuid":"cc8b56c2-b61d-457a-be7e-dd1ca2484913","name":"Upgrade","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"db23bf54-8d1a-49d3-ac54-f78a4726a80e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Worker","uuid":"d592c05a-6a92-4fa8-b1b0-8dd351a2e30b"},{"kind":"app_task","name":"Set Version Master","uuid":"bcafe9f4-0fa0-4583-9ef7-d5c617740704"},{"kind":"app_task","name":"Upgrade Worker","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200"},{"kind":"app_task","name":"Upgrade Master","uuid":"92544897-9e24-4e24-99bd-56091a7a732a"},{"kind":"app_task","name":"Restart Services","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"bcafe9f4-0fa0-4583-9ef7-d5c617740704"},"edge_type":"user_defined","type":"","uuid":"3d9910eb-a035-41b4-945b-59252d83d483","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"92544897-9e24-4e24-99bd-56091a7a732a"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"92544897-9e24-4e24-99bd-56091a7a732a"},"edge_type":"user_defined","type":"","uuid":"417895f5-3366-4b10-92b7-ece43412f27f","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Worker","uuid":"d592c05a-6a92-4fa8-b1b0-8dd351a2e30b"},"edge_type":"user_defined","type":"","uuid":"6230fe0c-0935-4fc4-9553-01acfa7500fc","to_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200"},"edge_type":"user_defined","type":"","uuid":"e9cc9f4f-4868-4633-b540-40cf840b34c1","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"17adda9e_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"d592c05a-6a92-4fa8-b1b0-8dd351a2e30b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"bcafe9f4-0fa0-4583-9ef7-d5c617740704","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"92544897-9e24-4e24-99bd-56091a7a732a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_private_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=aws\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=aws\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_NAMES=\"@@{calm_array_private_dns_name}@@\" \nWORKER_NAMES=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" \nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n  \techo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n  \texit 1\n  fi\n  count=$((count+1))\ndone\n\nfor name in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"$name\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $name \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=${name} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on minion nodes\"\n    exit 1\nfi\n\nfor name in $(echo \"${MASTER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"${name}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $name \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=$name -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Restart Services"}],"description":"","message_list":[],"uuid":"659ce0c6-e21d-40fe-908a-5ccb2879b2f1","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"9c9b57d2-61ba-4e50-a603-cfb6883effcd","value":"v1.13.6","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"17adda9e_dag","uuid":"db23bf54-8d1a-49d3-ac54-f78a4726a80e"},"name":"dfce2dff_runbook"}},{"description":"","message_list":[],"uuid":"2bb928c9-8e13-4925-a016-b3e576a2a5e0","name":"ScaleOut","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"cc8967d0-f727-43e5-b295-d79d3b14f716","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"f05b8d67-8dc8-475f-9126-fb456e4ba1d2"},{"kind":"app_task","name":"Set Hosts File","uuid":"7719785a-931a-46a4-bf01-8a35957cb037"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"f05b8d67-8dc8-475f-9126-fb456e4ba1d2"},"edge_type":"user_defined","type":"","uuid":"05449fc7-1f82-4732-aba9-28bb2ec9078e","to_task_reference":{"kind":"app_task","name":"Set Hosts File","uuid":"7719785a-931a-46a4-bf01-8a35957cb037"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"a0fb1ecf_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"SCALING","uuid":"f05b8d67-8dc8-475f-9126-fb456e4ba1d2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"7719785a-931a-46a4-bf01-8a35957cb037","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nWORKER_IPS=\"@@{AWS_Centos_K8SM.private_ip_address}@@\"\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n    echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Hosts File"}],"description":"","message_list":[],"uuid":"a39262da-35bd-4b1b-8248-641dffde4c3e","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"13204367-778a-4ca8-8a24-a514702424e1","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"a0fb1ecf_dag","uuid":"cc8967d0-f727-43e5-b295-d79d3b14f716"},"name":"55139b34_runbook"}},{"description":"","message_list":[],"uuid":"1295c30b-0067-4fea-86c2-820371a08ae7","name":"ScaleIn","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"b2f182e9-61c3-42ee-b2ca-f1ad4d959890","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"0f6598b2-a316-4228-8aa5-863769778809"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"adfef604_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"SCALING","uuid":"0f6598b2-a316-4228-8aa5-863769778809","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale In"}],"description":"","message_list":[],"uuid":"85b1da1f-0f04-4ba6-bf23-01e6222238a9","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"7dfd894b-7727-48ab-91b2-cbc1f9b22718","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"adfef604_dag","uuid":"b2f182e9-61c3-42ee-b2ca-f1ad4d959890"},"name":"65df2c70_runbook"}},{"description":"System action for creating an application","message_list":[],"uuid":"194f7b09-2109-489a-8da2-980fa21abb99","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"AWS","uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},"retries":"0","description":"","type":"DAG","uuid":"638aa837-e1ee-47ef-9a58-5fb3ec62b5a9","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"fdc792fb-8c94-4315-8eb3-1781a5cc69b4"},{"kind":"app_task","name":"SYS_GEN__DE_Provision_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"41e64360-04c2-4a67-b980-00516c9e0725"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"3f2e9886-d360-40f4-9821-4f2df4a85860"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"739762bb-af32-43b1-987b-8affe3299b45"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"b47c38ad-f4a5-49da-842b-4297d2b88404"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1e8e9eb6-a912-426f-92fd-6e31c8c3a080"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"866a4387-9238-4be9-bdbb-f15fc4e7b74a"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"75118e91-c417-48c5-a5f3-587b92ec1679"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"61019976-b494-4a68-934a-77528a526554"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fc1d94a7-da73-4174-9cd2-6c3375c8992e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"75118e91-c417-48c5-a5f3-587b92ec1679"},"edge_type":"inherent","type":"","uuid":"e2598314-3cc8-4248-9b37-dd8104e18a0d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"61019976-b494-4a68-934a-77528a526554"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"b47c38ad-f4a5-49da-842b-4297d2b88404"},"edge_type":"inherent","type":"","uuid":"03348078-1ad5-4677-ba89-fa6e1f499cdd","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"75118e91-c417-48c5-a5f3-587b92ec1679"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"fdc792fb-8c94-4315-8eb3-1781a5cc69b4"},"edge_type":"inherent","type":"","uuid":"7959bf01-eedf-4e6a-8649-d64f833315b2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"739762bb-af32-43b1-987b-8affe3299b45"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"739762bb-af32-43b1-987b-8affe3299b45"},"edge_type":"inherent","type":"","uuid":"1861acac-eb67-4159-b0ac-334917832616","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"b47c38ad-f4a5-49da-842b-4297d2b88404"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"866a4387-9238-4be9-bdbb-f15fc4e7b74a"},"edge_type":"inherent","type":"","uuid":"e82ffc70-0403-49fe-b1ea-515e56e60a10","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fc1d94a7-da73-4174-9cd2-6c3375c8992e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1e8e9eb6-a912-426f-92fd-6e31c8c3a080"},"edge_type":"inherent","type":"","uuid":"60a52002-bd74-4db8-b953-054ba341fb85","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"866a4387-9238-4be9-bdbb-f15fc4e7b74a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"41e64360-04c2-4a67-b980-00516c9e0725"},"edge_type":"inherent","type":"","uuid":"e5d9e2ce-3c22-4053-8b55-b5fa9b81dcfe","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"3f2e9886-d360-40f4-9821-4f2df4a85860"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"3f2e9886-d360-40f4-9821-4f2df4a85860"},"edge_type":"inherent","type":"","uuid":"dbf25426-a7b1-4e56-a04f-a43320e5e4bc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1e8e9eb6-a912-426f-92fd-6e31c8c3a080"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"3f2e9886-d360-40f4-9821-4f2df4a85860"},"edge_type":"dependency","type":"","uuid":"b5e40280-0402-47d1-a7d7-225db74f4bb7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"b47c38ad-f4a5-49da-842b-4297d2b88404"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"739762bb-af32-43b1-987b-8affe3299b45"},"edge_type":"dependency","type":"","uuid":"1708e4b8-ccb8-4f72-a4bd-a525c28b1e80","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1e8e9eb6-a912-426f-92fd-6e31c8c3a080"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"fdc792fb-8c94-4315-8eb3-1781a5cc69b4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"41e64360-04c2-4a67-b980-00516c9e0725","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3f2e9886-d360-40f4-9821-4f2df4a85860","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"35da4f86-8999-40d3-a6ce-0769311e3d6c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"739762bb-af32-43b1-987b-8affe3299b45","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"f339ef9a-5f78-45d2-9ed7-16ed727014af"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b47c38ad-f4a5-49da-842b-4297d2b88404","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2db0982c-f71c-4b8e-a7fd-bcc922c14767"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1e8e9eb6-a912-426f-92fd-6e31c8c3a080","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e77c3808-4c31-4565-bf37-79da84f81878"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"866a4387-9238-4be9-bdbb-f15fc4e7b74a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"75118e91-c417-48c5-a5f3-587b92ec1679","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"61019976-b494-4a68-934a-77528a526554","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fc1d94a7-da73-4174-9cd2-6c3375c8992e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"19f0aea1-2086-4534-a46a-cbb0363a5ce5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9","uuid":"638aa837-e1ee-47ef-9a58-5fb3ec62b5a9"},"name":"SYS_GEN__Runbook_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"}},{"description":"System action for starting an application","message_list":[],"uuid":"4d4c8eaa-a6af-4ee5-a613-97cdc08d5df7","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"AWS","uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},"retries":"0","description":"","type":"DAG","uuid":"4c20425c-7d67-4a9d-894a-09286b3e8e36","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"710338a9-880e-47f4-a51d-0421c2f945c0"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"e7550678-8247-4e14-89c6-2ac9f8d614c0"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b502c888-cd14-43be-858f-4656c88f3788"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"6277b9e6-4c01-49a9-b3c7-805bd3df320d"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"710338a9-880e-47f4-a51d-0421c2f945c0"},"edge_type":"inherent","type":"","uuid":"3c3bfeda-ec2b-4521-86ff-bf30e469cadc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"6277b9e6-4c01-49a9-b3c7-805bd3df320d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"e7550678-8247-4e14-89c6-2ac9f8d614c0"},"edge_type":"inherent","type":"","uuid":"0eac76f7-6fc5-4590-88ef-937769c2198d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b502c888-cd14-43be-858f-4656c88f3788"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"710338a9-880e-47f4-a51d-0421c2f945c0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"b28a41b5-ea80-4bcd-b2b7-9fc4432853b6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e7550678-8247-4e14-89c6-2ac9f8d614c0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"9edfccae-1df1-4b73-8e8e-bbbdc3ea536c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b502c888-cd14-43be-858f-4656c88f3788","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6277b9e6-4c01-49a9-b3c7-805bd3df320d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"7266a1bd-201b-4c7c-8bf2-4951362f0260","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9","uuid":"4c20425c-7d67-4a9d-894a-09286b3e8e36"},"name":"SYS_GEN__Runbook_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"}},{"description":"System action for restarting an application","message_list":[],"uuid":"1d5fed94-b1c4-4f63-9aa3-20b8df3bb0f7","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"AWS","uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},"retries":"0","description":"","type":"DAG","uuid":"d9538ff8-e29a-4695-a51c-18b494cfa8df","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"cb1c8e7f-6a50-4a51-9606-5890ad48022d"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"71fb81ea-a21f-4032-b8b1-fae5de8cd587"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2be1f6b6-e85a-4ac8-89b7-d14449d7930c"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"44ac296f-f3bd-45a4-a621-630dd521006e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"71fb81ea-a21f-4032-b8b1-fae5de8cd587"},"edge_type":"inherent","type":"","uuid":"3c2b8f58-ef8d-4145-9469-d1a4bc3fd9c2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2be1f6b6-e85a-4ac8-89b7-d14449d7930c"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"cb1c8e7f-6a50-4a51-9606-5890ad48022d"},"edge_type":"inherent","type":"","uuid":"cbdbe83d-1e0c-4193-a20d-bd24d3e82094","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"44ac296f-f3bd-45a4-a621-630dd521006e"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"cb1c8e7f-6a50-4a51-9606-5890ad48022d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"75586467-60ad-4ef4-a18e-982f88fda933"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"71fb81ea-a21f-4032-b8b1-fae5de8cd587","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"cb7b9ecd-3057-4bac-a022-82f8fa95bca7"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2be1f6b6-e85a-4ac8-89b7-d14449d7930c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"44ac296f-f3bd-45a4-a621-630dd521006e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"5402961d-39b1-4e68-90c1-0cf0281e4433","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9","uuid":"d9538ff8-e29a-4695-a51c-18b494cfa8df"},"name":"SYS_GEN__Runbook_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"}},{"description":"System action for stopping an application","message_list":[],"uuid":"9619d984-e120-4c28-9da8-f29c41601808","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"AWS","uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},"retries":"0","description":"","type":"DAG","uuid":"7eee2e57-66f9-423b-80ce-40c63fa43441","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"362243c2-ba5c-442a-83d6-0657a420b235"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3858f333-adcc-4313-be44-b5b704483aec"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"30ad421b-7b69-4e06-8864-1485f795eb5d"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"4369e9b8-c932-499b-beb1-c196927a805a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3858f333-adcc-4313-be44-b5b704483aec"},"edge_type":"inherent","type":"","uuid":"1867b22e-fba3-40be-ad1c-6178ccdd245a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"4369e9b8-c932-499b-beb1-c196927a805a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"362243c2-ba5c-442a-83d6-0657a420b235"},"edge_type":"inherent","type":"","uuid":"d75595b3-de80-40cd-b80f-a87e461a66ea","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"30ad421b-7b69-4e06-8864-1485f795eb5d"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"362243c2-ba5c-442a-83d6-0657a420b235","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3858f333-adcc-4313-be44-b5b704483aec","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"30ad421b-7b69-4e06-8864-1485f795eb5d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"733c5ca8-74c8-42e1-9387-e27017bdffb8"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4369e9b8-c932-499b-beb1-c196927a805a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"40413f8e-7fea-4257-9d12-b44202526b69"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"}],"description":"","message_list":[],"uuid":"a6610074-65ac-42ab-b7be-72bf7938d8d0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9","uuid":"7eee2e57-66f9-423b-80ce-40c63fa43441"},"name":"SYS_GEN__Runbook_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"fb0c1d9f-86ca-4b7f-a47f-907a60685d71","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"AWS","uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},"retries":"0","description":"","type":"DAG","uuid":"02170073-ecf8-4490-91fc-462458fc9003","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"032a9bd3-f06f-4c83-b9b5-5c92d88293c7"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c9718372-b1d2-452d-a015-917177f46505"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e93d24f8-999a-4b91-9948-5dc00c0a041d"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"96629dad-fdb2-4375-adef-8b39520c20fa"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e725d11d-af54-408b-88bf-6299f1563743"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ed0b8ca-1f8c-4c5a-a86c-e89d818701cf"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"d097edc4-5ae3-45c4-bc7f-bd1f5553f0f2"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"23e537de-4120-4786-be99-cd13202a6925"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"1cbeb00e-eb17-4c3f-bfc2-148b6d9f772b"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"84813cb0-efe2-4f3e-8304-7c49667da96f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c9718372-b1d2-452d-a015-917177f46505"},"edge_type":"inherent","type":"","uuid":"1fee3457-e4ae-4cc5-b45f-fb1d18dfb1b9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e93d24f8-999a-4b91-9948-5dc00c0a041d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e93d24f8-999a-4b91-9948-5dc00c0a041d"},"edge_type":"inherent","type":"","uuid":"5e07ecd4-0b13-4692-8b0f-93fee5a987bb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ed0b8ca-1f8c-4c5a-a86c-e89d818701cf"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"23e537de-4120-4786-be99-cd13202a6925"},"edge_type":"inherent","type":"","uuid":"425f2d6d-7d9c-4ec6-b54e-9491e9df2d5a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"1cbeb00e-eb17-4c3f-bfc2-148b6d9f772b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ed0b8ca-1f8c-4c5a-a86c-e89d818701cf"},"edge_type":"inherent","type":"","uuid":"8287793f-2b2b-4443-a1d2-2509ad02d066","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"23e537de-4120-4786-be99-cd13202a6925"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"032a9bd3-f06f-4c83-b9b5-5c92d88293c7"},"edge_type":"inherent","type":"","uuid":"6d1fb6d5-7bc3-4daf-82c6-a53e5697f8ab","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"96629dad-fdb2-4375-adef-8b39520c20fa"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"96629dad-fdb2-4375-adef-8b39520c20fa"},"edge_type":"inherent","type":"","uuid":"0e0eee00-2b62-4e5a-b160-87ddf671c21d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e725d11d-af54-408b-88bf-6299f1563743"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"d097edc4-5ae3-45c4-bc7f-bd1f5553f0f2"},"edge_type":"inherent","type":"","uuid":"c0070a60-2fa3-4638-a443-7bd391eb8dd1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"84813cb0-efe2-4f3e-8304-7c49667da96f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e725d11d-af54-408b-88bf-6299f1563743"},"edge_type":"inherent","type":"","uuid":"29bcd98f-4adb-4d2e-9f91-cf9e7110e0c4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"d097edc4-5ae3-45c4-bc7f-bd1f5553f0f2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ed0b8ca-1f8c-4c5a-a86c-e89d818701cf"},"edge_type":"create_action_edge","type":"","uuid":"9ea3d6a2-3f29-470b-a7c7-f6d6219c117f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"d097edc4-5ae3-45c4-bc7f-bd1f5553f0f2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e725d11d-af54-408b-88bf-6299f1563743"},"edge_type":"create_action_edge","type":"","uuid":"5e3e42d8-3cf2-48d4-93cd-aa2ca039f641","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"23e537de-4120-4786-be99-cd13202a6925"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e93d24f8-999a-4b91-9948-5dc00c0a041d"},"edge_type":"dependency","type":"","uuid":"315c1999-3875-4a39-94db-de88d66fb7ce","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e725d11d-af54-408b-88bf-6299f1563743"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"032a9bd3-f06f-4c83-b9b5-5c92d88293c7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c9718372-b1d2-452d-a015-917177f46505","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e93d24f8-999a-4b91-9948-5dc00c0a041d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"96629dad-fdb2-4375-adef-8b39520c20fa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e725d11d-af54-408b-88bf-6299f1563743","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"fafd9288-5802-44cd-b6e7-add43f395238"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2ed0b8ca-1f8c-4c5a-a86c-e89d818701cf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ceaf6d0-347f-4cc0-9225-4ab2264e6c5e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d097edc4-5ae3-45c4-bc7f-bd1f5553f0f2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"f1cfff66-1af0-48f5-8c96-29574130d056"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"23e537de-4120-4786-be99-cd13202a6925","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"7ff106d6-4bc2-4197-ba14-4704842f88b4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"1cbeb00e-eb17-4c3f-bfc2-148b6d9f772b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_d0f58896_b535_451c_a462_71690d7d9c43"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"84813cb0-efe2-4f3e-8304-7c49667da96f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97"}],"description":"","message_list":[],"uuid":"14c70e4b-0a63-4fb9-88f0-1fa23f776561","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9","uuid":"02170073-ecf8-4490-91fc-462458fc9003"},"name":"SYS_GEN__Runbook_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"80842f72-62b6-48b3-958d-1a637282c471","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"AWS","uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},"retries":"0","description":"","type":"DAG","uuid":"39fa18c0-244d-43fa-aa59-cb4d89231283","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ebc88a5f-093c-4cd8-86c1-e4551b516686"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"115ac4e3-3cf5-49e0-9bd2-f4ea5931b963"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"76194b36-f88d-4e88-8e7a-c90469246a9e"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"73db41a1-7341-44d5-aa2b-2516596088f6"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"969f4f5f-7f13-4b8a-a4d3-7645166a49d5"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"fa26c07b-17c9-48f8-926b-c57e83bb4d71"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"90a37452-258c-45d0-9f54-b78df3e05105"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"2fadf0fc-7113-4f77-ba76-0358ffceb182"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"115ac4e3-3cf5-49e0-9bd2-f4ea5931b963"},"edge_type":"inherent","type":"","uuid":"a5f6fb37-6add-4df0-a11b-35d01ce925a4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"76194b36-f88d-4e88-8e7a-c90469246a9e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"fa26c07b-17c9-48f8-926b-c57e83bb4d71"},"edge_type":"inherent","type":"","uuid":"b26acfea-f7af-41ec-b2ca-a1a57e01ae0f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_d0f58896_b535_451c_a462_71690d7d9c43","uuid":"2fadf0fc-7113-4f77-ba76-0358ffceb182"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"76194b36-f88d-4e88-8e7a-c90469246a9e"},"edge_type":"inherent","type":"","uuid":"049d59ea-ae56-40af-9a2e-fe6c55d51867","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"fa26c07b-17c9-48f8-926b-c57e83bb4d71"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ebc88a5f-093c-4cd8-86c1-e4551b516686"},"edge_type":"inherent","type":"","uuid":"b7afb654-9fd8-4ec4-8f2d-a32100d39f51","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"73db41a1-7341-44d5-aa2b-2516596088f6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"73db41a1-7341-44d5-aa2b-2516596088f6"},"edge_type":"inherent","type":"","uuid":"42a225f3-e83a-4944-a462-aaa68c5f6a62","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"969f4f5f-7f13-4b8a-a4d3-7645166a49d5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"969f4f5f-7f13-4b8a-a4d3-7645166a49d5"},"edge_type":"inherent","type":"","uuid":"12abd877-c0ae-477f-9334-e7b79d10ccb3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97","uuid":"90a37452-258c-45d0-9f54-b78df3e05105"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"76194b36-f88d-4e88-8e7a-c90469246a9e"},"edge_type":"create_action_edge","type":"","uuid":"4ce13f64-72d8-46ad-b0f4-657b14b1a869","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"969f4f5f-7f13-4b8a-a4d3-7645166a49d5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"73db41a1-7341-44d5-aa2b-2516596088f6"},"edge_type":"create_action_edge","type":"","uuid":"ef2c3a31-5494-4ff1-a746-93475de2d67b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"fa26c07b-17c9-48f8-926b-c57e83bb4d71"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ebc88a5f-093c-4cd8-86c1-e4551b516686","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"115ac4e3-3cf5-49e0-9bd2-f4ea5931b963","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"76194b36-f88d-4e88-8e7a-c90469246a9e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"73db41a1-7341-44d5-aa2b-2516596088f6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"969f4f5f-7f13-4b8a-a4d3-7645166a49d5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_190048e5_32e8_44b5_abe9_91374efc543b","uuid":"b510f63b-6cb0-450a-9d85-92f8db044bc0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_190048e5_32e8_44b5_abe9_91374efc543b"},{"target_any_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fa26c07b-17c9-48f8-926b-c57e83bb4d71","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247","uuid":"61b0ed56-6de5-429e-af3e-829afbc0aab5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_2c077429_6628_4a1d_8153_776c6ecd4247"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"d6584f2e_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"90a37452-258c-45d0-9f54-b78df3e05105","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_72e86e92_9738_41e0_bad3_0fcf79e92c97"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"85fa2262_deployment","uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"2fadf0fc-7113-4f77-ba76-0358ffceb182","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_d0f58896_b535_451c_a462_71690d7d9c43"}],"description":"","message_list":[],"uuid":"6a0f084d-c9a9-4001-99db-a71a8987c7ba","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a4c73681_f48b_4889_8dfe_532bf51506f9","uuid":"39fa18c0-244d-43fa-aa59-cb4d89231283"},"name":"SYS_GEN__Runbook_Application_a4c73681_f48b_4889_8dfe_532bf51506f9"}}],"message_list":[],"uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023","state":"ACTIVE","dependency_list":[{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AWS_Centos_K8SW","action_name":"action_create","action_resource_name":"AWS","getter_resource_name":"AWS_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_dns_name","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AWS_Centos_K8SW","action_name":"action_create","action_resource_name":"AWS","getter_resource_name":"AWS_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_dns_name","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AWS_Centos_K8SW","action_name":"action_create","action_resource_name":"AWS","getter_resource_name":"AWS_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AWS_Centos_K8SW","action_name":"action_create","action_resource_name":"AWS","getter_resource_name":"AWS_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"AWS_Centos_K8SM","action_name":"action_create","action_resource_name":"AWS","getter_resource_name":"AWS_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"ServiceCfg","setter_resource_name":"Kubernetes_Master","action_name":"action_delete","action_resource_name":"AWS","getter_resource_name":"AWS_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"}],"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"84ea4146-06e2-4f24-9240-793c796c7f82","value":"aws-kubenetes-cluster","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_NAME"},{"regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"81a896d4-4bf2-4d95-abf5-cc182a2910ab","value":"v1.12.8","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"cf1fcd4b-b7a6-422e-b1d4-8d371a79e2dd","value":"17.03.3.ce","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"d1012a95-478f-4bda-8408-bafeeac8d182","value":"10.200.0.0\/16","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"d36bd43a-4cba-46c8-8080-6a1d75015bd7","value":"10.32.0.0\/24","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_SERVICE_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"799ca7b6-7ea7-4ed2-8f4c-6512b81b57d3","value":"10.32.0.10","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_DNS_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"e2b50e6e-81a8-4b0f-b4a8-f8c16d6128d1","value":"flannel","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"}],"name":"AWS"},{"deployment_create_list":[{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"b448f9e3-3611-402a-8ee5-19b702c9fe65","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"7d142654-35da-4af2-be23-3b71154ae5c6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"9be6761e-2d37-4e16-9001-0f5a31e8c218"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"3c899635-7391-412f-9fc2-1cc68b52d7ff"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"7282a556-befd-4cb5-be14-e93f170a60c7"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0fb3626d-fc4c-46d5-a3c7-1e15f7fcdc35"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8ed86e95-a1e2-4596-855d-e74e6231f590"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0fb3626d-fc4c-46d5-a3c7-1e15f7fcdc35"},"edge_type":"inherent","type":"","uuid":"02647fea-c120-43b4-8f2a-20b2a4300a9a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8ed86e95-a1e2-4596-855d-e74e6231f590"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"7282a556-befd-4cb5-be14-e93f170a60c7"},"edge_type":"inherent","type":"","uuid":"4ae75672-00a0-4970-9c4b-cf83d571325f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0fb3626d-fc4c-46d5-a3c7-1e15f7fcdc35"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"9be6761e-2d37-4e16-9001-0f5a31e8c218"},"edge_type":"inherent","type":"","uuid":"b6e45c33-d849-4033-a6b4-85f0c583eb6e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"3c899635-7391-412f-9fc2-1cc68b52d7ff"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"3c899635-7391-412f-9fc2-1cc68b52d7ff"},"edge_type":"inherent","type":"","uuid":"09dcb0ff-12c6-45d8-b957-a5c2fff21c76","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"7282a556-befd-4cb5-be14-e93f170a60c7"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"9be6761e-2d37-4e16-9001-0f5a31e8c218","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3c899635-7391-412f-9fc2-1cc68b52d7ff","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d64e4d0f-1705-4336-a84a-35cd583d5213"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7282a556-befd-4cb5-be14-e93f170a60c7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f36c73be-8aaf-4dec-a2b2-992ef37e9ff0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0fb3626d-fc4c-46d5-a3c7-1e15f7fcdc35","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8ed86e95-a1e2-4596-855d-e74e6231f590","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"d3a69163-491a-426e-9e21-d6cb56de7002","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"7d142654-35da-4af2-be23-3b71154ae5c6"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for starting an application","message_list":[],"uuid":"c8709e77-d0ce-4b85-a99b-60bb9419a8b1","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"44778481-8d4f-4faa-8edf-6e231b33e13f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"4c10278e-0ab5-4be4-a881-7d780667fff5"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7f68c962-0fa2-4962-95d9-999a714b24c8"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"4c10278e-0ab5-4be4-a881-7d780667fff5"},"edge_type":"inherent","type":"","uuid":"3f46a4ae-8db1-4145-834c-16ea7a21d353","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7f68c962-0fa2-4962-95d9-999a714b24c8"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4c10278e-0ab5-4be4-a881-7d780667fff5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"bf67dfe4-7105-49a0-a82d-48911564bfc9"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7f68c962-0fa2-4962-95d9-999a714b24c8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"db290667-6934-4053-a44f-b39af55cbeaa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"44778481-8d4f-4faa-8edf-6e231b33e13f"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for restarting an application","message_list":[],"uuid":"89fea252-74f6-4867-ae37-151edd856330","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"5ad44b25-844d-41de-bb34-89edd8912d2d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"51a674f4-713a-4fc2-93cc-05a057e0b945"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0e79df7c-eecf-4adb-afd6-79b7ff5c0ff6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"51a674f4-713a-4fc2-93cc-05a057e0b945"},"edge_type":"inherent","type":"","uuid":"22bc2f8e-586b-4b62-92c5-2540bb2a8250","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0e79df7c-eecf-4adb-afd6-79b7ff5c0ff6"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"51a674f4-713a-4fc2-93cc-05a057e0b945","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"4f04d37f-a1fb-4993-9180-71a2a2c052fb"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0e79df7c-eecf-4adb-afd6-79b7ff5c0ff6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"81da8809-6d30-4da7-a4f2-778366729785","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"5ad44b25-844d-41de-bb34-89edd8912d2d"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for stopping an application","message_list":[],"uuid":"7281a28c-3433-4ba5-99d6-f7e81d809937","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"480fa258-9531-4581-ac4c-889fb4eee123","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f22560af-2bae-438b-a7a7-e25a611cc33a"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d042ac55-5683-4a1d-a5e6-465f788b4bcc"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f22560af-2bae-438b-a7a7-e25a611cc33a"},"edge_type":"inherent","type":"","uuid":"dfd600e9-0f05-4235-a7d0-5233b67dd701","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d042ac55-5683-4a1d-a5e6-465f788b4bcc"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f22560af-2bae-438b-a7a7-e25a611cc33a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d042ac55-5683-4a1d-a5e6-465f788b4bcc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"499f2f07-9aec-4851-adcb-a3ebc68f7d63"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"}],"description":"","message_list":[],"uuid":"d992f43a-1328-47b2-9a76-6af1698ce278","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"480fa258-9531-4581-ac4c-889fb4eee123"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"3a710407-f9d9-4b7d-b807-75b030022046","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"19624a16-3eda-4ca7-a77a-5e0c0953d002","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"316bf735-d9d5-4e14-99c2-3f72e188d670"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"81d51403-98b7-4554-8736-daf79067945f"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"efb75f21-f51f-4da2-873e-3ce2960a9669"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"0d9d4167-5b5b-41b5-9a6e-6003007cfd74"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"d15b8a05-e1bc-4227-bcf2-9b22057beef5"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"316bf735-d9d5-4e14-99c2-3f72e188d670"},"edge_type":"inherent","type":"","uuid":"91383e29-9b62-4e88-8cc0-d6cfb4a9b033","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"81d51403-98b7-4554-8736-daf79067945f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"81d51403-98b7-4554-8736-daf79067945f"},"edge_type":"inherent","type":"","uuid":"d56366f7-f57f-4933-8198-8f12b04f9e65","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"efb75f21-f51f-4da2-873e-3ce2960a9669"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"0d9d4167-5b5b-41b5-9a6e-6003007cfd74"},"edge_type":"inherent","type":"","uuid":"0492fd27-01f4-446a-a592-c01e55e268ae","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"d15b8a05-e1bc-4227-bcf2-9b22057beef5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"efb75f21-f51f-4da2-873e-3ce2960a9669"},"edge_type":"inherent","type":"","uuid":"cb4e7a14-b551-42dc-bff1-f52aebbec85a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"0d9d4167-5b5b-41b5-9a6e-6003007cfd74"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"316bf735-d9d5-4e14-99c2-3f72e188d670","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"81d51403-98b7-4554-8736-daf79067945f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"efb75f21-f51f-4da2-873e-3ce2960a9669","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"452926d6-3f38-41b0-a327-860fd051f1fa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0d9d4167-5b5b-41b5-9a6e-6003007cfd74","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"99bfb5ef-49b9-4e84-b2bc-9ae1ca0cdc5b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"d15b8a05-e1bc-4227-bcf2-9b22057beef5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}],"description":"","message_list":[],"uuid":"2249939e-93f3-4b8a-8d54-682acd1e28e0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"19624a16-3eda-4ca7-a77a-5e0c0953d002"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for scaleout","message_list":[],"uuid":"8c58ff75-4f89-4b8f-ae7b-e05c2b0aa105","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"da220298-4501-4174-a9ac-001311bbac46","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"64fc0010-4742-4311-b4a4-fd0f8664f749"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"SCALING","uuid":"64fc0010-4742-4311-b4a4-fd0f8664f749","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}],"description":"","message_list":[],"uuid":"b12869d2-d390-4ae2-8262-332f47210719","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"e77550ef-adf1-493d-bd80-2dc714446705","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"da220298-4501-4174-a9ac-001311bbac46"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for scalein","message_list":[],"uuid":"d8537c27-0974-4db2-948a-cb11099b74bd","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"71bd1009-aa1c-4f9a-b7c8-47f6d080e934","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"026a7f22-5916-4ca3-8961-ab2ee7f39818"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"SCALING","uuid":"026a7f22-5916-4ca3-8961-ab2ee7f39818","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}],"description":"","message_list":[],"uuid":"1a81f6e0-0298-43ec-9b9e-366d968baee6","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"2e6e2ffd-8cf3-4b84-92df-ebed22e9c7d6","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"71bd1009-aa1c-4f9a-b7c8-47f6d080e934"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"99e52931-c258-484d-8997-a7b83ba722fd","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DAG","uuid":"b113ff47-7193-48f7-acd6-c2c781f0a30c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f9c77afd-b907-4ea2-bda5-7837a3570526"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"ddd0abf2-ad2e-4f00-b57c-aabae5f915e7"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"6e0f7cec-ecb5-4bf5-9696-2a9eb5d81694"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"6b34c5d2-49f8-4eac-a437-83d854575ec5"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f9c77afd-b907-4ea2-bda5-7837a3570526"},"edge_type":"inherent","type":"","uuid":"b65908b9-719b-4b8e-b0e2-c7eef58935dd","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"ddd0abf2-ad2e-4f00-b57c-aabae5f915e7"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"6e0f7cec-ecb5-4bf5-9696-2a9eb5d81694"},"edge_type":"inherent","type":"","uuid":"34000a41-d4ee-443e-9dc4-80be9f32abd4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"6b34c5d2-49f8-4eac-a437-83d854575ec5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"ddd0abf2-ad2e-4f00-b57c-aabae5f915e7"},"edge_type":"inherent","type":"","uuid":"a8be9bb5-47fa-4bc1-a21b-ad6f2002b25e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"6e0f7cec-ecb5-4bf5-9696-2a9eb5d81694"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f9c77afd-b907-4ea2-bda5-7837a3570526","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"ddd0abf2-ad2e-4f00-b57c-aabae5f915e7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6e0f7cec-ecb5-4bf5-9696-2a9eb5d81694","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"44eaecd0-1490-4213-915f-c79374013b7c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"6b34c5d2-49f8-4eac-a437-83d854575ec5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}],"description":"","message_list":[],"uuid":"23f91002-ae56-498a-8999-0fbc2a72c45a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"b113ff47-7193-48f7-acd6-c2c781f0a30c"},"name":"SYS_GEN__Runbook_Deployment_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647","min_replicas":"3","state":"ACTIVE","max_replicas":"3","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"}],"substrate_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"34875daf_deployment"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"54444539-5a95-4a06-bf13-680cdc0eb865","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"751f4025-e588-417d-ae90-eb4dbdcc259c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"7779f06c-08db-48d5-9aff-38101b60578d"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"df38f7f2-824b-446d-9998-f66c1ce4606c"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"7a2ab030-23f4-4317-acc1-9a1dfd22de71"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d60ca982-c5a1-487f-b278-63ed2ecbe0d6"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f1aabac6-ea74-4bed-88e0-9154bc556c20"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d60ca982-c5a1-487f-b278-63ed2ecbe0d6"},"edge_type":"inherent","type":"","uuid":"6caf4bc5-652d-43d3-9656-3904b7c2d48b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f1aabac6-ea74-4bed-88e0-9154bc556c20"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"7a2ab030-23f4-4317-acc1-9a1dfd22de71"},"edge_type":"inherent","type":"","uuid":"509f146f-fdf1-43cb-8e59-0af473a567be","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d60ca982-c5a1-487f-b278-63ed2ecbe0d6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"7779f06c-08db-48d5-9aff-38101b60578d"},"edge_type":"inherent","type":"","uuid":"3a37d0f2-ae9c-4264-b1a7-9f117fb5a4cf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"df38f7f2-824b-446d-9998-f66c1ce4606c"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"df38f7f2-824b-446d-9998-f66c1ce4606c"},"edge_type":"inherent","type":"","uuid":"abd7edd5-257a-468c-abba-aee568bb8240","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"7a2ab030-23f4-4317-acc1-9a1dfd22de71"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"7779f06c-08db-48d5-9aff-38101b60578d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"df38f7f2-824b-446d-9998-f66c1ce4606c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"9825e114-5173-4617-b9ac-af974d81db28"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7a2ab030-23f4-4317-acc1-9a1dfd22de71","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"81e51469-7eba-4b3d-bfe7-481431984765"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d60ca982-c5a1-487f-b278-63ed2ecbe0d6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f1aabac6-ea74-4bed-88e0-9154bc556c20","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"afd4bf3f-51a1-40df-ac53-94e2a964df56","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"751f4025-e588-417d-ae90-eb4dbdcc259c"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for starting an application","message_list":[],"uuid":"27862551-4de2-431c-b0aa-115d9be1e295","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"2263b0ce-4ac2-4163-a604-fe3aae393c8d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"0410267e-ac0e-419b-9583-55b052979d49"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"bb79fa1d-21ba-40d8-a43e-276aea0efc8c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"0410267e-ac0e-419b-9583-55b052979d49"},"edge_type":"inherent","type":"","uuid":"6b946fc7-3320-458b-aff0-9aa033fe5f99","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"bb79fa1d-21ba-40d8-a43e-276aea0efc8c"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0410267e-ac0e-419b-9583-55b052979d49","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"0821d97f-d22a-49eb-bfa0-4abdeb73ab23"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bb79fa1d-21ba-40d8-a43e-276aea0efc8c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"8f95bfd5-e8a5-4ea0-8c2e-33bc59b26d8a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"2263b0ce-4ac2-4163-a604-fe3aae393c8d"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for restarting an application","message_list":[],"uuid":"fe8cff8a-c73d-4413-b861-590eb4e3b00e","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"38c72d23-4d7b-4a3f-923d-0bab7558f318","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"646778b4-98a6-4883-a411-ea321ba701db"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"1632d00e-b460-44a1-8ada-81623e967f37"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"646778b4-98a6-4883-a411-ea321ba701db"},"edge_type":"inherent","type":"","uuid":"d078583f-e633-43d2-b779-f66ed652bf81","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"1632d00e-b460-44a1-8ada-81623e967f37"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"646778b4-98a6-4883-a411-ea321ba701db","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"843efa80-5962-4f97-aa29-48b5ba3b3d84"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1632d00e-b460-44a1-8ada-81623e967f37","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"3ddddf48-a023-4d69-91ef-302838eee803","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"38c72d23-4d7b-4a3f-923d-0bab7558f318"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for stopping an application","message_list":[],"uuid":"24132344-773b-45a9-88b0-31fc8c1aeb79","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"6faa9c37-7fac-46e6-bf42-51af898d71e3","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"183b741d-34ca-47dc-862e-0b5507c494b7"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"364ecb2c-b45e-400a-b5b1-5e5934cf6104"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"183b741d-34ca-47dc-862e-0b5507c494b7"},"edge_type":"inherent","type":"","uuid":"07efbcc4-86f1-4df7-b2df-0877bb461683","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"364ecb2c-b45e-400a-b5b1-5e5934cf6104"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"183b741d-34ca-47dc-862e-0b5507c494b7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"364ecb2c-b45e-400a-b5b1-5e5934cf6104","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"970353c4-39f8-4737-bd80-22ecde661c25"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"4b1acf65-192f-4b82-b7ff-4b491b21a2d7","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"6faa9c37-7fac-46e6-bf42-51af898d71e3"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"f646ac46-a688-4995-86b9-2e6cc4ed2342","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"708ae481-7c27-4b57-83a7-4d83c3a25e0c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f8c357ef-4548-43c0-b063-11364e9cbb37"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"8e4a9dad-e972-405b-9336-8eb00768c50d"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"cb53f39e-236e-47ae-be27-37363c035700"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"85946aa2-11d1-4e47-bc95-bed311d13f99"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"4066062f-0ff4-4b1d-9f93-402f74627aca"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f8c357ef-4548-43c0-b063-11364e9cbb37"},"edge_type":"inherent","type":"","uuid":"45dbcc2b-fdc3-4e37-8375-5226ada760e1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"8e4a9dad-e972-405b-9336-8eb00768c50d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"8e4a9dad-e972-405b-9336-8eb00768c50d"},"edge_type":"inherent","type":"","uuid":"5de3d896-4643-444e-a8eb-e9f418b3c2e4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"cb53f39e-236e-47ae-be27-37363c035700"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"85946aa2-11d1-4e47-bc95-bed311d13f99"},"edge_type":"inherent","type":"","uuid":"8c0e4bd6-5c52-486d-8f8d-54203d8348bb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"4066062f-0ff4-4b1d-9f93-402f74627aca"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"cb53f39e-236e-47ae-be27-37363c035700"},"edge_type":"inherent","type":"","uuid":"62e9b073-2140-43dd-b7eb-64b08a28582e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"85946aa2-11d1-4e47-bc95-bed311d13f99"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f8c357ef-4548-43c0-b063-11364e9cbb37","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8e4a9dad-e972-405b-9336-8eb00768c50d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"cb53f39e-236e-47ae-be27-37363c035700","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"f1cb0f30-2826-4659-82b8-7bd85ecea7f3"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"85946aa2-11d1-4e47-bc95-bed311d13f99","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"58e293aa-b21d-46b7-8d7d-a52e04f8cde0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"4066062f-0ff4-4b1d-9f93-402f74627aca","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7"}],"description":"","message_list":[],"uuid":"1a205f47-8a72-4ebc-b8c3-8e41c24381ee","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"708ae481-7c27-4b57-83a7-4d83c3a25e0c"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for scaleout","message_list":[],"uuid":"63ba90ff-a9b8-46ef-bcbd-4c98cbaa626b","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"c3b53f92-541e-438d-b194-c92b4699dfa2","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"5dc0af99-8e09-4aed-b162-10c783b85807"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"SCALING","uuid":"5dc0af99-8e09-4aed-b162-10c783b85807","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_78e07ffd_9c25_4005_aba0_444053ecbcd7"}],"description":"","message_list":[],"uuid":"c53acd75-1c13-4b80-80b4-1459280ceef9","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"7ad787b9-53c5-4696-a128-b9f04977689e","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"c3b53f92-541e-438d-b194-c92b4699dfa2"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for scalein","message_list":[],"uuid":"3ca39928-44f5-4410-9d82-4e83eceddec2","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"3e91ab1d-464a-47a8-80ba-40669d6eef02","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"5d1a3095-8b0e-4a65-9d21-7ae1a342b3a4"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"SCALING","uuid":"5d1a3095-8b0e-4a65-9d21-7ae1a342b3a4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_78e07ffd_9c25_4005_aba0_444053ecbcd7"}],"description":"","message_list":[],"uuid":"c48f71fa-4f4d-4fda-a901-90452667d8ed","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"05cd2eff-6714-4332-a560-5593ed1b1052","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"3e91ab1d-464a-47a8-80ba-40669d6eef02"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"a3b4f497-373e-4747-8f68-307e35a7f0b0","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DAG","uuid":"2cb4bc03-86c7-463e-b18d-75f4eb10771e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ea1efcca-4fe4-423d-ba85-3e5ff7747f95"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"8e0041f6-083b-42d8-943e-7c4bdae198e8"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"e0e9fdb8-91f6-4bda-9598-24f13d16ab79"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"e40db77c-322c-4645-a7c9-22cac54002a4"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ea1efcca-4fe4-423d-ba85-3e5ff7747f95"},"edge_type":"inherent","type":"","uuid":"528a91d9-d9f3-441c-a5ca-d4d56a784c79","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"8e0041f6-083b-42d8-943e-7c4bdae198e8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"e0e9fdb8-91f6-4bda-9598-24f13d16ab79"},"edge_type":"inherent","type":"","uuid":"983168fa-c9fb-41d9-820e-04010190b8ac","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"e40db77c-322c-4645-a7c9-22cac54002a4"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"8e0041f6-083b-42d8-943e-7c4bdae198e8"},"edge_type":"inherent","type":"","uuid":"c5d8563a-43a6-4cc1-a2af-1570b1440da6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"e0e9fdb8-91f6-4bda-9598-24f13d16ab79"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ea1efcca-4fe4-423d-ba85-3e5ff7747f95","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"8e0041f6-083b-42d8-943e-7c4bdae198e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e0e9fdb8-91f6-4bda-9598-24f13d16ab79","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"a54da0b3-68a6-4c4e-ad24-87e5724d4aaa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"e40db77c-322c-4645-a7c9-22cac54002a4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7"}],"description":"","message_list":[],"uuid":"2ce55f51-6aa9-4f6b-8733-d4f6e666f98a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"2cb4bc03-86c7-463e-b18d-75f4eb10771e"},"name":"SYS_GEN__Runbook_Deployment_78e07ffd_9c25_4005_aba0_444053ecbcd7"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a","min_replicas":"3","state":"ACTIVE","max_replicas":"9","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"}],"substrate_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"77b729d5_deployment"}],"description":"","action_list":[{"description":"","message_list":[],"uuid":"650105c2-d922-4ca5-a59e-c82785dfa584","name":"Upgrade","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"2fbcefcb-a9b3-41d4-ab5d-9c4ed672c0b5","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"49aa1d3e-6e8b-45fe-8b3b-122d1b7a4f08"},{"kind":"app_task","name":"Set Version Worker","uuid":"4220a0e0-5af2-464b-94f1-4a8d3b0cc434"},{"kind":"app_task","name":"Upgrade Master","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8"},{"kind":"app_task","name":"Upgrade Worker","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5"},{"kind":"app_task","name":"Restart Services","uuid":"580ece3f-bce2-409b-a824-2876cf08606f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"49aa1d3e-6e8b-45fe-8b3b-122d1b7a4f08"},"edge_type":"user_defined","type":"","uuid":"c1038158-7040-45ef-b0a7-8d162bf0abcf","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8"},"edge_type":"user_defined","type":"","uuid":"d6b7e5df-edbe-4454-919a-d6601843b66c","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"580ece3f-bce2-409b-a824-2876cf08606f"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Worker","uuid":"4220a0e0-5af2-464b-94f1-4a8d3b0cc434"},"edge_type":"user_defined","type":"","uuid":"59cc81be-110c-4fec-92bd-e30c821732aa","to_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5"},"edge_type":"user_defined","type":"","uuid":"4fcda967-f38f-4bdc-9ad9-943235252ee2","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"580ece3f-bce2-409b-a824-2876cf08606f"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"cbdb4fa8_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"49aa1d3e-6e8b-45fe-8b3b-122d1b7a4f08","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"4220a0e0-5af2-464b-94f1-4a8d3b0cc434","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=gce\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=gce\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"580ece3f-bce2-409b-a824-2876cf08606f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_NAMES=\"@@{calm_array_name}@@\" \nWORKER_NAMES=\"@@{GCP_Centos_K8SM.name}@@\" \nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor name in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain ${name} --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"worker${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=${name} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon ${name}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor name in $(echo \"${MASTER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain $name --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"master${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=$name -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Restart Services"}],"description":"","message_list":[],"uuid":"940a5a1a-a60b-4298-8647-a289ebb0ae2b","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"ba7b28af-2d8d-4fc9-a39e-18deceb5c305","value":"v1.13.6","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"cbdb4fa8_dag","uuid":"2fbcefcb-a9b3-41d4-ab5d-9c4ed672c0b5"},"name":"8d003d32_runbook"}},{"description":"","message_list":[],"uuid":"6a55bb4a-5338-478d-9a67-1d2f2045a727","name":"ScaleOut","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"b983d1c2-d39d-41e8-a80e-0498d6aa39e2","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"4f90925d-8cba-4af4-bbe4-5b1ccdd4c76e"},{"kind":"app_task","name":"Set Hosts File","uuid":"d5b134a9-7474-4dac-a0ba-31235937974f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"4f90925d-8cba-4af4-bbe4-5b1ccdd4c76e"},"edge_type":"user_defined","type":"","uuid":"b32099f3-bee9-427a-99c1-cad37440563d","to_task_reference":{"kind":"app_task","name":"Set Hosts File","uuid":"d5b134a9-7474-4dac-a0ba-31235937974f"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"f3682593_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"SCALING","uuid":"4f90925d-8cba-4af4-bbe4-5b1ccdd4c76e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"d5b134a9-7474-4dac-a0ba-31235937974f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nWORKER_IP=\"@@{GCP_Centos_K8SM.private_ip_address}@@\"\nfor ip in $(echo ${WORKER_IP} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n    echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Hosts File"}],"description":"","message_list":[],"uuid":"52c03df0-006e-4c3f-8c84-ea6f7581a1c3","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"b0ad7b3e-02ce-4677-a47c-5a965e01ba48","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"f3682593_dag","uuid":"b983d1c2-d39d-41e8-a80e-0498d6aa39e2"},"name":"744583cd_runbook"}},{"description":"","message_list":[],"uuid":"42796a22-0428-4713-ba3e-7b5098d6c585","name":"ScaleIn","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"3035498e-e7f5-43a1-a150-9109292ad872","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"30bdd176-5229-45c9-9ad5-b0e4606de27b"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"853cb860_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"SCALING","uuid":"30bdd176-5229-45c9-9ad5-b0e4606de27b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale In"}],"description":"","message_list":[],"uuid":"2c0ec127-e5c4-47ee-88fb-62203d2d1922","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"9a23ba8c-870c-4a4d-8298-20409b429384","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"853cb860_dag","uuid":"3035498e-e7f5-43a1-a150-9109292ad872"},"name":"9331a25f_runbook"}},{"description":"System action for creating an application","message_list":[],"uuid":"cf065c8f-daff-48be-af1e-4a872b9fd474","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"GCP","uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},"retries":"0","description":"","type":"DAG","uuid":"7736dd21-33ed-4b56-9bcb-78285b769da7","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"d0fd0210-f31f-4852-80a1-3270cf1cc571"},{"kind":"app_task","name":"SYS_GEN__DE_Provision_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"188218b6-83d6-4206-91a7-cae144cdd451"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d58a8643-bf74-4ad4-be12-49848033fc98"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"fad597d6-cecf-4081-875c-17f528637d90"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"846a1815-fde9-4747-9bb1-3bc3d19a9a30"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f445ebb2-79f9-4041-aba7-7b473d8a4a11"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d98b5c58-6572-4feb-b884-84364c3ed832"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"cd5104de-fd06-4038-9263-e663870ee030"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"642ce42a-c91c-4db7-a463-1231c7074704"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"6637e08e-86d2-40d3-9cbc-679328dc093b"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d98b5c58-6572-4feb-b884-84364c3ed832"},"edge_type":"inherent","type":"","uuid":"a588c086-2952-4253-9e1d-6e536855187f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"642ce42a-c91c-4db7-a463-1231c7074704"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f445ebb2-79f9-4041-aba7-7b473d8a4a11"},"edge_type":"inherent","type":"","uuid":"720233d3-dadd-41ce-827b-e3a18abe68e4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d98b5c58-6572-4feb-b884-84364c3ed832"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"188218b6-83d6-4206-91a7-cae144cdd451"},"edge_type":"inherent","type":"","uuid":"4e9c51ea-df20-47b1-b14e-8405abb2d0ab","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d58a8643-bf74-4ad4-be12-49848033fc98"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d58a8643-bf74-4ad4-be12-49848033fc98"},"edge_type":"inherent","type":"","uuid":"3f1c02cd-b64e-4673-bc88-fed431785050","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f445ebb2-79f9-4041-aba7-7b473d8a4a11"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"cd5104de-fd06-4038-9263-e663870ee030"},"edge_type":"inherent","type":"","uuid":"1e929197-c038-44b9-af19-ef5b39981ce3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"6637e08e-86d2-40d3-9cbc-679328dc093b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"846a1815-fde9-4747-9bb1-3bc3d19a9a30"},"edge_type":"inherent","type":"","uuid":"855b6e69-c33e-4267-8730-cdc2c28a19b5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"cd5104de-fd06-4038-9263-e663870ee030"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"d0fd0210-f31f-4852-80a1-3270cf1cc571"},"edge_type":"inherent","type":"","uuid":"47330536-c96f-4fff-9cf6-8fc888c3a772","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"fad597d6-cecf-4081-875c-17f528637d90"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"fad597d6-cecf-4081-875c-17f528637d90"},"edge_type":"inherent","type":"","uuid":"6726b075-d263-4327-b668-3133c5003128","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"846a1815-fde9-4747-9bb1-3bc3d19a9a30"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"fad597d6-cecf-4081-875c-17f528637d90"},"edge_type":"dependency","type":"","uuid":"23a3f00f-4f14-43e7-894d-546ed920c8e8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f445ebb2-79f9-4041-aba7-7b473d8a4a11"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d58a8643-bf74-4ad4-be12-49848033fc98"},"edge_type":"dependency","type":"","uuid":"7810d8a8-3212-4ab7-b9ce-ef6886d46b2a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"846a1815-fde9-4747-9bb1-3bc3d19a9a30"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"d0fd0210-f31f-4852-80a1-3270cf1cc571","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"188218b6-83d6-4206-91a7-cae144cdd451","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d58a8643-bf74-4ad4-be12-49848033fc98","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"d64e4d0f-1705-4336-a84a-35cd583d5213"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fad597d6-cecf-4081-875c-17f528637d90","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"9825e114-5173-4617-b9ac-af974d81db28"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"846a1815-fde9-4747-9bb1-3bc3d19a9a30","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"81e51469-7eba-4b3d-bfe7-481431984765"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f445ebb2-79f9-4041-aba7-7b473d8a4a11","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f36c73be-8aaf-4dec-a2b2-992ef37e9ff0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d98b5c58-6572-4feb-b884-84364c3ed832","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"cd5104de-fd06-4038-9263-e663870ee030","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"642ce42a-c91c-4db7-a463-1231c7074704","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6637e08e-86d2-40d3-9cbc-679328dc093b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"7766cfd8-fd88-4db6-8bac-a066e9a0b6d3","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004","uuid":"7736dd21-33ed-4b56-9bcb-78285b769da7"},"name":"SYS_GEN__Runbook_Application_234e6716_2347_4711_80e6_0525b24f6004"}},{"description":"System action for starting an application","message_list":[],"uuid":"6c02023f-eb95-465d-8c13-0837e81d9dda","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"GCP","uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},"retries":"0","description":"","type":"DAG","uuid":"5a8e3610-3459-49ee-bef1-5c3c29eb08ae","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"09d116f5-7f3f-4c9e-9ec1-a614a69591e0"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"a237ad55-2213-472d-9dd6-9ba585e38aa5"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e8da73e5-33e4-4c0b-89f4-f5b1faa31e01"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"74c863af-221f-4f72-b186-bec24d54a3c9"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"a237ad55-2213-472d-9dd6-9ba585e38aa5"},"edge_type":"inherent","type":"","uuid":"6f6842ad-a5f5-45c6-a1ce-9dd4b9cb7536","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"74c863af-221f-4f72-b186-bec24d54a3c9"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"09d116f5-7f3f-4c9e-9ec1-a614a69591e0"},"edge_type":"inherent","type":"","uuid":"f6e1c55f-1bb8-4e6b-a006-c9e62982938b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e8da73e5-33e4-4c0b-89f4-f5b1faa31e01"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"09d116f5-7f3f-4c9e-9ec1-a614a69591e0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"0821d97f-d22a-49eb-bfa0-4abdeb73ab23"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a237ad55-2213-472d-9dd6-9ba585e38aa5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"bf67dfe4-7105-49a0-a82d-48911564bfc9"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e8da73e5-33e4-4c0b-89f4-f5b1faa31e01","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"74c863af-221f-4f72-b186-bec24d54a3c9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"3d8fd151-1286-45ce-86d2-a5a1c95a7688","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004","uuid":"5a8e3610-3459-49ee-bef1-5c3c29eb08ae"},"name":"SYS_GEN__Runbook_Application_234e6716_2347_4711_80e6_0525b24f6004"}},{"description":"System action for restarting an application","message_list":[],"uuid":"8142bc8b-5f5e-4cd5-b529-0a95b8defc2a","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"GCP","uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},"retries":"0","description":"","type":"DAG","uuid":"bb9e3306-9b1d-40aa-9e1c-09b4a0e3bd75","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"b4f1cdd8-dd15-4e5f-ad45-9c13f268c02e"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"c093a0bc-51f5-451d-8439-d2d6fa75b3ef"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"c96e5cc6-8039-468b-ae87-402c5c0ee910"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7c917814-84da-4ed0-817c-efb8f980d110"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"b4f1cdd8-dd15-4e5f-ad45-9c13f268c02e"},"edge_type":"inherent","type":"","uuid":"b1930ab7-fd60-4630-8554-acb0affdff5e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7c917814-84da-4ed0-817c-efb8f980d110"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"c093a0bc-51f5-451d-8439-d2d6fa75b3ef"},"edge_type":"inherent","type":"","uuid":"89a8476c-34fa-4238-8cab-de306ce587f9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"c96e5cc6-8039-468b-ae87-402c5c0ee910"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b4f1cdd8-dd15-4e5f-ad45-9c13f268c02e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"4f04d37f-a1fb-4993-9180-71a2a2c052fb"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c093a0bc-51f5-451d-8439-d2d6fa75b3ef","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"843efa80-5962-4f97-aa29-48b5ba3b3d84"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c96e5cc6-8039-468b-ae87-402c5c0ee910","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7c917814-84da-4ed0-817c-efb8f980d110","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"9126864c-63d4-4e59-9509-17ce69c8eace","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004","uuid":"bb9e3306-9b1d-40aa-9e1c-09b4a0e3bd75"},"name":"SYS_GEN__Runbook_Application_234e6716_2347_4711_80e6_0525b24f6004"}},{"description":"System action for stopping an application","message_list":[],"uuid":"ca5e654a-1f7d-425a-b277-c5da0fb2496e","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"GCP","uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},"retries":"0","description":"","type":"DAG","uuid":"75256d7a-238e-4c8b-b0a9-ca7cd778620d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2a0ac34d-e0dc-4d3d-83e7-2363816dbf0c"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4299e304-b68d-450a-80b7-626920c5f5c7"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"a5933609-b07d-49f0-a8e5-eeed4c46f849"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"0b3cdf7c-9403-4f0b-b65d-2ce54c4fede4"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2a0ac34d-e0dc-4d3d-83e7-2363816dbf0c"},"edge_type":"inherent","type":"","uuid":"b10224c3-d947-4763-943a-710c4e9dcc3e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"a5933609-b07d-49f0-a8e5-eeed4c46f849"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4299e304-b68d-450a-80b7-626920c5f5c7"},"edge_type":"inherent","type":"","uuid":"dc971993-7359-413e-9030-0ed6a561099d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"0b3cdf7c-9403-4f0b-b65d-2ce54c4fede4"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2a0ac34d-e0dc-4d3d-83e7-2363816dbf0c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4299e304-b68d-450a-80b7-626920c5f5c7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a5933609-b07d-49f0-a8e5-eeed4c46f849","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"499f2f07-9aec-4851-adcb-a3ebc68f7d63"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0b3cdf7c-9403-4f0b-b65d-2ce54c4fede4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"970353c4-39f8-4737-bd80-22ecde661c25"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"}],"description":"","message_list":[],"uuid":"54b0d3e3-8fad-4a89-8a2f-c47b002d9f8a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004","uuid":"75256d7a-238e-4c8b-b0a9-ca7cd778620d"},"name":"SYS_GEN__Runbook_Application_234e6716_2347_4711_80e6_0525b24f6004"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"e2b28945-0c4b-4ec5-9535-84897aaf458c","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"GCP","uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},"retries":"0","description":"","type":"DAG","uuid":"fc0bbf73-7825-4889-92a2-a128ba45a265","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"ea638fc8-521d-4e69-affb-8c5631d269c2"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"360b5afc-0516-4ad8-a2c1-e23dc98dba7b"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d2948242-68b4-44fa-b54a-b3b25d87746a"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0c181eb2-8dba-4466-bb07-87ff36ce0d11"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1433e163-b2b3-498f-8544-b3f8e2b5e46f"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"53c8d7a6-2b09-46c0-8cf4-910680499f5f"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"32a159fd-3d87-44ca-8378-bc594b9247f1"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"58dda08e-aeaa-4361-bbd8-b1317032ccbf"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"155409d0-40e2-4a1f-aaba-ea4de7352d7a"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"0deea030-2170-4260-b9bc-2bffe2e3e271"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"ea638fc8-521d-4e69-affb-8c5631d269c2"},"edge_type":"inherent","type":"","uuid":"eac471cc-4039-4c78-9dd9-f7353394c00f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0c181eb2-8dba-4466-bb07-87ff36ce0d11"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0c181eb2-8dba-4466-bb07-87ff36ce0d11"},"edge_type":"inherent","type":"","uuid":"ec257a7a-b85f-4f5e-8a8a-88a1cc5f321d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"53c8d7a6-2b09-46c0-8cf4-910680499f5f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"32a159fd-3d87-44ca-8378-bc594b9247f1"},"edge_type":"inherent","type":"","uuid":"01277238-8aef-48c4-850c-abd8d4d440dd","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"0deea030-2170-4260-b9bc-2bffe2e3e271"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"53c8d7a6-2b09-46c0-8cf4-910680499f5f"},"edge_type":"inherent","type":"","uuid":"317d762e-d281-4938-b74e-dc2eed486ae7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"32a159fd-3d87-44ca-8378-bc594b9247f1"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"360b5afc-0516-4ad8-a2c1-e23dc98dba7b"},"edge_type":"inherent","type":"","uuid":"bac86885-3075-4bf3-b6ba-936b72f9ac28","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d2948242-68b4-44fa-b54a-b3b25d87746a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d2948242-68b4-44fa-b54a-b3b25d87746a"},"edge_type":"inherent","type":"","uuid":"6f473850-3af3-42cb-9a7c-c5de1f6aea4a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1433e163-b2b3-498f-8544-b3f8e2b5e46f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"58dda08e-aeaa-4361-bbd8-b1317032ccbf"},"edge_type":"inherent","type":"","uuid":"a5e31308-988d-404e-91fd-8a0e544f77b7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"155409d0-40e2-4a1f-aaba-ea4de7352d7a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1433e163-b2b3-498f-8544-b3f8e2b5e46f"},"edge_type":"inherent","type":"","uuid":"fb46e5e5-235d-481c-bf1c-6b318aeb4d9f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"58dda08e-aeaa-4361-bbd8-b1317032ccbf"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"53c8d7a6-2b09-46c0-8cf4-910680499f5f"},"edge_type":"create_action_edge","type":"","uuid":"3d4d5506-b87b-40d4-9963-c3f7aa8ce038","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"58dda08e-aeaa-4361-bbd8-b1317032ccbf"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1433e163-b2b3-498f-8544-b3f8e2b5e46f"},"edge_type":"create_action_edge","type":"","uuid":"116a6a94-fdbb-4ed5-a928-da78e74d38e8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"32a159fd-3d87-44ca-8378-bc594b9247f1"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"0c181eb2-8dba-4466-bb07-87ff36ce0d11"},"edge_type":"dependency","type":"","uuid":"579c1de2-9801-4a87-a276-0919c921fc91","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1433e163-b2b3-498f-8544-b3f8e2b5e46f"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ea638fc8-521d-4e69-affb-8c5631d269c2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"360b5afc-0516-4ad8-a2c1-e23dc98dba7b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d2948242-68b4-44fa-b54a-b3b25d87746a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0c181eb2-8dba-4466-bb07-87ff36ce0d11","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1433e163-b2b3-498f-8544-b3f8e2b5e46f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"f1cb0f30-2826-4659-82b8-7bd85ecea7f3"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"53c8d7a6-2b09-46c0-8cf4-910680499f5f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"452926d6-3f38-41b0-a327-860fd051f1fa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"32a159fd-3d87-44ca-8378-bc594b9247f1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"99bfb5ef-49b9-4e84-b2bc-9ae1ca0cdc5b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"58dda08e-aeaa-4361-bbd8-b1317032ccbf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"58e293aa-b21d-46b7-8d7d-a52e04f8cde0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"155409d0-40e2-4a1f-aaba-ea4de7352d7a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"0deea030-2170-4260-b9bc-2bffe2e3e271","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}],"description":"","message_list":[],"uuid":"da00d23a-2c84-4c34-aa35-9c66a3b2193a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004","uuid":"fc0bbf73-7825-4889-92a2-a128ba45a265"},"name":"SYS_GEN__Runbook_Application_234e6716_2347_4711_80e6_0525b24f6004"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"5ae88611-fb1b-4e20-8d80-1fa66798a36f","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"GCP","uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},"retries":"0","description":"","type":"DAG","uuid":"30a95ce7-77f9-45d5-87c2-684bcf7b7ff6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b66f1026-3a64-40e8-b7ae-0cfaeaa638bf"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"480f1d28-5f2f-4a45-8b0a-e4f731e0f7c0"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1cf0edbc-1675-4ee5-874f-5d7ea6a6d894"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"1d233965-7b15-427c-9609-a7f4c61364f5"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"61d53bab-ec7a-4762-9cd5-afecbe5e25bd"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"174ab189-bdde-4ba2-ae95-9cc754668f8f"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"8ea2e2fb-e722-4f43-b32c-9351fc1709ca"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"cc6e1522-9a5d-407f-ba34-53a8a2c8dfc2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b66f1026-3a64-40e8-b7ae-0cfaeaa638bf"},"edge_type":"inherent","type":"","uuid":"c5190e85-5d11-4bf9-9e7c-dad74a34d1a1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"1d233965-7b15-427c-9609-a7f4c61364f5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"61d53bab-ec7a-4762-9cd5-afecbe5e25bd"},"edge_type":"inherent","type":"","uuid":"a712f1e6-9b0e-4a06-a749-bed80c812772","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa","uuid":"cc6e1522-9a5d-407f-ba34-53a8a2c8dfc2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"1d233965-7b15-427c-9609-a7f4c61364f5"},"edge_type":"inherent","type":"","uuid":"4c8125dd-5df6-4107-be2c-4f51bb849feb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"61d53bab-ec7a-4762-9cd5-afecbe5e25bd"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"480f1d28-5f2f-4a45-8b0a-e4f731e0f7c0"},"edge_type":"inherent","type":"","uuid":"bf83b22d-44b7-48cd-a741-4b0198ef7b66","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1cf0edbc-1675-4ee5-874f-5d7ea6a6d894"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"174ab189-bdde-4ba2-ae95-9cc754668f8f"},"edge_type":"inherent","type":"","uuid":"cc6d3a84-a643-4b0e-a72a-26680914c086","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7","uuid":"8ea2e2fb-e722-4f43-b32c-9351fc1709ca"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1cf0edbc-1675-4ee5-874f-5d7ea6a6d894"},"edge_type":"inherent","type":"","uuid":"4fa1bc98-25d5-45c6-97b7-f0256898900a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"174ab189-bdde-4ba2-ae95-9cc754668f8f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"1d233965-7b15-427c-9609-a7f4c61364f5"},"edge_type":"create_action_edge","type":"","uuid":"68f2e904-c529-43ee-8582-a6f8fbbb6479","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"174ab189-bdde-4ba2-ae95-9cc754668f8f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"1cf0edbc-1675-4ee5-874f-5d7ea6a6d894"},"edge_type":"create_action_edge","type":"","uuid":"71b63e9f-c0f0-4644-b0a6-ec490209ba45","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"61d53bab-ec7a-4762-9cd5-afecbe5e25bd"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b66f1026-3a64-40e8-b7ae-0cfaeaa638bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"480f1d28-5f2f-4a45-8b0a-e4f731e0f7c0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"1cf0edbc-1675-4ee5-874f-5d7ea6a6d894","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"1d233965-7b15-427c-9609-a7f4c61364f5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"61d53bab-ec7a-4762-9cd5-afecbe5e25bd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5","uuid":"44eaecd0-1490-4213-915f-c79374013b7c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_ff719bc6_bcca_4c1c_b691_a931bd6e2de5"},{"target_any_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"174ab189-bdde-4ba2-ae95-9cc754668f8f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab","uuid":"a54da0b3-68a6-4c4e-ad24-87e5724d4aaa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_fd41b059_b412_4c19_ba36_ca417a5806ab"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"8ea2e2fb-e722-4f43-b32c-9351fc1709ca","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_78e07ffd_9c25_4005_aba0_444053ecbcd7"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment","uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"cc6e1522-9a5d-407f-ba34-53a8a2c8dfc2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_41a81f4c_6289_4f56_aef8_b7f9003bb8fa"}],"description":"","message_list":[],"uuid":"e02ae6a2-47bf-40df-a9e8-c61fffc2fbea","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_234e6716_2347_4711_80e6_0525b24f6004","uuid":"30a95ce7-77f9-45d5-87c2-684bcf7b7ff6"},"name":"SYS_GEN__Runbook_Application_234e6716_2347_4711_80e6_0525b24f6004"}}],"message_list":[],"uuid":"220bc930-004f-476a-a669-7d48ab9c58df","state":"ACTIVE","dependency_list":[{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SW","action_name":"action_create","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SW","action_name":"action_create","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"name","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SW","action_name":"action_create","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SM","action_name":"action_create","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SM","action_name":"action_create","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SM","action_name":"action_create","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"ServiceCfg","setter_resource_name":"Kubernetes_Master","action_name":"action_delete","action_resource_name":"GCP","getter_resource_name":"GCP_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SM","action_name":"action_create","action_resource_name":"34875daf_deployment","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"DeploymentCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"GCP_Centos_K8SM","action_name":"action_create","action_resource_name":"34875daf_deployment","getter_resource_name":"GCP_Centos_K8SM_Package","action_resource_kind":"DeploymentCfg"}],"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"0c66cdbf-52ee-498e-9880-fcf773d3ab43","value":"gcp-kubenetes-cluster","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_NAME"},{"regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"c2f2fa87-3cd0-41bc-b442-71ab14006538","value":"v1.12.8","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"196e898f-3ad5-47fd-9131-7f68d8faebd5","value":"17.03.3.ce","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"12596810-28cb-40ef-84a4-f3d6bc3f92ac","value":"10.200.0.0\/16","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"1d47f4f2-ac26-4267-ade4-52bdb48db143","value":"10.32.0.0\/24","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_SERVICE_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"db593117-5b45-40b7-ba7f-edb1c8c42965","value":"10.32.0.10","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_DNS_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"0b8cb6b5-cb08-4cff-ae24-c5587cfa4b9c","value":"flannel","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"}],"name":"GCP"},{"deployment_create_list":[{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"8d2930e4-8d89-42a4-b8b4-5a2e3a4c71ec","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"c661fc2c-b464-4b7e-a530-5a6832260eda","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"28332085-6b73-4916-a290-945552bafa34"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"4c81f934-83a5-4bb6-9d27-0957e87f5b37"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"3362a322-ac85-495e-a606-da5aa5f2d875"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"08b073cc-3fb3-42db-bb1d-24acf3093563"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d70bec1d-26da-4a03-a5db-1834a6bd2d0e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"08b073cc-3fb3-42db-bb1d-24acf3093563"},"edge_type":"inherent","type":"","uuid":"8051a72c-8688-4fd9-9343-e954beafa2bb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d70bec1d-26da-4a03-a5db-1834a6bd2d0e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"3362a322-ac85-495e-a606-da5aa5f2d875"},"edge_type":"inherent","type":"","uuid":"243894ff-cddb-4474-bc7b-ae1633da1c3e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"08b073cc-3fb3-42db-bb1d-24acf3093563"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"28332085-6b73-4916-a290-945552bafa34"},"edge_type":"inherent","type":"","uuid":"504b1db4-ddaa-4772-8ca3-0914c1f19de5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"4c81f934-83a5-4bb6-9d27-0957e87f5b37"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"4c81f934-83a5-4bb6-9d27-0957e87f5b37"},"edge_type":"inherent","type":"","uuid":"18bb8ef8-a4e7-4189-8beb-d6807a2941ef","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"3362a322-ac85-495e-a606-da5aa5f2d875"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"28332085-6b73-4916-a290-945552bafa34","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4c81f934-83a5-4bb6-9d27-0957e87f5b37","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"04577d7d-79e2-4457-93d6-e3f4898b6cb3"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3362a322-ac85-495e-a606-da5aa5f2d875","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"31e47eb8-7481-4032-8d7e-94e33553af45"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"08b073cc-3fb3-42db-bb1d-24acf3093563","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d70bec1d-26da-4a03-a5db-1834a6bd2d0e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"e23b15de-6869-4be8-ab3a-9d26d6a43466","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"c661fc2c-b464-4b7e-a530-5a6832260eda"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for starting an application","message_list":[],"uuid":"b5221f27-0d1e-4318-a986-0642111acea0","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"b40798e0-e686-4b45-8c22-63f41ddc1cdb","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"dbee6a95-5db3-4d99-b9b7-d8a03a5baeb6"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7e256ae1-beaf-4221-93da-e04349e1af67"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"dbee6a95-5db3-4d99-b9b7-d8a03a5baeb6"},"edge_type":"inherent","type":"","uuid":"202b19f7-3f52-4192-a1e9-f4d495d2f103","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7e256ae1-beaf-4221-93da-e04349e1af67"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dbee6a95-5db3-4d99-b9b7-d8a03a5baeb6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"ac412d5b-d99f-48f9-a9bd-07d3ec52af54"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7e256ae1-beaf-4221-93da-e04349e1af67","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"d298221a-181f-4e6d-b9c0-0dd9639bc33b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"b40798e0-e686-4b45-8c22-63f41ddc1cdb"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for restarting an application","message_list":[],"uuid":"7eb3483f-3fbb-4ea2-bbe9-01734cf24730","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"5dd2bcf5-a1fa-4c2a-aa53-eb03aa4314e2","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"69fb7d86-4734-4966-b826-e7f14635659d"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"36dfc9fa-a210-4dc6-ba78-d711144c4fae"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"69fb7d86-4734-4966-b826-e7f14635659d"},"edge_type":"inherent","type":"","uuid":"058251e7-159e-4e22-ab7a-c4fe69a9bb51","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"36dfc9fa-a210-4dc6-ba78-d711144c4fae"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"69fb7d86-4734-4966-b826-e7f14635659d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"e2da215a-2560-4cd4-9c45-c9a96ac2adfe"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"36dfc9fa-a210-4dc6-ba78-d711144c4fae","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"83fe3555-59ee-46ac-8bee-784fc9785448","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"5dd2bcf5-a1fa-4c2a-aa53-eb03aa4314e2"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for stopping an application","message_list":[],"uuid":"b5fc47d5-78ba-49ff-843e-a53a664861a3","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"772706a7-240a-48dd-8cfa-b020441429bc","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"165fc9c2-b56d-4d0f-a6a7-41c244aeae7c"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"5b76b764-54a3-4fbd-b880-3761d08d34e1"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"165fc9c2-b56d-4d0f-a6a7-41c244aeae7c"},"edge_type":"inherent","type":"","uuid":"f57d6667-9442-41c8-a5d3-ea5beaa27603","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"5b76b764-54a3-4fbd-b880-3761d08d34e1"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"165fc9c2-b56d-4d0f-a6a7-41c244aeae7c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5b76b764-54a3-4fbd-b880-3761d08d34e1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"083ab61d-ed6b-4bf3-bcb7-2274a931643d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"297778a9-65d1-4caf-bd45-74a98a07d63d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"772706a7-240a-48dd-8cfa-b020441429bc"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"b7d78231-7e2f-418b-98ad-8129f4e6d766","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"1d0dc8f2-a220-4990-9ac3-af46adce4504","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"1d8dca82-38cb-4cae-8fcb-cd41bc65f096"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"88141584-aeee-4a5f-9c79-c6b16fbefbe3"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"b97705ee-2f2c-4f0b-bc08-5d56d54ff98c"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"7d95f1af-3a3b-4090-8c91-8c2023a4c6de"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"03b003b3-47f4-4cef-ab30-e6d77c728c3b"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"1d8dca82-38cb-4cae-8fcb-cd41bc65f096"},"edge_type":"inherent","type":"","uuid":"39f343c4-7cf2-4226-965a-b95780ede37a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"88141584-aeee-4a5f-9c79-c6b16fbefbe3"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"88141584-aeee-4a5f-9c79-c6b16fbefbe3"},"edge_type":"inherent","type":"","uuid":"017c9b99-d5af-4d11-94c6-c0a839129246","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"b97705ee-2f2c-4f0b-bc08-5d56d54ff98c"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"b97705ee-2f2c-4f0b-bc08-5d56d54ff98c"},"edge_type":"inherent","type":"","uuid":"3ad991fe-5e27-4e39-833f-0662b5246fb8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"7d95f1af-3a3b-4090-8c91-8c2023a4c6de"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"7d95f1af-3a3b-4090-8c91-8c2023a4c6de"},"edge_type":"inherent","type":"","uuid":"8c16a3fa-7b1e-408b-87cf-1d0b5fd507ed","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"03b003b3-47f4-4cef-ab30-e6d77c728c3b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1d8dca82-38cb-4cae-8fcb-cd41bc65f096","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"88141584-aeee-4a5f-9c79-c6b16fbefbe3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b97705ee-2f2c-4f0b-bc08-5d56d54ff98c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"f7ba4bad-571a-44a4-b26d-442a57678baa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7d95f1af-3a3b-4090-8c91-8c2023a4c6de","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"652ecce4-72ef-4741-acaf-e2dd8b40939d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"03b003b3-47f4-4cef-ab30-e6d77c728c3b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}],"description":"","message_list":[],"uuid":"377e218e-5b43-44eb-8886-d0f2c4c5e26a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"1d0dc8f2-a220-4990-9ac3-af46adce4504"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for scaleout","message_list":[],"uuid":"540b41ac-43fe-4361-814d-804022af724e","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"3fe52c20-1d6e-47e2-b382-e9774e7f2a48","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"df6e0193-57a2-406e-9d68-65c495ef017c"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"SCALING","uuid":"df6e0193-57a2-406e-9d68-65c495ef017c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}],"description":"","message_list":[],"uuid":"7bc162e7-f135-439b-8628-aeb540f724bc","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"872ecebf-833a-4018-ae08-60f157456244","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"3fe52c20-1d6e-47e2-b382-e9774e7f2a48"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for scalein","message_list":[],"uuid":"8929554b-e967-4246-8e60-e969d14deccd","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"aa66e892-51ff-4b38-bc3e-e6adfc03f621","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"6e1e962a-0e99-4ce1-b1c0-70d93f5ffa3d"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"SCALING","uuid":"6e1e962a-0e99-4ce1-b1c0-70d93f5ffa3d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}],"description":"","message_list":[],"uuid":"50a6a007-de3e-467f-84c0-b90b051b989d","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"0e57d5de-ce5f-481f-90b9-7a5f99b6c0a5","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"aa66e892-51ff-4b38-bc3e-e6adfc03f621"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"a73549d0-4840-4ba3-8154-8617f1afb2c5","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DAG","uuid":"0215c337-a1dd-4e5a-ae93-704d77f05e49","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"bc466e04-9ef1-4d7d-ba22-b8ed933d9c64"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"8673d607-ac89-45a6-a7f8-ba8f71038a01"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"c5e55f91-ccd4-49bd-a2b5-6ae44fa53fdc"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"c0558f5f-8c1b-4859-81b6-2be7c2e6ebe8"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"bc466e04-9ef1-4d7d-ba22-b8ed933d9c64"},"edge_type":"inherent","type":"","uuid":"7d5bba05-a57a-4ced-b586-65875280f8aa","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"8673d607-ac89-45a6-a7f8-ba8f71038a01"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"c5e55f91-ccd4-49bd-a2b5-6ae44fa53fdc"},"edge_type":"inherent","type":"","uuid":"05bfb1c8-fefd-44a4-99ad-9803cfbdcee3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"c0558f5f-8c1b-4859-81b6-2be7c2e6ebe8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"8673d607-ac89-45a6-a7f8-ba8f71038a01"},"edge_type":"inherent","type":"","uuid":"35ad6807-79db-46e3-bd74-9260b0a4d9b2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"c5e55f91-ccd4-49bd-a2b5-6ae44fa53fdc"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bc466e04-9ef1-4d7d-ba22-b8ed933d9c64","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"8673d607-ac89-45a6-a7f8-ba8f71038a01","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c5e55f91-ccd4-49bd-a2b5-6ae44fa53fdc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"91d25710-39ab-4a8d-8f07-9b5c956a77fb"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"c0558f5f-8c1b-4859-81b6-2be7c2e6ebe8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}],"description":"","message_list":[],"uuid":"6c19e489-421f-4a80-8255-bbe8d9633739","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"0215c337-a1dd-4e5a-ae93-704d77f05e49"},"name":"SYS_GEN__Runbook_Deployment_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb","min_replicas":"3","state":"ACTIVE","max_replicas":"3","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"}],"substrate_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"34875daf_deployment_cloned_1"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"a7e769f0-5f2e-4fde-be5c-23a406504c59","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"7cb12ff2-31d2-4cae-9ef7-fcebf34a56b5","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"0c0a8848-015e-42d3-9a22-85bb701bad56"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ff4bd34e-9b31-4e55-90bc-1eb1e19b9616"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"ef742077-f543-43ac-b694-745cfc35550d"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"23e56bb5-82c9-4c04-af48-9c987f903e61"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e8a773d8-113f-4608-a896-f93476ac07ae"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"23e56bb5-82c9-4c04-af48-9c987f903e61"},"edge_type":"inherent","type":"","uuid":"e27a46ed-97e0-44d6-8e63-3f36e17c6e50","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e8a773d8-113f-4608-a896-f93476ac07ae"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"ef742077-f543-43ac-b694-745cfc35550d"},"edge_type":"inherent","type":"","uuid":"0e4de4a2-8850-4ffb-9c12-4fe1bafb0dab","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"23e56bb5-82c9-4c04-af48-9c987f903e61"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"0c0a8848-015e-42d3-9a22-85bb701bad56"},"edge_type":"inherent","type":"","uuid":"7c334f66-ed53-440e-82d3-3aa194f41c04","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ff4bd34e-9b31-4e55-90bc-1eb1e19b9616"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ff4bd34e-9b31-4e55-90bc-1eb1e19b9616"},"edge_type":"inherent","type":"","uuid":"c26a9e26-b6a4-43a7-8acd-dd09e587ef3c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"ef742077-f543-43ac-b694-745cfc35550d"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"0c0a8848-015e-42d3-9a22-85bb701bad56","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ff4bd34e-9b31-4e55-90bc-1eb1e19b9616","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"a9184bf2-3616-4a4d-bdbc-545890384b8f"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ef742077-f543-43ac-b694-745cfc35550d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"8d351e40-54c1-4479-8c08-cf976db6edf0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"23e56bb5-82c9-4c04-af48-9c987f903e61","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e8a773d8-113f-4608-a896-f93476ac07ae","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"719469d2-794e-45c8-8016-7c34f2ee0f6b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"7cb12ff2-31d2-4cae-9ef7-fcebf34a56b5"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for starting an application","message_list":[],"uuid":"ca7308fb-7771-4b24-8c85-6db5ed2c55d0","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"b9a5cbac-207d-4c2b-a01c-d0c0c5a63c57","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"321a11b4-373c-4591-8d3c-5f0190801261"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"701c5e3f-fdce-4c9c-a898-8b7546dc3da5"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"321a11b4-373c-4591-8d3c-5f0190801261"},"edge_type":"inherent","type":"","uuid":"fa1a7d0f-b7d9-422f-ae88-4976948f9754","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"701c5e3f-fdce-4c9c-a898-8b7546dc3da5"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"321a11b4-373c-4591-8d3c-5f0190801261","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"8c3c905a-839a-41fb-b90b-b96b39b6f32b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"701c5e3f-fdce-4c9c-a898-8b7546dc3da5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"599ed0f3-9735-4bad-bce6-658a3afe7af8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"b9a5cbac-207d-4c2b-a01c-d0c0c5a63c57"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for restarting an application","message_list":[],"uuid":"40ae0ea7-f758-4669-8113-664e158d2ec2","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"99d483db-6703-4501-a4f4-2bc775f0e98b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"e99c0106-37cf-4016-afd4-f879b93cffcb"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4a9be22a-9f10-43a7-8315-cd4263616bac"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"e99c0106-37cf-4016-afd4-f879b93cffcb"},"edge_type":"inherent","type":"","uuid":"68da80bd-57f6-4b39-8542-5475c28376f9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4a9be22a-9f10-43a7-8315-cd4263616bac"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e99c0106-37cf-4016-afd4-f879b93cffcb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"413ec063-9f43-47e4-a254-a909f03adec5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4a9be22a-9f10-43a7-8315-cd4263616bac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"c1f456c1-9a6a-4ccc-9c96-07066402f801","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"99d483db-6703-4501-a4f4-2bc775f0e98b"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for stopping an application","message_list":[],"uuid":"10276760-791b-49d2-9e5d-ab6b6a45d043","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"116e4e0a-dfea-4193-a5e0-b723f0df925f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"1d024ff1-bef5-4fe5-a783-3022ce427f6e"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"a842e925-4305-4b01-a28b-c5fc841e1807"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"1d024ff1-bef5-4fe5-a783-3022ce427f6e"},"edge_type":"inherent","type":"","uuid":"13688c91-54be-4084-a8f2-9fcb8d5d46b7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"a842e925-4305-4b01-a28b-c5fc841e1807"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1d024ff1-bef5-4fe5-a783-3022ce427f6e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a842e925-4305-4b01-a28b-c5fc841e1807","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"656140d0-c555-44bf-9698-6681292ec8c8"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"}],"description":"","message_list":[],"uuid":"bf71f452-3f44-442b-9290-4f88ba60ceb3","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"116e4e0a-dfea-4193-a5e0-b723f0df925f"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"6937cc72-5c27-486a-b63d-f8ad3bff8bd1","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"1dbec3e9-dc06-48c0-a18f-4046db59d66c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9a571025-0c2a-421a-99ba-9fb97f683529"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5db9c80d-9703-4058-99c5-ccd94de1e93b"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f80e9613-22b5-4beb-b6ab-3ac4ea85cdf8"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"1afdb784-ec6f-4583-acdc-8973fc8ea7f2"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"6cff97a6-aceb-4628-98dd-e2d9aeb0a3d5"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9a571025-0c2a-421a-99ba-9fb97f683529"},"edge_type":"inherent","type":"","uuid":"97a0f634-631f-4ac0-b880-de0768745a62","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5db9c80d-9703-4058-99c5-ccd94de1e93b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5db9c80d-9703-4058-99c5-ccd94de1e93b"},"edge_type":"inherent","type":"","uuid":"1d367e4d-2ebe-41d8-99b9-da6399dd8efe","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f80e9613-22b5-4beb-b6ab-3ac4ea85cdf8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f80e9613-22b5-4beb-b6ab-3ac4ea85cdf8"},"edge_type":"inherent","type":"","uuid":"539388c6-61da-43e9-bf7e-0caf47c844ea","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"1afdb784-ec6f-4583-acdc-8973fc8ea7f2"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"1afdb784-ec6f-4583-acdc-8973fc8ea7f2"},"edge_type":"inherent","type":"","uuid":"ce22f344-6df8-48b8-a1f8-ca81ec0d6ba2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"6cff97a6-aceb-4628-98dd-e2d9aeb0a3d5"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9a571025-0c2a-421a-99ba-9fb97f683529","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5db9c80d-9703-4058-99c5-ccd94de1e93b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f80e9613-22b5-4beb-b6ab-3ac4ea85cdf8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"c39869d5-5a61-4b33-9999-17638336af9d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1afdb784-ec6f-4583-acdc-8973fc8ea7f2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"5118f63f-4679-4119-9791-64b9a6a94212"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"6cff97a6-aceb-4628-98dd-e2d9aeb0a3d5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_5fec9da3_ca77_445c_96cb_726df66c483e"}],"description":"","message_list":[],"uuid":"5d85f846-cdf0-4294-9097-c24199d09f77","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"1dbec3e9-dc06-48c0-a18f-4046db59d66c"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for scaleout","message_list":[],"uuid":"f53e2566-701e-4246-ac30-0014cade546c","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"01bde619-fc16-49a6-a596-ede97e22ca4e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"6ee8c38a-222c-428a-a5e4-5f4535203046"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"SCALING","uuid":"6ee8c38a-222c-428a-a5e4-5f4535203046","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_5fec9da3_ca77_445c_96cb_726df66c483e"}],"description":"","message_list":[],"uuid":"c15f428a-733b-4280-8e9f-3811839e9737","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"fd367dcf-90f8-4478-8b8b-0ef504f009f8","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"01bde619-fc16-49a6-a596-ede97e22ca4e"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for scalein","message_list":[],"uuid":"6ddb7ac4-bf17-4412-aaa7-0afa342e2a58","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"c6aa815d-7a4c-45da-84d1-b9201f62bf52","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"718780b4-bb04-466b-a7f3-067fc31a58aa"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"SCALING","uuid":"718780b4-bb04-466b-a7f3-067fc31a58aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_5fec9da3_ca77_445c_96cb_726df66c483e"}],"description":"","message_list":[],"uuid":"29626eb5-f40b-47e1-804d-1f4f1782debc","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"d39bc1e1-3217-45a4-bafa-4c3ed3ac8334","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"c6aa815d-7a4c-45da-84d1-b9201f62bf52"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"2aa1050d-25f0-4ea6-82e5-fa5d6fee39b9","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DAG","uuid":"2efd5343-888b-42ab-a6e8-66dcffa8a201","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ce6aeefe-ee0a-4a83-b068-36041aa96c24"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"a9b89c80-30b6-4765-945b-8db3c23274b7"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"bc1e44e0-b856-41c6-a0e3-3bf86be0eccc"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"6654c0af-397c-4d3d-8b31-cab68a6335b9"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ce6aeefe-ee0a-4a83-b068-36041aa96c24"},"edge_type":"inherent","type":"","uuid":"023edc32-91fb-4e1d-81ce-f1425025a2df","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"a9b89c80-30b6-4765-945b-8db3c23274b7"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"bc1e44e0-b856-41c6-a0e3-3bf86be0eccc"},"edge_type":"inherent","type":"","uuid":"4fee8a7e-f11e-483c-92ae-2783b46721d8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"6654c0af-397c-4d3d-8b31-cab68a6335b9"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"a9b89c80-30b6-4765-945b-8db3c23274b7"},"edge_type":"inherent","type":"","uuid":"43773e28-9222-494b-b5e9-66b987f04977","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"bc1e44e0-b856-41c6-a0e3-3bf86be0eccc"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ce6aeefe-ee0a-4a83-b068-36041aa96c24","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"a9b89c80-30b6-4765-945b-8db3c23274b7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bc1e44e0-b856-41c6-a0e3-3bf86be0eccc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"c2bcae96-aff4-49e3-a23c-a11b79f32123"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"6654c0af-397c-4d3d-8b31-cab68a6335b9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_5fec9da3_ca77_445c_96cb_726df66c483e"}],"description":"","message_list":[],"uuid":"e24256ed-bc51-4425-8072-b5aa6bb3d274","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"2efd5343-888b-42ab-a6e8-66dcffa8a201"},"name":"SYS_GEN__Runbook_Deployment_5fec9da3_ca77_445c_96cb_726df66c483e"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8","min_replicas":"3","state":"ACTIVE","max_replicas":"9","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"}],"substrate_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"77b729d5_deployment_cloned_1"}],"description":"","action_list":[{"description":"","message_list":[],"uuid":"87023008-9f5b-44f9-b7af-eb7755a6b17f","name":"Upgrade","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"8b31dfe5-776f-4e27-b568-056dc2661b23","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"5da6d8e5-f085-40ab-80c6-caf8b5836108"},{"kind":"app_task","name":"Set Version Worker","uuid":"c0628233-2468-4fc5-8117-e1921bad6e05"},{"kind":"app_task","name":"Upgrade Worker","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211"},{"kind":"app_task","name":"Upgrade Master","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2"},{"kind":"app_task","name":"Restart Services","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"5da6d8e5-f085-40ab-80c6-caf8b5836108"},"edge_type":"user_defined","type":"","uuid":"cbe1b611-4000-403a-a015-ca15cb7a0a92","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2"},"edge_type":"user_defined","type":"","uuid":"5679158a-9c8e-494f-a8d3-a63df00455f3","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Worker","uuid":"c0628233-2468-4fc5-8117-e1921bad6e05"},"edge_type":"user_defined","type":"","uuid":"06c776bf-6fe7-41ad-aade-b13e63219f19","to_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211"},"edge_type":"user_defined","type":"","uuid":"ff8a50e4-0294-46fa-b967-84200ba7a30f","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"cbdb4fa8_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"5da6d8e5-f085-40ab-80c6-caf8b5836108","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"c0628233-2468-4fc5-8117-e1921bad6e05","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_NAMES=\"@@{calm_array_name}@@\" \nWORKER_NAMES=\"@@{Azure_Centos_K8SM.name}@@\" \nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor name in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain ${name} --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"worker${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=${name} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon ${name}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor name in $(echo \"${MASTER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain $name --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"master${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=$name -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Restart Services"}],"description":"","message_list":[],"uuid":"22de45ba-21b9-439b-99da-65d9e496a488","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"8cddf08e-eb4c-4f29-8c80-fe247f8064a2","value":"v1.13.6","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"cbdb4fa8_dag","uuid":"8b31dfe5-776f-4e27-b568-056dc2661b23"},"name":"8d003d32_runbook_cloned_1"}},{"description":"","message_list":[],"uuid":"379800dd-1b88-41be-87aa-75f6069ce3a0","name":"ScaleOut","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"b766446c-47b3-40ac-b58d-174ef3f93585","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"4eb43620-c2b0-44b6-94c8-5748eb7c6481"},{"kind":"app_task","name":"Set Hosts File","uuid":"3c0d6539-519c-4d80-b673-c95e576ef414"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"4eb43620-c2b0-44b6-94c8-5748eb7c6481"},"edge_type":"user_defined","type":"","uuid":"0cb35f4c-7e1e-4ce8-854b-ee8439a0adc7","to_task_reference":{"kind":"app_task","name":"Set Hosts File","uuid":"3c0d6539-519c-4d80-b673-c95e576ef414"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"f3682593_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"SCALING","uuid":"4eb43620-c2b0-44b6-94c8-5748eb7c6481","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"3c0d6539-519c-4d80-b673-c95e576ef414","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nWORKER_IPS=\"@@{Azure_Centos_K8SM.private_ip_address}@@\"\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n    echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Hosts File"}],"description":"","message_list":[],"uuid":"bab97dfc-be4d-4f02-a2ee-3d0ae0d33da1","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"6fa48665-c356-4b0d-8d57-5c5fae76773f","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"f3682593_dag","uuid":"b766446c-47b3-40ac-b58d-174ef3f93585"},"name":"744583cd_runbook_cloned_1"}},{"description":"","message_list":[],"uuid":"9ed3d84d-4cc5-44dc-b8aa-dcb2162266c3","name":"ScaleIn","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"9f62dad3-df1a-41dd-9dd3-61438f8d0d51","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"34b0ea86-261c-42b9-9d29-e3332968f650"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"853cb860_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"SCALING","uuid":"34b0ea86-261c-42b9-9d29-e3332968f650","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale In"}],"description":"","message_list":[],"uuid":"d6665b58-7f8f-4d22-a518-5c844d4fba41","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"af0a22e9-e5b2-4beb-ab73-18e9030e3bd8","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"853cb860_dag","uuid":"9f62dad3-df1a-41dd-9dd3-61438f8d0d51"},"name":"9331a25f_runbook_cloned_1"}},{"description":"System action for creating an application","message_list":[],"uuid":"80a0b516-c890-4b94-985d-4b1800191546","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Azure","uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},"retries":"0","description":"","type":"DAG","uuid":"4fba1b46-82a8-433e-b54d-1df82d4a92f6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"5411d120-4122-4280-a12f-d08bf66cbdb0"},{"kind":"app_task","name":"SYS_GEN__DE_Provision_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"21a5cf06-ade3-4171-b679-fb3454e503ff"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"614dc328-54be-48bd-8468-b54284d0352f"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b3ad33e0-272e-41d5-96ae-4df1d74f739e"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"bd476790-de9a-4605-bf4a-43d93d3fa401"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f2afba3c-c8da-4347-8e63-5c9549870263"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4a043819-6b24-459b-8d9d-701b46ee1ee6"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c83310ef-b37e-4553-b06d-28855b3bb0b1"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"21279b06-dfe2-416d-a1a6-8bfda26d50b3"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e5c18b09-d205-49a9-957a-1392ca737752"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c83310ef-b37e-4553-b06d-28855b3bb0b1"},"edge_type":"inherent","type":"","uuid":"b66aee5c-c305-493c-bce6-aded14d386c9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e5c18b09-d205-49a9-957a-1392ca737752"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"bd476790-de9a-4605-bf4a-43d93d3fa401"},"edge_type":"inherent","type":"","uuid":"6a55cd58-d1a9-4d1d-982e-5ebd5bba9330","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c83310ef-b37e-4553-b06d-28855b3bb0b1"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"5411d120-4122-4280-a12f-d08bf66cbdb0"},"edge_type":"inherent","type":"","uuid":"2c7af251-b86c-41b2-8f11-a67d101b538a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"614dc328-54be-48bd-8468-b54284d0352f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"614dc328-54be-48bd-8468-b54284d0352f"},"edge_type":"inherent","type":"","uuid":"8fcfa9fb-0c54-44ae-b683-765061f1a66b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"bd476790-de9a-4605-bf4a-43d93d3fa401"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4a043819-6b24-459b-8d9d-701b46ee1ee6"},"edge_type":"inherent","type":"","uuid":"acc4e2dd-13c6-4acd-a0ae-9bb5a983edbc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"21279b06-dfe2-416d-a1a6-8bfda26d50b3"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f2afba3c-c8da-4347-8e63-5c9549870263"},"edge_type":"inherent","type":"","uuid":"91de2b70-84fe-40f4-a574-a4df7fdbaa3d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4a043819-6b24-459b-8d9d-701b46ee1ee6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"21a5cf06-ade3-4171-b679-fb3454e503ff"},"edge_type":"inherent","type":"","uuid":"f0b51d17-cee0-4755-a7bd-ce0fa06c7a7b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b3ad33e0-272e-41d5-96ae-4df1d74f739e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b3ad33e0-272e-41d5-96ae-4df1d74f739e"},"edge_type":"inherent","type":"","uuid":"37ccaedc-4f38-4417-bc9c-950502652c24","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f2afba3c-c8da-4347-8e63-5c9549870263"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b3ad33e0-272e-41d5-96ae-4df1d74f739e"},"edge_type":"dependency","type":"","uuid":"2e14e2e7-9889-4a48-979e-d95d7f6b97f5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"bd476790-de9a-4605-bf4a-43d93d3fa401"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"614dc328-54be-48bd-8468-b54284d0352f"},"edge_type":"dependency","type":"","uuid":"4e30a3b8-a274-4d71-a413-a791ce95c235","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"f2afba3c-c8da-4347-8e63-5c9549870263"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"5411d120-4122-4280-a12f-d08bf66cbdb0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_b81c9b76_a47d_4a40_b199_3ea41ef244a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"21a5cf06-ade3-4171-b679-fb3454e503ff","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"614dc328-54be-48bd-8468-b54284d0352f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"04577d7d-79e2-4457-93d6-e3f4898b6cb3"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b3ad33e0-272e-41d5-96ae-4df1d74f739e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"a9184bf2-3616-4a4d-bdbc-545890384b8f"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bd476790-de9a-4605-bf4a-43d93d3fa401","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"31e47eb8-7481-4032-8d7e-94e33553af45"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f2afba3c-c8da-4347-8e63-5c9549870263","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"8d351e40-54c1-4479-8c08-cf976db6edf0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4a043819-6b24-459b-8d9d-701b46ee1ee6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c83310ef-b37e-4553-b06d-28855b3bb0b1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"21279b06-dfe2-416d-a1a6-8bfda26d50b3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e5c18b09-d205-49a9-957a-1392ca737752","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"9c3f156c-deff-447c-b64c-e4d37077818c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde","uuid":"4fba1b46-82a8-433e-b54d-1df82d4a92f6"},"name":"SYS_GEN__Runbook_Application_e955aab5_825b_4057_b86d_b28d02bbefde"}},{"description":"System action for starting an application","message_list":[],"uuid":"ca6e3c14-bf5c-4e90-8933-b9409de4be0d","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Azure","uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},"retries":"0","description":"","type":"DAG","uuid":"fe78ca52-96a7-4f29-8e3f-dde6d804b059","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"9b4bb453-8f36-4940-b307-7c5a74c1dda6"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b4cb33bc-a7fa-478f-b3ca-4017c71502e7"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0b302647-faa4-4cb5-8e86-635aaca6fdde"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3bbaf1c2-3f79-41bd-9dff-30db0b9fb433"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"9b4bb453-8f36-4940-b307-7c5a74c1dda6"},"edge_type":"inherent","type":"","uuid":"c202af03-2d41-48f3-b6e0-02dd9d890cad","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3bbaf1c2-3f79-41bd-9dff-30db0b9fb433"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b4cb33bc-a7fa-478f-b3ca-4017c71502e7"},"edge_type":"inherent","type":"","uuid":"8b8f78c2-455b-4614-a0d2-f6eb11337db1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0b302647-faa4-4cb5-8e86-635aaca6fdde"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9b4bb453-8f36-4940-b307-7c5a74c1dda6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"ac412d5b-d99f-48f9-a9bd-07d3ec52af54"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b4cb33bc-a7fa-478f-b3ca-4017c71502e7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"8c3c905a-839a-41fb-b90b-b96b39b6f32b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0b302647-faa4-4cb5-8e86-635aaca6fdde","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3bbaf1c2-3f79-41bd-9dff-30db0b9fb433","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"f0d39977-2ab8-4615-b53e-26973ca725b9","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde","uuid":"fe78ca52-96a7-4f29-8e3f-dde6d804b059"},"name":"SYS_GEN__Runbook_Application_e955aab5_825b_4057_b86d_b28d02bbefde"}},{"description":"System action for restarting an application","message_list":[],"uuid":"9f265e9a-5be4-4af4-a0de-0faef87e4229","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Azure","uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},"retries":"0","description":"","type":"DAG","uuid":"d793ad54-712f-49c0-bac4-b6be6dc89e43","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"96f4a8f5-76ac-498b-a07b-e3ef9628dd0b"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"f58a2161-3d84-40e4-943f-ec2d2a89c10c"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d125a12b-6ded-4447-b79b-79ca0ea0f4f5"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0adb90bd-7fd0-40b7-a27a-b7f1d8ae2f02"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"96f4a8f5-76ac-498b-a07b-e3ef9628dd0b"},"edge_type":"inherent","type":"","uuid":"7ec8b4ff-d2dc-4f36-83a4-beffd99b37a1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d125a12b-6ded-4447-b79b-79ca0ea0f4f5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"f58a2161-3d84-40e4-943f-ec2d2a89c10c"},"edge_type":"inherent","type":"","uuid":"8be50e32-522c-48b8-bfb5-303430630015","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0adb90bd-7fd0-40b7-a27a-b7f1d8ae2f02"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"96f4a8f5-76ac-498b-a07b-e3ef9628dd0b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"e2da215a-2560-4cd4-9c45-c9a96ac2adfe"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f58a2161-3d84-40e4-943f-ec2d2a89c10c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"413ec063-9f43-47e4-a254-a909f03adec5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d125a12b-6ded-4447-b79b-79ca0ea0f4f5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0adb90bd-7fd0-40b7-a27a-b7f1d8ae2f02","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"044f5bb7-d581-44f5-a698-10ab12f2e833","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde","uuid":"d793ad54-712f-49c0-bac4-b6be6dc89e43"},"name":"SYS_GEN__Runbook_Application_e955aab5_825b_4057_b86d_b28d02bbefde"}},{"description":"System action for stopping an application","message_list":[],"uuid":"7ea08646-1af7-4c7f-a4eb-0e59d5996a39","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Azure","uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},"retries":"0","description":"","type":"DAG","uuid":"75e4297a-2584-4d8d-9cc7-7eb2591c86fa","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ca903ac8-5d67-4d93-b2b6-cbc947161cd4"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2888e1e0-90db-457a-ae6a-955cb0ccad79"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ea025995-5bd0-4ab4-87af-37e5e79afd64"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"a76464ea-54d4-4481-90c1-d1998c6ed075"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2888e1e0-90db-457a-ae6a-955cb0ccad79"},"edge_type":"inherent","type":"","uuid":"e8dab652-1f3a-473b-a2e6-b3e139d4b5cc","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"a76464ea-54d4-4481-90c1-d1998c6ed075"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"ca903ac8-5d67-4d93-b2b6-cbc947161cd4"},"edge_type":"inherent","type":"","uuid":"6d7000a1-7ca8-461b-b1f2-b7d28870a914","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"ea025995-5bd0-4ab4-87af-37e5e79afd64"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ca903ac8-5d67-4d93-b2b6-cbc947161cd4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2888e1e0-90db-457a-ae6a-955cb0ccad79","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ea025995-5bd0-4ab4-87af-37e5e79afd64","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"656140d0-c555-44bf-9698-6681292ec8c8"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a76464ea-54d4-4481-90c1-d1998c6ed075","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"083ab61d-ed6b-4bf3-bcb7-2274a931643d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"}],"description":"","message_list":[],"uuid":"5e255dbe-f127-4c0f-b728-a002061611b8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde","uuid":"75e4297a-2584-4d8d-9cc7-7eb2591c86fa"},"name":"SYS_GEN__Runbook_Application_e955aab5_825b_4057_b86d_b28d02bbefde"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"c35f5783-a785-431b-af18-1e54522ff07e","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Azure","uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},"retries":"0","description":"","type":"DAG","uuid":"3fe8577b-d5b3-4ebf-92b1-576c8de9b40b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e718fb17-c65a-4a7d-8a26-b5d45578180b"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"62594e4e-1a09-477c-b1e6-cfc95efbe888"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"810ed950-8820-4bcf-9121-dbd76c168473"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4dec3816-39b2-4149-a3fc-adbf1a121b45"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"62b8e79a-c189-4150-bfef-86ce0f1733bf"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"0a8a18aa-798a-4cb4-a7fe-12f1b9b38ff6"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"702733e8-e47d-45b9-bdf2-54eb36f11699"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"05311943-e9fc-496a-aa6f-a14f5399b4b9"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"1b7e75b0-b381-49c4-b819-d127fe8fa590"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"9545ae9d-c2a7-44af-9577-67ff85196bbb"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"62594e4e-1a09-477c-b1e6-cfc95efbe888"},"edge_type":"inherent","type":"","uuid":"aeb4d076-5b92-40d6-b3c7-4f44ab7bc812","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4dec3816-39b2-4149-a3fc-adbf1a121b45"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4dec3816-39b2-4149-a3fc-adbf1a121b45"},"edge_type":"inherent","type":"","uuid":"26e7a059-1ddd-4127-b296-a040a7f9d528","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"62b8e79a-c189-4150-bfef-86ce0f1733bf"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"62b8e79a-c189-4150-bfef-86ce0f1733bf"},"edge_type":"inherent","type":"","uuid":"b5b8cfe6-8f02-4462-be3c-2722f116c786","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"05311943-e9fc-496a-aa6f-a14f5399b4b9"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"05311943-e9fc-496a-aa6f-a14f5399b4b9"},"edge_type":"inherent","type":"","uuid":"5acbef01-fa12-46ea-bdb4-3a3cc2e4415d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"9545ae9d-c2a7-44af-9577-67ff85196bbb"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e718fb17-c65a-4a7d-8a26-b5d45578180b"},"edge_type":"inherent","type":"","uuid":"40799ce0-d506-4b47-b371-c0d03be351fa","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"810ed950-8820-4bcf-9121-dbd76c168473"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"810ed950-8820-4bcf-9121-dbd76c168473"},"edge_type":"inherent","type":"","uuid":"3b22ad5e-bc9b-430b-bfdd-44885cdfb60b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"0a8a18aa-798a-4cb4-a7fe-12f1b9b38ff6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"0a8a18aa-798a-4cb4-a7fe-12f1b9b38ff6"},"edge_type":"inherent","type":"","uuid":"78bca989-15cc-45fb-9dee-ec6f7c94e32c","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"702733e8-e47d-45b9-bdf2-54eb36f11699"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"702733e8-e47d-45b9-bdf2-54eb36f11699"},"edge_type":"inherent","type":"","uuid":"54dfaa56-0c2a-4936-a935-43adc1c11616","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"1b7e75b0-b381-49c4-b819-d127fe8fa590"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"62b8e79a-c189-4150-bfef-86ce0f1733bf"},"edge_type":"create_action_edge","type":"","uuid":"0d55ee50-cee9-48f9-a2d9-f212aa6b9b96","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"702733e8-e47d-45b9-bdf2-54eb36f11699"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"0a8a18aa-798a-4cb4-a7fe-12f1b9b38ff6"},"edge_type":"create_action_edge","type":"","uuid":"2b1e530a-02e3-4dd7-a16f-e0a3540b7c3e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"05311943-e9fc-496a-aa6f-a14f5399b4b9"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4dec3816-39b2-4149-a3fc-adbf1a121b45"},"edge_type":"dependency","type":"","uuid":"056ed31f-aaa6-4215-9f96-570ea530ce5f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"0a8a18aa-798a-4cb4-a7fe-12f1b9b38ff6"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e718fb17-c65a-4a7d-8a26-b5d45578180b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"62594e4e-1a09-477c-b1e6-cfc95efbe888","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"810ed950-8820-4bcf-9121-dbd76c168473","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4dec3816-39b2-4149-a3fc-adbf1a121b45","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"62b8e79a-c189-4150-bfef-86ce0f1733bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"f7ba4bad-571a-44a4-b26d-442a57678baa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0a8a18aa-798a-4cb4-a7fe-12f1b9b38ff6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"c39869d5-5a61-4b33-9999-17638336af9d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"702733e8-e47d-45b9-bdf2-54eb36f11699","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"5118f63f-4679-4119-9791-64b9a6a94212"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"05311943-e9fc-496a-aa6f-a14f5399b4b9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"652ecce4-72ef-4741-acaf-e2dd8b40939d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"1b7e75b0-b381-49c4-b819-d127fe8fa590","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"9545ae9d-c2a7-44af-9577-67ff85196bbb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}],"description":"","message_list":[],"uuid":"75ac704f-264f-47c5-b977-fcaf7dc18862","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde","uuid":"3fe8577b-d5b3-4ebf-92b1-576c8de9b40b"},"name":"SYS_GEN__Runbook_Application_e955aab5_825b_4057_b86d_b28d02bbefde"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"27b6ff44-e4c4-4d49-a894-3ce1b47c7491","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Azure","uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},"retries":"0","description":"","type":"DAG","uuid":"c24037a5-c8de-4e62-b930-bb9f10f1f2d5","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d9be48c0-48a7-41dd-860d-f96d5770caab"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"060d6404-44f4-4c1a-b787-f19bd082a768"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"b7b957d3-c608-4f6e-9093-d6986ed76959"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"c95f2591-fdfd-4901-b2b5-d3bd76885503"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"454603e9-02e6-4f9a-b456-242ad5ddb824"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b6d4f388-277f-48de-8c48-a30ae67e8214"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"112e00cc-6cc5-4bd1-a5d8-538b047ab139"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"9837bf46-b604-4f90-bcf9-2f33a0f98d06"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"060d6404-44f4-4c1a-b787-f19bd082a768"},"edge_type":"inherent","type":"","uuid":"fd47c62a-0b58-4dc0-82fc-a52263f7a70e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"c95f2591-fdfd-4901-b2b5-d3bd76885503"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"454603e9-02e6-4f9a-b456-242ad5ddb824"},"edge_type":"inherent","type":"","uuid":"670aa670-4032-47de-8e55-1f783976f2f8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9","uuid":"9837bf46-b604-4f90-bcf9-2f33a0f98d06"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"c95f2591-fdfd-4901-b2b5-d3bd76885503"},"edge_type":"inherent","type":"","uuid":"12baaee0-0d9c-443c-91d2-1ce6e6f4f9f7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"454603e9-02e6-4f9a-b456-242ad5ddb824"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d9be48c0-48a7-41dd-860d-f96d5770caab"},"edge_type":"inherent","type":"","uuid":"7df1c902-7642-4737-858e-1baccefabc06","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"b7b957d3-c608-4f6e-9093-d6986ed76959"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b6d4f388-277f-48de-8c48-a30ae67e8214"},"edge_type":"inherent","type":"","uuid":"bdf15323-0063-43f0-8e0e-8dbbe2d74748","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_5fec9da3_ca77_445c_96cb_726df66c483e","uuid":"112e00cc-6cc5-4bd1-a5d8-538b047ab139"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"b7b957d3-c608-4f6e-9093-d6986ed76959"},"edge_type":"inherent","type":"","uuid":"ee296df3-a0d0-4220-beac-90a6ca31e30d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b6d4f388-277f-48de-8c48-a30ae67e8214"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"c95f2591-fdfd-4901-b2b5-d3bd76885503"},"edge_type":"create_action_edge","type":"","uuid":"3b9059ac-1d8b-42fe-b87a-1243b52ea8c8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"b6d4f388-277f-48de-8c48-a30ae67e8214"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"b7b957d3-c608-4f6e-9093-d6986ed76959"},"edge_type":"create_action_edge","type":"","uuid":"ab4ebf5c-2f43-4edc-9e4a-56cc1d1bb643","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"454603e9-02e6-4f9a-b456-242ad5ddb824"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d9be48c0-48a7-41dd-860d-f96d5770caab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"060d6404-44f4-4c1a-b787-f19bd082a768","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"b7b957d3-c608-4f6e-9093-d6986ed76959","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"c95f2591-fdfd-4901-b2b5-d3bd76885503","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"454603e9-02e6-4f9a-b456-242ad5ddb824","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5","uuid":"91d25710-39ab-4a8d-8f07-9b5c956a77fb"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_2fb2b374_c7af_42d5_b6e1_7cd0a3fe34a5"},{"target_any_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b6d4f388-277f-48de-8c48-a30ae67e8214","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822","uuid":"c2bcae96-aff4-49e3-a23c-a11b79f32123"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_03295a06_796d_4fa9_acec_3ad99de6e822"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"77b729d5_deployment_cloned_1","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"112e00cc-6cc5-4bd1-a5d8-538b047ab139","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_5fec9da3_ca77_445c_96cb_726df66c483e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"34875daf_deployment_cloned_1","uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"9837bf46-b604-4f90-bcf9-2f33a0f98d06","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_b81c9b76_a47d_4a40_b199_3ea41ef244a9"}],"description":"","message_list":[],"uuid":"67a00ba0-669c-4707-940c-83e62ace8224","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_e955aab5_825b_4057_b86d_b28d02bbefde","uuid":"c24037a5-c8de-4e62-b930-bb9f10f1f2d5"},"name":"SYS_GEN__Runbook_Application_e955aab5_825b_4057_b86d_b28d02bbefde"}}],"message_list":[],"uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c","state":"ACTIVE","dependency_list":[{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"Azure_Centos_K8SW","action_name":"action_create","action_resource_name":"Azure","getter_resource_name":"Azure_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"Azure_Centos_K8SW","action_name":"action_create","action_resource_name":"Azure","getter_resource_name":"Azure_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"Azure_Centos_K8SM","action_name":"action_create","action_resource_name":"Azure","getter_resource_name":"Azure_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"private_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"Azure_Centos_K8SM","action_name":"action_create","action_resource_name":"Azure","getter_resource_name":"Azure_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"ServiceCfg","setter_resource_name":"Kubernetes_Master","action_name":"action_delete","action_resource_name":"Azure","getter_resource_name":"Azure_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"public_ip_address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"Azure_Centos_K8SM","action_name":"action_create","action_resource_name":"34875daf_deployment_cloned_1","getter_resource_name":"Azure_Centos_K8SM_Package","action_resource_kind":"DeploymentCfg"}],"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"438d332e-3062-448a-aa37-ee72e70f74c4","value":"azure-kubenetes-cluster","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_NAME"},{"regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"a4fdd512-32fd-4622-8f17-9ba3ffb2a1ff","value":"v1.12.8","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"3417479e-3aa7-4046-8568-125df326e53f","value":"17.03.3.ce","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"8fc3b3a9-ea37-471e-8b5f-aeb3fd92080c","value":"10.200.0.0\/16","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"64353da5-9fa2-4c52-87be-14cfb6224593","value":"10.32.0.0\/24","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_SERVICE_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"39eef4a4-c0b3-4074-a921-a9a862f572c3","value":"10.32.0.10","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_DNS_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"5e165170-32f7-45ce-a20d-98ccaad1b207","value":"flannel","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"}],"name":"Azure"},{"deployment_create_list":[{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"43059ade-b622-4970-9727-c11ed5dc8da8","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"4ab8a6dd-b834-4f38-9ee9-36662ea92906","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"d7907091-945e-442d-b821-f802c0d76333"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"818811fb-c6a7-454a-a198-67c4a3aa2bd8"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ab75c9c0-2e3a-49ad-8ee4-de18efe13024"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"7d3e9ba8-0890-497b-8565-33a9f3145139"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"620fb35d-60b7-4760-8533-d101993b5efa"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2509b8c3-9238-4002-adaf-4c0075646f1c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"620fb35d-60b7-4760-8533-d101993b5efa"},"edge_type":"inherent","type":"","uuid":"d27bd3cf-ae76-4edf-a93b-059f02b4cb72","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2509b8c3-9238-4002-adaf-4c0075646f1c"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"7d3e9ba8-0890-497b-8565-33a9f3145139"},"edge_type":"inherent","type":"","uuid":"9c8d2fe0-a5ec-4a7a-9713-818fa68b4329","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"620fb35d-60b7-4760-8533-d101993b5efa"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"d7907091-945e-442d-b821-f802c0d76333"},"edge_type":"inherent","type":"","uuid":"c3972af8-277d-4bc0-a3ad-872482e42221","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ab75c9c0-2e3a-49ad-8ee4-de18efe13024"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ab75c9c0-2e3a-49ad-8ee4-de18efe13024"},"edge_type":"inherent","type":"","uuid":"d4bb3693-7daa-4481-aeb5-8c110eaba00e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"7d3e9ba8-0890-497b-8565-33a9f3145139"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"818811fb-c6a7-454a-a198-67c4a3aa2bd8"},"edge_type":"inherent","type":"","uuid":"a590c1b0-9186-40e7-a24d-f9c790ea9dd6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ab75c9c0-2e3a-49ad-8ee4-de18efe13024"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"d7907091-945e-442d-b821-f802c0d76333"},"edge_type":"inherent","type":"","uuid":"431b27f0-bad2-4005-ba47-98f20d51a0da","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"818811fb-c6a7-454a-a198-67c4a3aa2bd8"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"d7907091-945e-442d-b821-f802c0d76333","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"818811fb-c6a7-454a-a198-67c4a3aa2bd8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"b659189f-60b5-4f5b-9d16-284aac15dd12"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ab75c9c0-2e3a-49ad-8ee4-de18efe13024","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"a396340a-d297-4420-a28b-8b3d28273dcd"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7d3e9ba8-0890-497b-8565-33a9f3145139","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"41c3bac1-15c0-401f-b638-3fecac38e8f6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"620fb35d-60b7-4760-8533-d101993b5efa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2509b8c3-9238-4002-adaf-4c0075646f1c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"5aaa7ec8-9762-4ed7-818a-6f0b5d33c547","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"4ab8a6dd-b834-4f38-9ee9-36662ea92906"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for starting an application","message_list":[],"uuid":"b795a2e3-f078-4e3f-bc79-619bd5b5ba2a","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"ee01c0ca-ec14-42c1-9cfc-128f1fb6c3e1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"2ef0c736-af22-4990-9840-a83d6f1fa65a"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b8a46c10-1e6a-4e27-87a4-79a207d373eb"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"2ef0c736-af22-4990-9840-a83d6f1fa65a"},"edge_type":"inherent","type":"","uuid":"6980dd5f-852b-4c23-8ba6-2d25035e4aaa","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b8a46c10-1e6a-4e27-87a4-79a207d373eb"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2ef0c736-af22-4990-9840-a83d6f1fa65a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"2a998bd1-ded5-4fa3-bc75-4a7825177872"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b8a46c10-1e6a-4e27-87a4-79a207d373eb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"ae2e57bf-e42d-4947-8cc5-e8fc1de60fde","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"ee01c0ca-ec14-42c1-9cfc-128f1fb6c3e1"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for restarting an application","message_list":[],"uuid":"81e16b3c-644e-4825-84db-69246d7182d6","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"bd9ebb20-39b6-4651-8e78-49d348c1ef34","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"241b1a17-3589-4661-aa68-955b3a17caee"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"6f9549a6-946a-43e5-91ac-018ccbf8b1ea"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"241b1a17-3589-4661-aa68-955b3a17caee"},"edge_type":"inherent","type":"","uuid":"478a537f-de6c-4733-83a0-7334d6a734e4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"6f9549a6-946a-43e5-91ac-018ccbf8b1ea"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"241b1a17-3589-4661-aa68-955b3a17caee","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"53a9fcd0-9e52-441b-b330-a6f379123146"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6f9549a6-946a-43e5-91ac-018ccbf8b1ea","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"10503ee2-c0c9-4fae-a9af-c7dff6190015","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"bd9ebb20-39b6-4651-8e78-49d348c1ef34"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for stopping an application","message_list":[],"uuid":"0621267d-c2db-41e4-97bd-0750bf55c7fa","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"4b8f5e86-1f2b-4acf-8ab4-bcdc28212691","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f2b0770b-fc83-41b4-bde9-c00cf32c6994"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"336634ba-40f3-4c99-9044-287d2587f72d"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f2b0770b-fc83-41b4-bde9-c00cf32c6994"},"edge_type":"inherent","type":"","uuid":"7228c30d-8dd1-4f8f-9e8d-5b13f540363d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"336634ba-40f3-4c99-9044-287d2587f72d"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f2b0770b-fc83-41b4-bde9-c00cf32c6994","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"336634ba-40f3-4c99-9044-287d2587f72d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6c0047eb-407e-4616-bf14-d88c60d7d4d2"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}],"description":"","message_list":[],"uuid":"65c1b858-db5e-46a8-ab4e-d695deaa0627","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"4b8f5e86-1f2b-4acf-8ab4-bcdc28212691"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"df17c37f-0a6c-4229-9e15-6255369a39cd","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"abb596a7-8bfe-4aea-994d-b687b1794fd1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"acce9599-d423-49e7-b4c5-5e814d470e89"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f9d7eea3-4422-478e-986d-1cdd8cc004ff"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8ec7fc2f-6868-47d6-a41a-6b1ce55f9a58"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"afda008c-6473-402b-85a3-1c07548b47a5"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"66daefdf-4cd5-49d0-b1b4-30014171446e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"acce9599-d423-49e7-b4c5-5e814d470e89"},"edge_type":"inherent","type":"","uuid":"d30b05fb-194a-4d6c-9610-093d3067b45d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f9d7eea3-4422-478e-986d-1cdd8cc004ff"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f9d7eea3-4422-478e-986d-1cdd8cc004ff"},"edge_type":"inherent","type":"","uuid":"499ff7e6-ab70-488f-b3c8-f7628b3026b2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8ec7fc2f-6868-47d6-a41a-6b1ce55f9a58"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8ec7fc2f-6868-47d6-a41a-6b1ce55f9a58"},"edge_type":"inherent","type":"","uuid":"510c8ba1-b85c-4d6d-9158-b31da8c7e5df","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"afda008c-6473-402b-85a3-1c07548b47a5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"afda008c-6473-402b-85a3-1c07548b47a5"},"edge_type":"inherent","type":"","uuid":"d3576408-35de-448c-95b7-4398ce8a5bc6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"66daefdf-4cd5-49d0-b1b4-30014171446e"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"acce9599-d423-49e7-b4c5-5e814d470e89","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f9d7eea3-4422-478e-986d-1cdd8cc004ff","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8ec7fc2f-6868-47d6-a41a-6b1ce55f9a58","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8d014d77-dfb5-4a5c-bfe0-a08c2b4b49f5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"afda008c-6473-402b-85a3-1c07548b47a5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6ab59ece-9fd4-4d84-9ad8-5566e3e795eb"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"66daefdf-4cd5-49d0-b1b4-30014171446e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_4b3985c8_846b_4321_9603_db0b165c02a9"}],"description":"","message_list":[],"uuid":"c563b31e-d929-445b-8d01-01db28eb17a4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"abb596a7-8bfe-4aea-994d-b687b1794fd1"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for scaleout","message_list":[],"uuid":"7b9acb4e-43e0-4df8-9bfb-ced98bf517b0","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"57967ea4-0833-46fd-b543-0974cae1f260","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"392e6c2f-a253-4f19-a927-d6dff38c74d7"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"SCALING","uuid":"392e6c2f-a253-4f19-a927-d6dff38c74d7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_4b3985c8_846b_4321_9603_db0b165c02a9"}],"description":"","message_list":[],"uuid":"caa9bc80-0725-4d53-91be-b189bdf26c00","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"fdb36fc9-1442-41e5-ac31-38bbd1c94e43","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"57967ea4-0833-46fd-b543-0974cae1f260"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for scalein","message_list":[],"uuid":"12b12cca-33c3-4404-b8d2-963823319623","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"711c9322-ac66-452b-bc05-3ef7826a17e6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"71feba1d-4495-4563-b10f-57012015cba7"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"SCALING","uuid":"71feba1d-4495-4563-b10f-57012015cba7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_4b3985c8_846b_4321_9603_db0b165c02a9"}],"description":"","message_list":[],"uuid":"c47e15be-cfc7-4ce4-9329-95dbc8f2ff04","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"1205e13c-674a-40f4-9c03-2e4a80b660c7","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"711c9322-ac66-452b-bc05-3ef7826a17e6"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"aa952f69-bc91-43ec-a765-253e7b2eb6a0","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DAG","uuid":"edf7a9a4-ada8-4472-bd7f-2a32563f1705","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8f7dff80-bda6-4b1a-939c-f26b00406326"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8f4553f7-fed6-44e9-90db-f6188fc31200"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"c9ffb12f-8e2e-49fe-9c52-35d58d867cc1"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"6e142d42-11cc-4ed8-9a5f-2601016e841a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8f7dff80-bda6-4b1a-939c-f26b00406326"},"edge_type":"inherent","type":"","uuid":"67e7a398-2ba8-4638-90af-7ddb82879dc8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8f4553f7-fed6-44e9-90db-f6188fc31200"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"c9ffb12f-8e2e-49fe-9c52-35d58d867cc1"},"edge_type":"inherent","type":"","uuid":"4bee9b10-be97-4333-af8c-c136a2f4625d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"6e142d42-11cc-4ed8-9a5f-2601016e841a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8f4553f7-fed6-44e9-90db-f6188fc31200"},"edge_type":"inherent","type":"","uuid":"09b08fb5-ef08-437b-8dfd-52ef25085ef4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"c9ffb12f-8e2e-49fe-9c52-35d58d867cc1"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8f7dff80-bda6-4b1a-939c-f26b00406326","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"8f4553f7-fed6-44e9-90db-f6188fc31200","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c9ffb12f-8e2e-49fe-9c52-35d58d867cc1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ad444417-b30f-4c73-929b-132ea6e86758"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"6e142d42-11cc-4ed8-9a5f-2601016e841a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_4b3985c8_846b_4321_9603_db0b165c02a9"}],"description":"","message_list":[],"uuid":"3244a62a-d721-43e3-87f4-dabb26b2debc","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"edf7a9a4-ada8-4472-bd7f-2a32563f1705"},"name":"SYS_GEN__Runbook_Deployment_4b3985c8_846b_4321_9603_db0b165c02a9"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede","min_replicas":"3","state":"ACTIVE","max_replicas":"3","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"}],"substrate_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"2cbb2f6a_deployment_cloned_0"},{"description":"","action_list":[{"description":"System action for creating an application","message_list":[],"uuid":"363b4a12-de9c-4b27-928c-55f492b87825","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"efbfbe66-0a9b-4e24-b8a5-dc8c21bb0707","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"8dfe138f-5912-4f7c-85e2-3f16e51edc77"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"7850a593-1cd5-40c3-979b-5cf829393415"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ded4bde4-e165-4b39-83ab-fbad00f64621"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"65c32f33-592b-4efe-b1e6-fcddb972e082"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0677715a-0468-4862-8faf-949867f65abb"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f5544138-cdc1-4396-bf2b-7381eacbbe75"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0677715a-0468-4862-8faf-949867f65abb"},"edge_type":"inherent","type":"","uuid":"888b85d1-fce0-4ffd-906f-97b5b160cacf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f5544138-cdc1-4396-bf2b-7381eacbbe75"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"65c32f33-592b-4efe-b1e6-fcddb972e082"},"edge_type":"inherent","type":"","uuid":"d42d7cd1-40c5-425a-875a-efd943685cd1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"0677715a-0468-4862-8faf-949867f65abb"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"7850a593-1cd5-40c3-979b-5cf829393415"},"edge_type":"inherent","type":"","uuid":"384021de-94c6-4870-9b65-cc1ec4526999","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ded4bde4-e165-4b39-83ab-fbad00f64621"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"8dfe138f-5912-4f7c-85e2-3f16e51edc77"},"edge_type":"inherent","type":"","uuid":"11fd0471-bdb8-41d2-8c54-f9a36b9fc0b6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ded4bde4-e165-4b39-83ab-fbad00f64621"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ded4bde4-e165-4b39-83ab-fbad00f64621"},"edge_type":"inherent","type":"","uuid":"7534adcb-77ae-48d4-ae9d-102e7fcb5749","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"65c32f33-592b-4efe-b1e6-fcddb972e082"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"8dfe138f-5912-4f7c-85e2-3f16e51edc77"},"edge_type":"inherent","type":"","uuid":"82c137a4-7ad0-4061-8156-6c858d41f7eb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"7850a593-1cd5-40c3-979b-5cf829393415"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"8dfe138f-5912-4f7c-85e2-3f16e51edc77","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7850a593-1cd5-40c3-979b-5cf829393415","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"b659189f-60b5-4f5b-9d16-284aac15dd12"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ded4bde4-e165-4b39-83ab-fbad00f64621","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"be1cb23e-0b1f-4692-9c6b-14de7553d129"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"65c32f33-592b-4efe-b1e6-fcddb972e082","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"9f6f145b-471a-4ae3-8e50-5bcfdf945a37"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"0677715a-0468-4862-8faf-949867f65abb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f5544138-cdc1-4396-bf2b-7381eacbbe75","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"c596149a-e298-477c-994a-765a8288f0d5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"efbfbe66-0a9b-4e24-b8a5-dc8c21bb0707"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for starting an application","message_list":[],"uuid":"fb8c3649-3895-49a9-ad34-ad524da89d99","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"fa4933ae-aa4e-452a-9c44-f57a83fef34a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"acbfd333-df93-49cb-ba2a-548267f888e8"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f2504045-cf17-4c70-ab7b-054e8c187022"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"acbfd333-df93-49cb-ba2a-548267f888e8"},"edge_type":"inherent","type":"","uuid":"27a0e199-26f2-4dd0-974a-006be19c3a56","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f2504045-cf17-4c70-ab7b-054e8c187022"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"acbfd333-df93-49cb-ba2a-548267f888e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"273e374c-1c79-40b9-a054-12354b5176fc"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f2504045-cf17-4c70-ab7b-054e8c187022","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"d186f6a9-fb99-4898-82d4-66c46ac3cd59","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"fa4933ae-aa4e-452a-9c44-f57a83fef34a"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for restarting an application","message_list":[],"uuid":"466085cb-ad64-4b52-9043-26105db73f8e","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"71597e55-a6bf-4498-b938-ad38e1449c22","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ce63175a-138c-4d24-b90b-33aed0084a63"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b1184a79-aa56-4c94-802a-64a18ee18b6b"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"ce63175a-138c-4d24-b90b-33aed0084a63"},"edge_type":"inherent","type":"","uuid":"c580c8f9-8872-4134-97db-07c12ab05ccf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b1184a79-aa56-4c94-802a-64a18ee18b6b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ce63175a-138c-4d24-b90b-33aed0084a63","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"220fca82-ddc4-466f-8a34-7132073512e6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b1184a79-aa56-4c94-802a-64a18ee18b6b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"e0a49ac5-a231-4fc4-9008-230527b3dc86","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"71597e55-a6bf-4498-b938-ad38e1449c22"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for stopping an application","message_list":[],"uuid":"2ffa0f20-c55f-4d61-ab16-7e43cfe85bba","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"0daf1d36-cf02-4e2a-881a-7ca522dce770","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"89dd8a69-c8d2-4fab-9e68-c0bf46a4d576"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e8d743b2-59c7-48b9-896b-0a8bbb4f008c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"89dd8a69-c8d2-4fab-9e68-c0bf46a4d576"},"edge_type":"inherent","type":"","uuid":"b46d0396-c1c2-42a1-bf81-8d96317ad02e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e8d743b2-59c7-48b9-896b-0a8bbb4f008c"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"89dd8a69-c8d2-4fab-9e68-c0bf46a4d576","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e8d743b2-59c7-48b9-896b-0a8bbb4f008c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"842b6cec-36eb-47ea-bf16-7a1bc6ea917a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"}],"description":"","message_list":[],"uuid":"55189ebe-22b8-4d2f-9cdd-e3b9ebb1d3a6","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"0daf1d36-cf02-4e2a-881a-7ca522dce770"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"344b4a28-a60b-4134-b2d3-4ae96bca22ae","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"290d36ec-c5fc-41fa-ba26-5aba32a6e358","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"62a3eee4-3f29-4ae9-a243-b7156ee8bce6"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"04abb98a-9db9-41d0-90f0-b797abbd967b"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"3ec47269-fff2-4174-ad2a-c2fc3c786aaa"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"222c61ce-4a1f-4121-a781-41956564a20f"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"caa0267f-ecd9-481a-8a1d-cfa6c4f02f99"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"62a3eee4-3f29-4ae9-a243-b7156ee8bce6"},"edge_type":"inherent","type":"","uuid":"176ab7b3-a200-4581-ae44-21eece364686","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"04abb98a-9db9-41d0-90f0-b797abbd967b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"04abb98a-9db9-41d0-90f0-b797abbd967b"},"edge_type":"inherent","type":"","uuid":"3b9c576e-a21f-4877-ad90-fd21c92b265f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"3ec47269-fff2-4174-ad2a-c2fc3c786aaa"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"222c61ce-4a1f-4121-a781-41956564a20f"},"edge_type":"inherent","type":"","uuid":"bb19ff16-cb15-4095-a0e4-a2b02594fb3b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"caa0267f-ecd9-481a-8a1d-cfa6c4f02f99"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"3ec47269-fff2-4174-ad2a-c2fc3c786aaa"},"edge_type":"inherent","type":"","uuid":"7dbd0a60-4712-4ea0-9a87-e306c24f6693","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"222c61ce-4a1f-4121-a781-41956564a20f"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"62a3eee4-3f29-4ae9-a243-b7156ee8bce6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"04abb98a-9db9-41d0-90f0-b797abbd967b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3ec47269-fff2-4174-ad2a-c2fc3c786aaa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"b0df500a-199f-4881-aa43-1ef2a6fc7337"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"222c61ce-4a1f-4121-a781-41956564a20f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"30023c2d-c9ac-4e2a-974f-e22bfbcf8b2c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"caa0267f-ecd9-481a-8a1d-cfa6c4f02f99","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e"}],"description":"","message_list":[],"uuid":"3f264f11-f5f9-4e72-ac79-24791be3c80c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"290d36ec-c5fc-41fa-ba26-5aba32a6e358"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for scaleout","message_list":[],"uuid":"95df494f-ea1d-4aa2-8499-d58b11b0646c","name":"action_scaleout","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"3297be37-8a93-449f-8cb6-a1d0f1ec498a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scaleout_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"d87d5784-4721-493a-9896-406e7832cdfc"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"SCALING","uuid":"d87d5784-4721-493a-9896-406e7832cdfc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scaleout_e51f257b_fa1f_4293_8b25_64b1e57d824e"}],"description":"","message_list":[],"uuid":"69793f54-8e58-4ead-bcbc-f6ee3dc1304b","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"61599df5-0c69-4b4d-a06f-bdede414e440","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"3297be37-8a93-449f-8cb6-a1d0f1ec498a"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for scalein","message_list":[],"uuid":"013c3387-0196-4e1a-af35-b43097b13b67","name":"action_scalein","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"89846b19-5d49-4caf-a14c-3c806c984b31","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Deployment_Scalein_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"be5fdb77-3f55-4c1d-b57c-c779e7152994"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"SCALING","uuid":"be5fdb77-3f55-4c1d-b57c-c779e7152994","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{scaling_count}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Deployment_Scalein_e51f257b_fa1f_4293_8b25_64b1e57d824e"}],"description":"","message_list":[],"uuid":"94943cf6-b267-4c86-b8fb-30a077ca5348","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"28f6e303-1cc2-4fc5-baca-2110fd93b8f1","value":"0","label":"","state":"NOT_VALIDATED","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"scaling_count"}],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"89846b19-5d49-4caf-a14c-3c806c984b31"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"9b325813-00fc-4bab-a049-e251e5a6ed6a","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DAG","uuid":"05a73798-b7f6-421f-a3ba-ad453424d7bd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9ae49f95-1de8-4fbf-b932-88300c409033"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"ff924e5f-ff10-4b5f-b39a-20b6fc6b425b"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"72fea428-643d-4c94-93af-fb58283759ab"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"5b6a514e-a384-47b2-9879-1c4a0b2c2a97"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9ae49f95-1de8-4fbf-b932-88300c409033"},"edge_type":"inherent","type":"","uuid":"b0654abd-768c-43e5-9175-aae072498640","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"ff924e5f-ff10-4b5f-b39a-20b6fc6b425b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"72fea428-643d-4c94-93af-fb58283759ab"},"edge_type":"inherent","type":"","uuid":"6e075344-f7e9-47f4-ab37-38197c858410","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"5b6a514e-a384-47b2-9879-1c4a0b2c2a97"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"ff924e5f-ff10-4b5f-b39a-20b6fc6b425b"},"edge_type":"inherent","type":"","uuid":"7de5885d-78a2-45e8-bf97-62732567a1b4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"72fea428-643d-4c94-93af-fb58283759ab"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9ae49f95-1de8-4fbf-b932-88300c409033","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"ff924e5f-ff10-4b5f-b39a-20b6fc6b425b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"72fea428-643d-4c94-93af-fb58283759ab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"81b77774-e456-4a56-93c9-8163af557a10"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"5b6a514e-a384-47b2-9879-1c4a0b2c2a97","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e"}],"description":"","message_list":[],"uuid":"da8825b8-ef34-4f94-b78c-192d5dca0c3d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"05a73798-b7f6-421f-a3ba-ad453424d7bd"},"name":"SYS_GEN__Runbook_Deployment_e51f257b_fa1f_4293_8b25_64b1e57d824e"}}],"message_list":[],"published_service_local_reference_list":[],"uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4","min_replicas":"3","state":"ACTIVE","max_replicas":"9","depends_on_list":[],"editables":{"min_replicas":true,"max_replicas":true},"package_local_reference_list":[{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"}],"substrate_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"type":"GREENFIELD","options":{},"variable_list":[],"name":"39cf7283_deployment_cloned_0"}],"description":"","action_list":[{"description":"","message_list":[],"uuid":"0a37d2bf-9685-474a-82b3-5d47d4f193b9","name":"Upgrade","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"30fc9b14-853d-4088-86ac-5ef51205ab74","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"23a50a77-6892-4062-9c82-7d6ef389d0b2"},{"kind":"app_task","name":"Set Version Minion","uuid":"856d4b07-4268-4d01-97d7-4d67d23f889c"},{"kind":"app_task","name":"Upgrade Worker","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178"},{"kind":"app_task","name":"Upgrade Master","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d"},{"kind":"app_task","name":"RestartServices","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"23a50a77-6892-4062-9c82-7d6ef389d0b2"},"edge_type":"user_defined","type":"","uuid":"7e972475-df92-417d-a614-d89abacf86bb","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d"},"edge_type":"user_defined","type":"","uuid":"f5b53dbf-615a-4611-9bda-aaa50b5e57dc","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"856d4b07-4268-4d01-97d7-4d67d23f889c"},"edge_type":"user_defined","type":"","uuid":"4772b56c-4bc3-4ac9-a670-c10bb6273cd6","to_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178"},"edge_type":"user_defined","type":"","uuid":"eba27cdd-98f0-45bc-9c0b-7554f58a0126","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6ee65d8a_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"23a50a77-6892-4062-9c82-7d6ef389d0b2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"856d4b07-4268-4d01-97d7-4d67d23f889c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Version Minion"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_NAMES=\"@@{VMware_Centos_K8SW.address}@@\"\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"worker${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=worker${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon worker${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"master${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=master${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon master${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"RestartServices"}],"description":"","message_list":[],"uuid":"8b5a44b6-126e-4bdb-b60a-915ddbe4abba","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"3b8215d1-ed29-4ac3-b680-f88d822dbcb3","value":"v1.13.6","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"6ee65d8a_dag_cloned_1","uuid":"30fc9b14-853d-4088-86ac-5ef51205ab74"},"name":"68a7ffd0_runbook_cloned_0"}},{"description":"","message_list":[],"uuid":"3cebe114-be10-4988-ac0a-e30d7919d546","name":"ScaleOut","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"e549fb7d-6107-49f2-bd0c-8b6ee1d0437e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"9f875e0e-71c0-4547-adb6-e44e39dcf3c8"},{"kind":"app_task","name":"Set Hosts file","uuid":"f9f71639-36b4-4594-bc52-c99b8acb1daa"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"9f875e0e-71c0-4547-adb6-e44e39dcf3c8"},"edge_type":"user_defined","type":"","uuid":"83b9e564-9f2d-4e44-9c11-8d33fc5c51d0","to_task_reference":{"kind":"app_task","name":"Set Hosts file","uuid":"f9f71639-36b4-4594-bc52-c99b8acb1daa"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"03b33121_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"SCALING","uuid":"9f875e0e-71c0-4547-adb6-e44e39dcf3c8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f9f71639-36b4-4594-bc52-c99b8acb1daa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMINION_IPS=\"@@{VMware_Centos_K8SM.address}@@\"\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} minion${count}\" \/etc\/hosts) )) ; then\n  \techo \"${ip} minion${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Hosts file"}],"description":"","message_list":[],"uuid":"342dc541-27c3-4f0c-a2ef-4a2b04585e95","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"79fd5ae6-1b63-4dec-a5ef-c5b128cf6239","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"03b33121_dag_cloned_1","uuid":"e549fb7d-6107-49f2-bd0c-8b6ee1d0437e"},"name":"00cf5417_runbook_cloned_0"}},{"description":"","message_list":[],"uuid":"e98d44ba-9362-4785-94f2-eede18e312b5","name":"ScaleIn","state":"ACTIVE","critical":false,"attrs":{},"type":"user","runbook":{"task_definition_list":[{"retries":"0","description":"","type":"DAG","uuid":"40914942-97a2-45d0-b11b-d4fbba3fa291","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"9fe8e9df-5da8-400e-9472-39493e80253c"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e72a9133_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"SCALING","uuid":"9fe8e9df-5da8-400e-9472-39493e80253c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Scale In"}],"description":"","message_list":[],"uuid":"95fbec67-d355-4929-9d78-a55c8041ca2a","state":"ACTIVE","variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"a09d963e-5bfd-49b0-9701-9d007b1bafa3","value":"1","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"e72a9133_dag_cloned_1","uuid":"40914942-97a2-45d0-b11b-d4fbba3fa291"},"name":"96546f6c_runbook_cloned_0"}},{"description":"System action for creating an application","message_list":[],"uuid":"2c047155-7c1c-4fae-87a8-d3fb114c5eb7","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"VMware","uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"},"retries":"0","description":"","type":"DAG","uuid":"7c768feb-5acd-4d6e-bd90-637c8e6ac553","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"a89701a7-180e-4774-8159-32c8db8dc9ed"},{"kind":"app_task","name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"ea1263d5-0629-4a42-8a2c-acb9cd69f90c"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"02011efa-0149-4e4b-ab64-386c2967bdcd"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f_1","uuid":"8ab73fcc-9f80-4f88-a20f-6c4d898eb61d"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"581d8d6e-31b6-473e-befd-d7e58bdca7c3"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"7ad4dc6a-289b-49f6-8071-920f12f77b90"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"2e0daf2a-67a0-49ab-b7d0-a6c924cd4c77"},{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"086af9ec-c559-4999-bcfa-ff7913e8b0ae"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"96ae6296-49bb-4075-b3e8-d67670c6aa35"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7466b7d1-db35-4b44-902e-48b573a3ee5c"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f9c1faab-e5f5-4efa-94ae-57b7cec84c5c"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3492bdbc-fa82-4d12-992d-4219d525b0be"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"96ae6296-49bb-4075-b3e8-d67670c6aa35"},"edge_type":"inherent","type":"","uuid":"cb9d6c81-321f-43fb-8062-43f21e5b7b1f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3492bdbc-fa82-4d12-992d-4219d525b0be"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"086af9ec-c559-4999-bcfa-ff7913e8b0ae"},"edge_type":"inherent","type":"","uuid":"f5c7d417-e17c-49f7-8621-786fb1a05dd2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"96ae6296-49bb-4075-b3e8-d67670c6aa35"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"a89701a7-180e-4774-8159-32c8db8dc9ed"},"edge_type":"inherent","type":"","uuid":"4a693c74-98b6-4816-a8df-6eeb26e14ed6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"581d8d6e-31b6-473e-befd-d7e58bdca7c3"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"581d8d6e-31b6-473e-befd-d7e58bdca7c3"},"edge_type":"inherent","type":"","uuid":"e7ac7829-e97f-4204-a8ba-fa841bf197cb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"086af9ec-c559-4999-bcfa-ff7913e8b0ae"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"02011efa-0149-4e4b-ab64-386c2967bdcd"},"edge_type":"inherent","type":"","uuid":"789e3dc6-aa61-466f-81bb-59d4249f6dea","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"581d8d6e-31b6-473e-befd-d7e58bdca7c3"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"a89701a7-180e-4774-8159-32c8db8dc9ed"},"edge_type":"inherent","type":"","uuid":"a999db14-d140-41f7-aa36-5c89d82c5139","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"02011efa-0149-4e4b-ab64-386c2967bdcd"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7466b7d1-db35-4b44-902e-48b573a3ee5c"},"edge_type":"inherent","type":"","uuid":"533f6c92-a37b-468a-92cb-a05a9a6652bf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f9c1faab-e5f5-4efa-94ae-57b7cec84c5c"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"2e0daf2a-67a0-49ab-b7d0-a6c924cd4c77"},"edge_type":"inherent","type":"","uuid":"b6550d42-09e8-4b7e-b5bd-321c4bbfca7d","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7466b7d1-db35-4b44-902e-48b573a3ee5c"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f_1","uuid":"8ab73fcc-9f80-4f88-a20f-6c4d898eb61d"},"edge_type":"inherent","type":"","uuid":"2d803ac5-14d5-4889-a67a-de070bb72149","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"7ad4dc6a-289b-49f6-8071-920f12f77b90"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"ea1263d5-0629-4a42-8a2c-acb9cd69f90c"},"edge_type":"inherent","type":"","uuid":"0072994b-65a7-48cc-a413-ea6529657d70","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"7ad4dc6a-289b-49f6-8071-920f12f77b90"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"7ad4dc6a-289b-49f6-8071-920f12f77b90"},"edge_type":"inherent","type":"","uuid":"5c084835-2885-45fb-bfbf-117aea9ac7f5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"2e0daf2a-67a0-49ab-b7d0-a6c924cd4c77"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"ea1263d5-0629-4a42-8a2c-acb9cd69f90c"},"edge_type":"inherent","type":"","uuid":"33289126-5eb9-4982-b7dc-ddc30675bdbb","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f_1","uuid":"8ab73fcc-9f80-4f88-a20f-6c4d898eb61d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"7ad4dc6a-289b-49f6-8071-920f12f77b90"},"edge_type":"dependency","type":"","uuid":"de1d1ab8-b289-4db6-b015-986002170f70","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"086af9ec-c559-4999-bcfa-ff7913e8b0ae"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"581d8d6e-31b6-473e-befd-d7e58bdca7c3"},"edge_type":"dependency","type":"","uuid":"726f96d9-0af3-42ca-810c-6fe433695851","to_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"2e0daf2a-67a0-49ab-b7d0-a6c924cd4c77"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"a89701a7-180e-4774-8159-32c8db8dc9ed","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_4b3985c8_846b_4321_9603_db0b165c02a9"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"CREATE_DEPLOYMENT_ELEMENT","uuid":"ea1263d5-0629-4a42-8a2c-acb9cd69f90c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Provision_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"02011efa-0149-4e4b-ab64-386c2967bdcd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"b659189f-60b5-4f5b-9d16-284aac15dd12"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"},{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8ab73fcc-9f80-4f88-a20f-6c4d898eb61d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"b659189f-60b5-4f5b-9d16-284aac15dd12"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f_1"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"581d8d6e-31b6-473e-befd-d7e58bdca7c3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"a396340a-d297-4420-a28b-8b3d28273dcd"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7ad4dc6a-289b-49f6-8071-920f12f77b90","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"be1cb23e-0b1f-4692-9c6b-14de7553d129"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2e0daf2a-67a0-49ab-b7d0-a6c924cd4c77","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"9f6f145b-471a-4ae3-8e50-5bcfdf945a37"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"086af9ec-c559-4999-bcfa-ff7913e8b0ae","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"41c3bac1-15c0-401f-b638-3fecac38e8f6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"96ae6296-49bb-4075-b3e8-d67670c6aa35","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7466b7d1-db35-4b44-902e-48b573a3ee5c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f9c1faab-e5f5-4efa-94ae-57b7cec84c5c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3492bdbc-fa82-4d12-992d-4219d525b0be","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"aa6b951b-f28c-4680-9a81-2ef20dac36ae","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea","uuid":"7c768feb-5acd-4d6e-bd90-637c8e6ac553"},"name":"SYS_GEN__Runbook_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"}},{"description":"System action for starting an application","message_list":[],"uuid":"6d8b240f-84fd-4e8c-bc07-2a0eb2accaf8","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"VMware","uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"},"retries":"0","description":"","type":"DAG","uuid":"a54cf11c-aea8-4874-b470-aa973022a4c0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"c7868668-9109-4ca0-8e22-532e05ccce2d"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"a3a628a6-2cb1-4e94-83de-f9d0519ec88a"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"41afeca4-4255-4e8f-b483-08de2765b676"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"aaf3c0a0-6188-46c6-b764-30645dcdc3f7"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"a3a628a6-2cb1-4e94-83de-f9d0519ec88a"},"edge_type":"inherent","type":"","uuid":"88dca7a9-0d37-42cc-9f62-5baab0711bce","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"aaf3c0a0-6188-46c6-b764-30645dcdc3f7"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"c7868668-9109-4ca0-8e22-532e05ccce2d"},"edge_type":"inherent","type":"","uuid":"f0ca5b53-ecb9-4092-90d1-de1ebdf4869b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"41afeca4-4255-4e8f-b483-08de2765b676"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c7868668-9109-4ca0-8e22-532e05ccce2d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"273e374c-1c79-40b9-a054-12354b5176fc"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a3a628a6-2cb1-4e94-83de-f9d0519ec88a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"2a998bd1-ded5-4fa3-bc75-4a7825177872"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"41afeca4-4255-4e8f-b483-08de2765b676","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"aaf3c0a0-6188-46c6-b764-30645dcdc3f7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"7f63428c-2abe-47e0-975c-4096ae314df0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea","uuid":"a54cf11c-aea8-4874-b470-aa973022a4c0"},"name":"SYS_GEN__Runbook_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"}},{"description":"System action for restarting an application","message_list":[],"uuid":"ecd09897-6663-4d65-a90a-243cfd1f0b9c","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"VMware","uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"},"retries":"0","description":"","type":"DAG","uuid":"6501ace6-d111-4cf7-b00e-00f836d6cfe4","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"73bcf01e-d15a-4ae7-9590-a61f49f7991a"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"a9c8a2b7-5008-4b13-b62b-6a038e09825b"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e36a42e7-9e5c-4ddf-9d40-753ac7dbc53d"},{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9ffd683a-1121-4d52-85b6-ee313d7b66d2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"73bcf01e-d15a-4ae7-9590-a61f49f7991a"},"edge_type":"inherent","type":"","uuid":"42f47382-5117-4d9e-a1f6-9c47323fb108","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e36a42e7-9e5c-4ddf-9d40-753ac7dbc53d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"a9c8a2b7-5008-4b13-b62b-6a038e09825b"},"edge_type":"inherent","type":"","uuid":"0aaf865a-6cbe-4f4f-8d41-1b7498280ed2","to_task_reference":{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9ffd683a-1121-4d52-85b6-ee313d7b66d2"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"73bcf01e-d15a-4ae7-9590-a61f49f7991a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"53a9fcd0-9e52-441b-b330-a6f379123146"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a9c8a2b7-5008-4b13-b62b-6a038e09825b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"220fca82-ddc4-466f-8a34-7132073512e6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e36a42e7-9e5c-4ddf-9d40-753ac7dbc53d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9ffd683a-1121-4d52-85b6-ee313d7b66d2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"6f7b0c97-3a32-49fa-9de1-f10fc7d4d2c4","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea","uuid":"6501ace6-d111-4cf7-b00e-00f836d6cfe4"},"name":"SYS_GEN__Runbook_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"}},{"description":"System action for stopping an application","message_list":[],"uuid":"cde618cf-9299-4293-bee1-4fecdf904743","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"VMware","uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"},"retries":"0","description":"","type":"DAG","uuid":"251485df-daf3-4dd6-8789-a5d94be85776","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3a6fd37a-ef69-4589-be8a-c4b1c1ce19d9"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e20ec2bf-7611-4f0b-bd05-505a0c058010"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"1ca804b9-9c6e-4c85-a2e2-ccf806bcf389"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"5859a78f-fc02-4083-a7d1-4406045c567a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3a6fd37a-ef69-4589-be8a-c4b1c1ce19d9"},"edge_type":"inherent","type":"","uuid":"d392e17f-509d-490e-aa13-a6d5bd9bdad9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"5859a78f-fc02-4083-a7d1-4406045c567a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e20ec2bf-7611-4f0b-bd05-505a0c058010"},"edge_type":"inherent","type":"","uuid":"9bea5bf6-ff42-40a7-9106-8e7e86144171","to_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"1ca804b9-9c6e-4c85-a2e2-ccf806bcf389"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3a6fd37a-ef69-4589-be8a-c4b1c1ce19d9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e20ec2bf-7611-4f0b-bd05-505a0c058010","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1ca804b9-9c6e-4c85-a2e2-ccf806bcf389","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"842b6cec-36eb-47ea-bf16-7a1bc6ea917a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5859a78f-fc02-4083-a7d1-4406045c567a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6c0047eb-407e-4616-bf14-d88c60d7d4d2"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"}],"description":"","message_list":[],"uuid":"120a90c1-d506-4380-ad30-e64261461177","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea","uuid":"251485df-daf3-4dd6-8789-a5d94be85776"},"name":"SYS_GEN__Runbook_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"614c1418-4fb0-47de-b424-f381eca114fd","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"VMware","uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"},"retries":"0","description":"","type":"DAG","uuid":"6ada2e04-8fac-47ab-96eb-57132d4db94c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d3976b54-b069-427e-ba22-2b35fdb54765"},{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"94cb0157-28af-4eb8-8b10-43ceadb1a64c"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7bc40741-f641-47fd-8280-99b8b00f4177"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9c396823-494e-481d-8b2f-d3e63543a1b5"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"9dbd74ab-3b40-4b28-afc1-ed421a823324"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"e6070296-bfbf-4db6-879b-6078337b1759"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e6a1ff4b-23ac-4c37-ac30-f07a8945c82a"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"b9ec8d37-63ac-4220-a9e3-9d2ac821d557"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"5094a78e-368c-43de-86b5-7eca9242777f"},{"kind":"app_task","name":"SYS_GEN__DE_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"c0b4ccde-40a4-4f5d-9a2b-824c1eb4c03e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"94cb0157-28af-4eb8-8b10-43ceadb1a64c"},"edge_type":"inherent","type":"","uuid":"9a0be697-6e52-498b-b4f7-d48ece7f6722","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7bc40741-f641-47fd-8280-99b8b00f4177"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7bc40741-f641-47fd-8280-99b8b00f4177"},"edge_type":"inherent","type":"","uuid":"b60f0180-faba-4c02-9823-434327ee8dec","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"9dbd74ab-3b40-4b28-afc1-ed421a823324"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"9dbd74ab-3b40-4b28-afc1-ed421a823324"},"edge_type":"inherent","type":"","uuid":"21a8c237-a474-40ae-9898-31fa3bae53d7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"b9ec8d37-63ac-4220-a9e3-9d2ac821d557"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"b9ec8d37-63ac-4220-a9e3-9d2ac821d557"},"edge_type":"inherent","type":"","uuid":"b5382aac-8106-4d6b-a476-a250ebefb9a7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"c0b4ccde-40a4-4f5d-9a2b-824c1eb4c03e"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d3976b54-b069-427e-ba22-2b35fdb54765"},"edge_type":"inherent","type":"","uuid":"1f9bbce0-e699-4d8b-b45c-8d61a421bb05","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9c396823-494e-481d-8b2f-d3e63543a1b5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9c396823-494e-481d-8b2f-d3e63543a1b5"},"edge_type":"inherent","type":"","uuid":"87ec92ed-9077-4005-aa88-4d751c46c647","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"e6070296-bfbf-4db6-879b-6078337b1759"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e6a1ff4b-23ac-4c37-ac30-f07a8945c82a"},"edge_type":"inherent","type":"","uuid":"d5778a3b-d3d6-44db-84d0-8d27e496d259","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"5094a78e-368c-43de-86b5-7eca9242777f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"e6070296-bfbf-4db6-879b-6078337b1759"},"edge_type":"inherent","type":"","uuid":"7d049b93-2e8c-4707-9cf6-e2672549b9cd","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e6a1ff4b-23ac-4c37-ac30-f07a8945c82a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"9dbd74ab-3b40-4b28-afc1-ed421a823324"},"edge_type":"create_action_edge","type":"","uuid":"747d9b65-e2d4-4997-9835-7bb5024146f1","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"e6a1ff4b-23ac-4c37-ac30-f07a8945c82a"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"e6070296-bfbf-4db6-879b-6078337b1759"},"edge_type":"create_action_edge","type":"","uuid":"adc27651-c3fb-4b6b-87f9-0b09dbe2fd73","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"b9ec8d37-63ac-4220-a9e3-9d2ac821d557"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"7bc40741-f641-47fd-8280-99b8b00f4177"},"edge_type":"dependency","type":"","uuid":"55cc9708-4b0c-4aab-abac-f0f157346b27","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"e6070296-bfbf-4db6-879b-6078337b1759"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d3976b54-b069-427e-ba22-2b35fdb54765","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"94cb0157-28af-4eb8-8b10-43ceadb1a64c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7bc40741-f641-47fd-8280-99b8b00f4177","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9c396823-494e-481d-8b2f-d3e63543a1b5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9dbd74ab-3b40-4b28-afc1-ed421a823324","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8d014d77-dfb5-4a5c-bfe0-a08c2b4b49f5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e6070296-bfbf-4db6-879b-6078337b1759","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"b0df500a-199f-4881-aa43-1ef2a6fc7337"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e6a1ff4b-23ac-4c37-ac30-f07a8945c82a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"30023c2d-c9ac-4e2a-974f-e22bfbcf8b2c"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b9ec8d37-63ac-4220-a9e3-9d2ac821d557","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6ab59ece-9fd4-4d84-9ad8-5566e3e795eb"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"5094a78e-368c-43de-86b5-7eca9242777f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"DELETE_DEPLOYMENT_ELEMENT","uuid":"c0b4ccde-40a4-4f5d-9a2b-824c1eb4c03e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Delete_4b3985c8_846b_4321_9603_db0b165c02a9"}],"description":"","message_list":[],"uuid":"d1367966-2afe-4ef5-bb6f-ee9da32b883b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea","uuid":"6ada2e04-8fac-47ab-96eb-57132d4db94c"},"name":"SYS_GEN__Runbook_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"6f718b1d-bd3f-48fa-b6ab-fe46758e3e50","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"VMware","uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"},"retries":"0","description":"","type":"DAG","uuid":"1c80c8ef-e325-4c4d-bbc0-d63e0fc9de30","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d95f6b1d-da1a-4fb0-a04d-77ce85e0d6e2"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"53c7f9db-de01-4134-b0b7-2454c346e34f"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"622a1952-df09-4211-898e-74f34d26b9b9"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"4a952f54-4800-4a74-8ed8-1cc01f21f99f"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"c6f249e4-71c0-4809-9f10-9e2a4823a6ab"},{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6cfa7fc8-3505-48b9-a314-88beec2ff3cd"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"895fc2ed-7ab9-4c82-8492-1efa003487a5"},{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"f0c8ea5b-4afc-4a22-a6a0-8c75045c71ee"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"53c7f9db-de01-4134-b0b7-2454c346e34f"},"edge_type":"inherent","type":"","uuid":"1b3c9dbd-b3e7-4506-b139-0b8579be5667","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"4a952f54-4800-4a74-8ed8-1cc01f21f99f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6cfa7fc8-3505-48b9-a314-88beec2ff3cd"},"edge_type":"inherent","type":"","uuid":"6b6485e9-70c8-402c-ac3e-640cad47f5d5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_4b3985c8_846b_4321_9603_db0b165c02a9","uuid":"f0c8ea5b-4afc-4a22-a6a0-8c75045c71ee"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"4a952f54-4800-4a74-8ed8-1cc01f21f99f"},"edge_type":"inherent","type":"","uuid":"b9cece1a-fabb-43ae-a111-29c1c612c426","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6cfa7fc8-3505-48b9-a314-88beec2ff3cd"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d95f6b1d-da1a-4fb0-a04d-77ce85e0d6e2"},"edge_type":"inherent","type":"","uuid":"807b4cde-cdf4-4a38-85b7-ec0e742f2c98","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"622a1952-df09-4211-898e-74f34d26b9b9"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"c6f249e4-71c0-4809-9f10-9e2a4823a6ab"},"edge_type":"inherent","type":"","uuid":"a6e8df9f-4edf-4242-a1e6-b76f894bdb75","to_task_reference":{"kind":"app_task","name":"SYS_GEN__DE_Soft_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e","uuid":"895fc2ed-7ab9-4c82-8492-1efa003487a5"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"622a1952-df09-4211-898e-74f34d26b9b9"},"edge_type":"inherent","type":"","uuid":"583797ca-b947-41f4-8ced-ae1f303b3554","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"c6f249e4-71c0-4809-9f10-9e2a4823a6ab"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"4a952f54-4800-4a74-8ed8-1cc01f21f99f"},"edge_type":"create_action_edge","type":"","uuid":"8b35e44b-be46-42a6-a004-ab25ac7372f6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"c6f249e4-71c0-4809-9f10-9e2a4823a6ab"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"622a1952-df09-4211-898e-74f34d26b9b9"},"edge_type":"create_action_edge","type":"","uuid":"48e917e1-24fa-4eca-8ce8-b3ca037d12b0","to_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"6cfa7fc8-3505-48b9-a314-88beec2ff3cd"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d95f6b1d-da1a-4fb0-a04d-77ce85e0d6e2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"53c7f9db-de01-4134-b0b7-2454c346e34f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"622a1952-df09-4211-898e-74f34d26b9b9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"4a952f54-4800-4a74-8ed8-1cc01f21f99f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c6f249e4-71c0-4809-9f10-9e2a4823a6ab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e","uuid":"81b77774-e456-4a56-93c9-8163af557a10"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_4c3514f2_78b2_46b7_ba50_05f323515a8e"},{"target_any_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6cfa7fc8-3505-48b9-a314-88beec2ff3cd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"deployment_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d","uuid":"ad444417-b30f-4c73-929b-132ea6e86758"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Substrate_eb19b05b_0c58_438e_aed0_2efba5c2019d"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"39cf7283_deployment_cloned_0","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"895fc2ed-7ab9-4c82-8492-1efa003487a5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_e51f257b_fa1f_4293_8b25_64b1e57d824e"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"2cbb2f6a_deployment_cloned_0","uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},"retries":"0","description":"","type":"SOFT_DELETE_DEPLOYMENT_ELEMENT","uuid":"f0c8ea5b-4afc-4a22-a6a0-8c75045c71ee","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DE_Soft_Delete_4b3985c8_846b_4321_9603_db0b165c02a9"}],"description":"","message_list":[],"uuid":"32d48a98-52f1-4802-a7ed-9b16ffd3061b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea","uuid":"1c80c8ef-e325-4c4d-bbc0-d63e0fc9de30"},"name":"SYS_GEN__Runbook_Application_a1ec0f17_c623_4c1b_bb5f_c9672dfa6fea"}}],"message_list":[],"uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e","state":"ACTIVE","dependency_list":[{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"VMware_Centos_K8SW","action_name":"action_create","action_resource_name":"VMware","getter_resource_name":"VMware_Centos_K8SM_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"SubstrateCfg","setter_resource_name":"VMware_Centos_K8SM","action_name":"action_create","action_resource_name":"VMware","getter_resource_name":"VMware_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"},{"getter_resource_kind":"PackageCfg","setter_resource_attr":"address","setter_resource_kind":"ServiceCfg","setter_resource_name":"Kubernetes_Master","action_name":"action_delete","action_resource_name":"VMware","getter_resource_name":"VMware_Centos_K8SW_Package","action_resource_kind":"ApplicationCfg"}],"variable_list":[{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"3d7bbadb-64f0-4011-aaeb-9087ddbc9725","value":"vmware-kubenetes-cluster","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_NAME"},{"regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"6d6603a2-0ce1-4f12-bb75-23320f4673e8","value":"v1.12.8","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_VERSION"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"bd605f3a-07e3-4a2e-a451-a1a0cde74675","value":"17.03.3.ce","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"f1332e7d-0d01-45ba-a51b-ce4567ddc445","value":"10.200.0.0\/16","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_CLUSTER_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"7b24b6ca-aa3b-4337-b803-bb87d263eebb","value":"10.32.0.0\/24","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_SERVICE_SUBNET"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"b5f9c104-d768-4f3c-b78e-d8e1baca507e","value":"10.32.0.10","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"KUBE_DNS_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"81346379-63f0-43c7-9d1b-7f8cfe51452d","value":"flannel","label":"","state":"ACTIVE","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"32d4ce70-0966-4235-bc51-63a34c7af749","value":"10.46.33.243","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_CLUSTER_IP"},{"regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"205d8485-3fcb-4a06-a0eb-bdddc295f708","value":"10.46.33.244","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_DATA_SERVICE_IP"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"12677f09-3a19-4e05-9577-54329647bc08","value":"admin","label":"","state":"ACTIVE","attrs":{},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_USERNAME"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"17b23a8f-578f-45bf-b128-19f440d08a45","value":"","label":"","state":"ACTIVE","attrs":{"is_secret_modified":false,"secret_reference":{"uuid":"79be33d0-a9dc-4373-979d-cd830b996ba9"},"type":""},"editables":{"value":true},"is_hidden":false,"type":"SECRET","options":{},"name":"PE_PASSWORD"},{"regex":{},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","message_list":[],"uuid":"ffa3df65-c01f-4d12-9584-c09ec58df274","value":"default-container-46308","label":"","state":"ACTIVE","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{},"name":"PE_CONTAINER_NAME"}],"name":"VMware"}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"},"package_definition_list":[{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"80ccd738-207e-4c35-9a1b-1107398736b3","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"c185578b-d889-44d2-85ee-889469696483","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_88471a37_3dfd_4f44_8685_e438f29eaebd","uuid":"7fd6b5a5-bd18-4be2-9a75-fecc3272000f"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"7fd6b5a5-bd18-4be2-9a75-fecc3272000f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},"edge_type":"user_defined","type":"","uuid":"36d1c5b8-2355-426c-ba27-903ebbf6b195","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},"edge_type":"user_defined","type":"","uuid":"1a31216d-aa38-42ed-a18a-60226580df1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},"edge_type":"user_defined","type":"","uuid":"3ba5aff3-4ae7-4fee-b071-1fe06251fcb9","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},"edge_type":"user_defined","type":"","uuid":"1bf63fa5-1194-4c46-a9e1-60dcdb5c8132","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},"edge_type":"user_defined","type":"","uuid":"cf6f6dce-44a8-4ea2-a099-40684682c7bf","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},"edge_type":"user_defined","type":"","uuid":"e6445df3-e8d2-4fc6-a974-b1021fd35bff","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},"edge_type":"user_defined","type":"","uuid":"691a7fe4-bc87-472c-9b45-a30fba2ac0c8","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"dac441af_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\" | sudo tee -a \/var\/log\/messages\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\" | sudo tee -a \/var\/log\/messages\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone  \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${MASTER_IPS},${MINION_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\nsudo systemctl restart rsyslog\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"19794302-b99d-46e3-b518-b1ce020f8262","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2717299b-829f-44ed-9269-537c8807873a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"NVP Configuration"}],"description":"","message_list":[],"uuid":"c7b76441-19a3-4cef-8dbb-fd5f658ba4bc","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96"},"name":"8e760b73_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6324786a_dag"}],"description":"","message_list":[],"uuid":"f37483da-d2c8-41b3-8d3f-01bd9a22ab64","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922"},"name":"6522ac7a_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_88471a37_3dfd_4f44_8685_e438f29eaebd"}],"description":"","message_list":[],"uuid":"8e9a2b4d-47a6-4d79-921f-afb80176b37b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"c185578b-d889-44d2-85ee-889469696483"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for creating an application","message_list":[],"uuid":"b4ae9f03-6b88-4005-9e68-8c6ab2df1c8a","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"5ea8803f-c856-4be9-804f-3b9f65492cef","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"93ede16d-af08-4af6-ae06-1b9ea0a70b31"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"52ad6152-617c-4cd6-8dfb-b30c28ae1a5a"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"a2f16c16-2536-4cfb-822b-5c4f80a7658b"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"52ad6152-617c-4cd6-8dfb-b30c28ae1a5a"},"edge_type":"inherent","type":"","uuid":"82e9fb8e-2f84-4e3c-adb4-4960dfac278f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"a2f16c16-2536-4cfb-822b-5c4f80a7658b"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"93ede16d-af08-4af6-ae06-1b9ea0a70b31"},"edge_type":"inherent","type":"","uuid":"188e7baa-9cd4-4ab2-84f5-b45f627038c6","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"52ad6152-617c-4cd6-8dfb-b30c28ae1a5a"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"93ede16d-af08-4af6-ae06-1b9ea0a70b31","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"8e9a2b4d-47a6-4d79-921f-afb80176b37b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"52ad6152-617c-4cd6-8dfb-b30c28ae1a5a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a2f16c16-2536-4cfb-822b-5c4f80a7658b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"daa13801-f5c6-4b07-ba9e-6ae868614c6e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"5ea8803f-c856-4be9-804f-3b9f65492cef"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"b497ac46-7a40-4e40-ab83-fdd61a7bc9c0","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"bd250809-40cb-4eeb-861b-197077cb80c4","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_88471a37_3dfd_4f44_8685_e438f29eaebd","uuid":"5f3e1763-c952-47c3-bb94-aa4944572ff9"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"5f3e1763-c952-47c3-bb94-aa4944572ff9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},"edge_type":"user_defined","type":"","uuid":"36d1c5b8-2355-426c-ba27-903ebbf6b195","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},"edge_type":"user_defined","type":"","uuid":"1a31216d-aa38-42ed-a18a-60226580df1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},"edge_type":"user_defined","type":"","uuid":"3ba5aff3-4ae7-4fee-b071-1fe06251fcb9","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},"edge_type":"user_defined","type":"","uuid":"1bf63fa5-1194-4c46-a9e1-60dcdb5c8132","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},"edge_type":"user_defined","type":"","uuid":"cf6f6dce-44a8-4ea2-a099-40684682c7bf","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},"edge_type":"user_defined","type":"","uuid":"e6445df3-e8d2-4fc6-a974-b1021fd35bff","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},"edge_type":"user_defined","type":"","uuid":"691a7fe4-bc87-472c-9b45-a30fba2ac0c8","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"dac441af_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\" | sudo tee -a \/var\/log\/messages\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\" | sudo tee -a \/var\/log\/messages\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone  \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${MASTER_IPS},${MINION_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\nsudo systemctl restart rsyslog\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"19794302-b99d-46e3-b518-b1ce020f8262","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2717299b-829f-44ed-9269-537c8807873a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"NVP Configuration"}],"description":"","message_list":[],"uuid":"c7b76441-19a3-4cef-8dbb-fd5f658ba4bc","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96"},"name":"8e760b73_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6324786a_dag"}],"description":"","message_list":[],"uuid":"f37483da-d2c8-41b3-8d3f-01bd9a22ab64","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922"},"name":"6522ac7a_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_88471a37_3dfd_4f44_8685_e438f29eaebd"}],"description":"","message_list":[],"uuid":"f37a859c-b530-4deb-9176-20bdca3576da","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"bd250809-40cb-4eeb-861b-197077cb80c4"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"50b3a5d6-c9bf-4a58-8c1d-7c9d46fa594c","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"b935a4b5-4631-48ff-929e-99efd7c562d6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"185d7352-6815-4274-b5f9-1d6545edef65"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b2c9dcf2-8ee4-4503-93ef-f11121945b4d"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"86b4ffca-0b3a-41c2-a01f-b8c879973042"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"185d7352-6815-4274-b5f9-1d6545edef65"},"edge_type":"inherent","type":"","uuid":"80ae60ef-005a-4733-a80b-180588f34087","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b2c9dcf2-8ee4-4503-93ef-f11121945b4d"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"b2c9dcf2-8ee4-4503-93ef-f11121945b4d"},"edge_type":"inherent","type":"","uuid":"d6ee3980-a8cc-478c-bec9-0ee6a2a5f57f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"86b4ffca-0b3a-41c2-a01f-b8c879973042"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"185d7352-6815-4274-b5f9-1d6545edef65","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b2c9dcf2-8ee4-4503-93ef-f11121945b4d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"86b4ffca-0b3a-41c2-a01f-b8c879973042","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"f37a859c-b530-4deb-9176-20bdca3576da"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}],"description":"","message_list":[],"uuid":"ea57a4e5-1d4a-4d81-b787-6e9ba185cc0b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"b935a4b5-4631-48ff-929e-99efd7c562d6"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"685afba2-789d-44d9-9e81-5f122768cf1a","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"de7facb6-ec48-41ac-8890-cc017139a636","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8a4855cf-9e09-424a-8f78-7d6506c2efe5"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"9146a604-5fcc-4876-a0d8-0003171df76f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8a4855cf-9e09-424a-8f78-7d6506c2efe5"},"edge_type":"inherent","type":"","uuid":"f75c5ce6-8884-48ca-aca9-6ea63e5f9ec3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"9146a604-5fcc-4876-a0d8-0003171df76f"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8a4855cf-9e09-424a-8f78-7d6506c2efe5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"9146a604-5fcc-4876-a0d8-0003171df76f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_22e18386_fa75_402e_9fd9_aa32056cb746"}],"description":"","message_list":[],"uuid":"bdd07b64-5503-4b16-9ed1-a8ea3a3e2fb7","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"de7facb6-ec48-41ac-8890-cc017139a636"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for starting an application","message_list":[],"uuid":"c2891d68-b8b4-4b45-91e3-3d46298b135a","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"2077d5b7-f748-43fa-8b45-4965edbf6184","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"21cff4f8-72d4-43d7-b235-da5f3564c519"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"21cff4f8-72d4-43d7-b235-da5f3564c519","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"b130ec96-c16a-4e2a-b78d-6052132934e2","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"2077d5b7-f748-43fa-8b45-4965edbf6184"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for restarting an application","message_list":[],"uuid":"f5fd23d4-f3f0-4bba-b7d1-a5c73dda4958","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"9c87ce7a-e771-4ef2-b514-0e3ebc0f42b0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"62b7014e-f612-4a1e-97a6-197a14e05b82"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"62b7014e-f612-4a1e-97a6-197a14e05b82","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"2adf012a-6ae8-4d05-9706-8cf5e57b2fcd","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"9c87ce7a-e771-4ef2-b514-0e3ebc0f42b0"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}},{"description":"System action for stopping an application","message_list":[],"uuid":"08251523-8bf4-415e-a03d-851d48c73f89","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"81995c3d-f461-454e-aa55-8c2b79573898","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"d8793a10-f9c3-46ce-acb6-766d63750bda"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d8793a10-f9c3-46ce-acb6-766d63750bda","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"07a76453-8013-4453-99ac-9f646db737b6","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_22e18386_fa75_402e_9fd9_aa32056cb746","uuid":"81995c3d-f461-454e-aa55-8c2b79573898"},"name":"SYS_GEN__Runbook_Package_22e18386_fa75_402e_9fd9_aa32056cb746"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},"edge_type":"user_defined","type":"","uuid":"36d1c5b8-2355-426c-ba27-903ebbf6b195","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},"edge_type":"user_defined","type":"","uuid":"1a31216d-aa38-42ed-a18a-60226580df1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},"edge_type":"user_defined","type":"","uuid":"3ba5aff3-4ae7-4fee-b071-1fe06251fcb9","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},"edge_type":"user_defined","type":"","uuid":"1bf63fa5-1194-4c46-a9e1-60dcdb5c8132","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},"edge_type":"user_defined","type":"","uuid":"cf6f6dce-44a8-4ea2-a099-40684682c7bf","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},"edge_type":"user_defined","type":"","uuid":"e6445df3-e8d2-4fc6-a974-b1021fd35bff","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},"edge_type":"user_defined","type":"","uuid":"691a7fe4-bc87-472c-9b45-a30fba2ac0c8","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"dac441af_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\" | sudo tee -a \/var\/log\/messages\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\" | sudo tee -a \/var\/log\/messages\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone  \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${MASTER_IPS},${MINION_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\nsudo systemctl restart rsyslog\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"19794302-b99d-46e3-b518-b1ce020f8262","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2717299b-829f-44ed-9269-537c8807873a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"NVP Configuration"}],"description":"","message_list":[],"uuid":"c7b76441-19a3-4cef-8dbb-fd5f658ba4bc","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96"},"name":"8e760b73_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","description":"","type":"DAG","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6324786a_dag"}],"description":"","message_list":[],"uuid":"f37483da-d2c8-41b3-8d3f-01bd9a22ab64","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922"},"name":"6522ac7a_runbook"}},"variable_list":[],"name":"AHV_Centos_K8SM_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"95167f3f-76d9-480b-8d0f-670c87a36bf5","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"34147192-ff56-4a84-a77a-404c5b8b4aa6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_0bfe96bd_9045_4bbc_ac6f_529e8b1c1d22","uuid":"73e0941b-20ca-4f4e-a5bf-cba3f9814af7"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"73e0941b-20ca-4f4e-a5bf-cba3f9814af7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},"edge_type":"user_defined","type":"","uuid":"36a33d61-9fe9-4ebf-9c33-dd90e113e992","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},"edge_type":"user_defined","type":"","uuid":"dfcf0803-d531-4422-bdf7-99c7539461ba","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"c1566b3d_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\"\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\"\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\nsudo systemctl restart rsyslog\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"41adaccf-ee3f-4483-b1f2-c54f6aaaeed8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84"},"name":"9a6e189b_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"ecb15850-2381-44a0-9860-8fb287047b97","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"abd3357c_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"be888211-a88a-4c3d-9a8b-8100653fbb4a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag","uuid":"ecb15850-2381-44a0-9860-8fb287047b97"},"name":"3cb17acf_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_0bfe96bd_9045_4bbc_ac6f_529e8b1c1d22"}],"description":"","message_list":[],"uuid":"878f2f2b-f4ff-45c2-84c1-bbc61ec8fcb2","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"34147192-ff56-4a84-a77a-404c5b8b4aa6"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for creating an application","message_list":[],"uuid":"97639384-241e-44fd-aa42-4fc2c89613fc","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"a8a56b8c-5cfa-44b9-af13-52e6421e1fae","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9e5c8b59-988a-4567-9679-10ff55c2dfdd"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7677f070-9b9a-45e4-89a6-9ce1496a16b6"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"6df6bf6b-a44b-4948-987d-95ac184a3bb8"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7677f070-9b9a-45e4-89a6-9ce1496a16b6"},"edge_type":"inherent","type":"","uuid":"16760d94-f33d-4c7f-8295-0eec467a8782","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"6df6bf6b-a44b-4948-987d-95ac184a3bb8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9e5c8b59-988a-4567-9679-10ff55c2dfdd"},"edge_type":"inherent","type":"","uuid":"9e597f91-ab6a-42da-85c8-bfbaf3231bae","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7677f070-9b9a-45e4-89a6-9ce1496a16b6"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9e5c8b59-988a-4567-9679-10ff55c2dfdd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"878f2f2b-f4ff-45c2-84c1-bbc61ec8fcb2"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7677f070-9b9a-45e4-89a6-9ce1496a16b6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6df6bf6b-a44b-4948-987d-95ac184a3bb8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"eb0bb837-5f59-4521-b247-145d85bdafe0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"a8a56b8c-5cfa-44b9-af13-52e6421e1fae"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"b70f171d-dd90-465c-bd21-833871cba42a","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"ed445bfe-d119-4cde-add9-f6450dd155e0","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_0bfe96bd_9045_4bbc_ac6f_529e8b1c1d22","uuid":"9cdb18b3-1d13-48f1-923b-6ca4a2e70bc0"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"9cdb18b3-1d13-48f1-923b-6ca4a2e70bc0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},"edge_type":"user_defined","type":"","uuid":"36a33d61-9fe9-4ebf-9c33-dd90e113e992","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},"edge_type":"user_defined","type":"","uuid":"dfcf0803-d531-4422-bdf7-99c7539461ba","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"c1566b3d_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\"\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\"\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\nsudo systemctl restart rsyslog\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"41adaccf-ee3f-4483-b1f2-c54f6aaaeed8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84"},"name":"9a6e189b_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"ecb15850-2381-44a0-9860-8fb287047b97","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"abd3357c_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"be888211-a88a-4c3d-9a8b-8100653fbb4a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag","uuid":"ecb15850-2381-44a0-9860-8fb287047b97"},"name":"3cb17acf_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_0bfe96bd_9045_4bbc_ac6f_529e8b1c1d22"}],"description":"","message_list":[],"uuid":"f0dabcb4-57e3-4e7c-abb7-7f11732941ef","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"ed445bfe-d119-4cde-add9-f6450dd155e0"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"421a4478-8fc3-4c7a-bcdc-9d1bf2d4a838","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"019204df-af50-4d13-89be-864bc0c98a31","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"75b03e11-a8c7-4661-b489-7d8a356dc015"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"818471e6-45d9-4a11-a2f7-d85606a64fe8"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"7b9f4da0-1512-4a1e-b4d0-ac7713c9f796"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"75b03e11-a8c7-4661-b489-7d8a356dc015"},"edge_type":"inherent","type":"","uuid":"f7816e3e-180c-495d-aedd-9c81b4006b34","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"818471e6-45d9-4a11-a2f7-d85606a64fe8"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"818471e6-45d9-4a11-a2f7-d85606a64fe8"},"edge_type":"inherent","type":"","uuid":"6c3021ae-46cf-4150-8784-d365e4f7e612","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"7b9f4da0-1512-4a1e-b4d0-ac7713c9f796"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"75b03e11-a8c7-4661-b489-7d8a356dc015","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"818471e6-45d9-4a11-a2f7-d85606a64fe8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7b9f4da0-1512-4a1e-b4d0-ac7713c9f796","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"f0dabcb4-57e3-4e7c-abb7-7f11732941ef"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}],"description":"","message_list":[],"uuid":"38b35603-ea0b-41c3-b86d-f48e7352b49c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"019204df-af50-4d13-89be-864bc0c98a31"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"ca750aa3-3631-49d8-b1b6-9174dc323a39","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"7ffe18a0-1402-4e0d-9f42-cc817fe1a8b5","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"30de8b64-b0f2-4f85-9aa0-31e67458c1c4"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"cd63e5fc-cae6-4d3c-aaa6-c03e7c366f0d"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"30de8b64-b0f2-4f85-9aa0-31e67458c1c4"},"edge_type":"inherent","type":"","uuid":"52d822cc-ccb9-428f-9fa6-34a676282f68","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"cd63e5fc-cae6-4d3c-aaa6-c03e7c366f0d"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"30de8b64-b0f2-4f85-9aa0-31e67458c1c4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"cd63e5fc-cae6-4d3c-aaa6-c03e7c366f0d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}],"description":"","message_list":[],"uuid":"fdf231e7-2631-4f03-9734-605085d531be","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"7ffe18a0-1402-4e0d-9f42-cc817fe1a8b5"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for starting an application","message_list":[],"uuid":"484894af-047a-4c9e-8168-d243306e750b","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"165870b0-5301-4137-85fb-5d3f8d043d11","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b9beb98c-042e-4d27-83fa-4e77c1862681"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b9beb98c-042e-4d27-83fa-4e77c1862681","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"0969015a-cd0d-4600-a1e7-b90f4d708bc2","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"165870b0-5301-4137-85fb-5d3f8d043d11"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for restarting an application","message_list":[],"uuid":"34bd6b6c-a4b1-4f5f-b10c-1a9ca56c3711","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"d114370b-072a-4171-a59a-fae15fb2bd0c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"512e9e00-7fa1-434a-9991-c5fdebf1dc0f"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"512e9e00-7fa1-434a-9991-c5fdebf1dc0f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"ef3b172e-8b70-4b73-abe2-9f16f4808ade","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"d114370b-072a-4171-a59a-fae15fb2bd0c"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}},{"description":"System action for stopping an application","message_list":[],"uuid":"a0e05213-55d3-4d82-9a47-01b700af58d9","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"9db7d5ac-9889-4f95-b172-2969ac9789e2","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"24ed9227-de6a-4ea5-bee3-eed0ef910c29"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"24ed9227-de6a-4ea5-bee3-eed0ef910c29","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"ea9f4b1c-4322-4e8f-a832-fbab019c2de8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e","uuid":"9db7d5ac-9889-4f95-b172-2969ac9789e2"},"name":"SYS_GEN__Runbook_Package_24dd623b_a6ae_43d6_b8ef_adad0e20ce9e"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},"edge_type":"user_defined","type":"","uuid":"36a33d61-9fe9-4ebf-9c33-dd90e113e992","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},"edge_type":"user_defined","type":"","uuid":"dfcf0803-d531-4422-bdf7-99c7539461ba","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"c1566b3d_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\"\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\"\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\nsudo systemctl restart rsyslog\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"41adaccf-ee3f-4483-b1f2-c54f6aaaeed8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84"},"name":"9a6e189b_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","description":"","type":"DAG","uuid":"ecb15850-2381-44a0-9860-8fb287047b97","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"abd3357c_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"be888211-a88a-4c3d-9a8b-8100653fbb4a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag","uuid":"ecb15850-2381-44a0-9860-8fb287047b97"},"name":"3cb17acf_runbook"}},"variable_list":[],"name":"AHV_Centos_K8SW_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"64ff36c2-b0a8-4c8c-b9c1-91b8481de59c","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"551904b3-2b8e-4e86-8956-f713a5dd86a2","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_360d7cfa_93a5_44ae_b51a_bae55d28d29d","uuid":"19807f16-458e-4c32-bf4c-cb49b3589508"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"19807f16-458e-4c32-bf4c-cb49b3589508","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},"edge_type":"user_defined","type":"","uuid":"393b023b-e6d2-41a4-8c81-dd74bccce4c1","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},"edge_type":"user_defined","type":"","uuid":"364ee192-14bc-45cd-abf0-f85442c23a1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},"edge_type":"user_defined","type":"","uuid":"297c9e2b-ae2e-4fe1-b1fb-769d1b0f62fe","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},"edge_type":"user_defined","type":"","uuid":"44f5a8a2-6171-4ac1-b60d-c4f2fd5937ca","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},"edge_type":"user_defined","type":"","uuid":"4b966a75-83ca-4ebb-910f-818f08ea5489","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},"edge_type":"user_defined","type":"","uuid":"c337bb68-9651-4eb1-b6e7-bc5a875249e4","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},"edge_type":"user_defined","type":"","uuid":"76e183c1-30d8-4507-9698-42b6da4461d5","to_task_reference":{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"84e097cf_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate etcd \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/xvd{e,f,g}\nsudo vgcreate docker \/dev\/xvd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${MASTER_DNS},${WORKER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},${PUBLIC_MASTER_DNS},${PUBLIC_WORKER_DNS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=aws\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=aws\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: gp2\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/aws-ebs\nparameters:\n  type: gp2' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"EBS VolumePlugin"}],"description":"","message_list":[],"uuid":"98bc65be-bd41-4b3a-b903-7a48c82b7a5f","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"84e097cf_dag","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2"},"name":"e836616a_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"4226cd9d_dag"}],"description":"","message_list":[],"uuid":"5288af71-3f06-444e-bac5-4f6645c7bf39","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"4226cd9d_dag","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f"},"name":"18f2756f_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_360d7cfa_93a5_44ae_b51a_bae55d28d29d"}],"description":"","message_list":[],"uuid":"2db0982c-f71c-4b8e-a7fd-bcc922c14767","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"551904b3-2b8e-4e86-8956-f713a5dd86a2"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for creating an application","message_list":[],"uuid":"b8363855-1eac-483d-be3e-756ef67d9d29","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"44bb528f-48bc-41f6-a5c0-a82547608ed6","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"80455ba4-21e2-4f11-93f8-bdb9b0cc555b"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"65fa8050-a316-441d-8ebb-28c1d7104fd1"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"72d09890-5d73-45c1-8ab5-1f08e8c84e88"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"65fa8050-a316-441d-8ebb-28c1d7104fd1"},"edge_type":"inherent","type":"","uuid":"f6af39c9-712c-4588-ab02-dd997fa1fb95","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"72d09890-5d73-45c1-8ab5-1f08e8c84e88"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"80455ba4-21e2-4f11-93f8-bdb9b0cc555b"},"edge_type":"inherent","type":"","uuid":"0d34628f-34ee-4f6a-a589-721c91344029","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"65fa8050-a316-441d-8ebb-28c1d7104fd1"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"80455ba4-21e2-4f11-93f8-bdb9b0cc555b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2db0982c-f71c-4b8e-a7fd-bcc922c14767"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"65fa8050-a316-441d-8ebb-28c1d7104fd1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"72d09890-5d73-45c1-8ab5-1f08e8c84e88","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"1fbbe3c5-7de3-43e0-bd5a-932389500060","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"44bb528f-48bc-41f6-a5c0-a82547608ed6"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"255e90c0-c5fe-4bc1-8391-9099ff14e6e6","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"07d552f5-2950-4b0e-a55e-1a20d852428e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_360d7cfa_93a5_44ae_b51a_bae55d28d29d","uuid":"4fa12e4c-aa25-418c-ab82-66d8de9b7271"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"4fa12e4c-aa25-418c-ab82-66d8de9b7271","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},"edge_type":"user_defined","type":"","uuid":"393b023b-e6d2-41a4-8c81-dd74bccce4c1","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},"edge_type":"user_defined","type":"","uuid":"364ee192-14bc-45cd-abf0-f85442c23a1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},"edge_type":"user_defined","type":"","uuid":"297c9e2b-ae2e-4fe1-b1fb-769d1b0f62fe","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},"edge_type":"user_defined","type":"","uuid":"44f5a8a2-6171-4ac1-b60d-c4f2fd5937ca","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},"edge_type":"user_defined","type":"","uuid":"4b966a75-83ca-4ebb-910f-818f08ea5489","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},"edge_type":"user_defined","type":"","uuid":"c337bb68-9651-4eb1-b6e7-bc5a875249e4","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},"edge_type":"user_defined","type":"","uuid":"76e183c1-30d8-4507-9698-42b6da4461d5","to_task_reference":{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"84e097cf_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate etcd \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/xvd{e,f,g}\nsudo vgcreate docker \/dev\/xvd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${MASTER_DNS},${WORKER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},${PUBLIC_MASTER_DNS},${PUBLIC_WORKER_DNS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=aws\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=aws\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: gp2\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/aws-ebs\nparameters:\n  type: gp2' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"EBS VolumePlugin"}],"description":"","message_list":[],"uuid":"98bc65be-bd41-4b3a-b903-7a48c82b7a5f","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"84e097cf_dag","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2"},"name":"e836616a_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"4226cd9d_dag"}],"description":"","message_list":[],"uuid":"5288af71-3f06-444e-bac5-4f6645c7bf39","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"4226cd9d_dag","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f"},"name":"18f2756f_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_360d7cfa_93a5_44ae_b51a_bae55d28d29d"}],"description":"","message_list":[],"uuid":"2ceaf6d0-347f-4cc0-9225-4ab2264e6c5e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"07d552f5-2950-4b0e-a55e-1a20d852428e"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"340df492-80f6-47c5-9655-fe33b9daa7fb","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"5f45528a-d12f-4f2a-b5ec-8d1cbfe3b0d1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"1f5180ef-6bc2-4bbe-a327-5dcc2622405c"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"215afba2-dc7f-4bcd-aa98-51dbe73682e0"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"9c0ba35a-4e76-4be9-a294-2d5f9b6984e6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"1f5180ef-6bc2-4bbe-a327-5dcc2622405c"},"edge_type":"inherent","type":"","uuid":"59f75b93-9bc0-4064-b2ca-35cfbf292bf7","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"215afba2-dc7f-4bcd-aa98-51dbe73682e0"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"215afba2-dc7f-4bcd-aa98-51dbe73682e0"},"edge_type":"inherent","type":"","uuid":"629f7170-8c52-469f-be9c-17af85894d08","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"9c0ba35a-4e76-4be9-a294-2d5f9b6984e6"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"1f5180ef-6bc2-4bbe-a327-5dcc2622405c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"215afba2-dc7f-4bcd-aa98-51dbe73682e0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9c0ba35a-4e76-4be9-a294-2d5f9b6984e6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"2ceaf6d0-347f-4cc0-9225-4ab2264e6c5e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}],"description":"","message_list":[],"uuid":"bbc69574-bf67-40d4-a7b4-c8332919c144","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"5f45528a-d12f-4f2a-b5ec-8d1cbfe3b0d1"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"370f536c-5fb5-4e61-8eec-185e97fc0a2c","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"83df007a-93cd-4028-9f61-320d5f95f82d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5239a748-2a13-450a-96e8-53220759f237"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"54af0a8e-85fd-4443-a7b5-53949d0ad213"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"5239a748-2a13-450a-96e8-53220759f237"},"edge_type":"inherent","type":"","uuid":"b8ae92b9-688e-40ec-ad49-2dd9b56fec47","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"54af0a8e-85fd-4443-a7b5-53949d0ad213"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5239a748-2a13-450a-96e8-53220759f237","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"54af0a8e-85fd-4443-a7b5-53949d0ad213","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_6ab2b3c5_fdb8_4960_9757_2248632372d6"}],"description":"","message_list":[],"uuid":"673c15cc-6304-4dfb-98df-2e343076d84d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"83df007a-93cd-4028-9f61-320d5f95f82d"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for starting an application","message_list":[],"uuid":"7ab92a89-2849-4eb8-883e-11eaa830d21b","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"fcfc499f-d3c1-4387-afb4-78e018c2ee46","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"ab9fca6f-0f82-4eec-a097-86076fc3aac1"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ab9fca6f-0f82-4eec-a097-86076fc3aac1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"b1114965-ea9e-4c58-8d08-7df65e7e7adf","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"fcfc499f-d3c1-4387-afb4-78e018c2ee46"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for restarting an application","message_list":[],"uuid":"c156bcc6-b861-44cf-bccc-e87327e87243","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"1f86b2af-cbe3-4d8e-aa20-6eb3b2fa3f14","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"e854d8ef-a4ca-493f-b6f2-85cf50345f47"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e854d8ef-a4ca-493f-b6f2-85cf50345f47","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"db758822-5379-4bb5-9cc3-f16f63819142","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"1f86b2af-cbe3-4d8e-aa20-6eb3b2fa3f14"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}},{"description":"System action for stopping an application","message_list":[],"uuid":"067d3666-71c4-4d7a-af8a-8b5c6ad3dc3d","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"55d096d2-4813-4c9b-b91d-634be1c3e7da","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"f5825d64-ef9f-4a99-860f-375337bd75ac"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f5825d64-ef9f-4a99-860f-375337bd75ac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"84bd6ca9-c925-4044-82df-b418158e3293","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6","uuid":"55d096d2-4813-4c9b-b91d-634be1c3e7da"},"name":"SYS_GEN__Runbook_Package_6ab2b3c5_fdb8_4960_9757_2248632372d6"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},"edge_type":"user_defined","type":"","uuid":"393b023b-e6d2-41a4-8c81-dd74bccce4c1","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},"edge_type":"user_defined","type":"","uuid":"364ee192-14bc-45cd-abf0-f85442c23a1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},"edge_type":"user_defined","type":"","uuid":"297c9e2b-ae2e-4fe1-b1fb-769d1b0f62fe","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},"edge_type":"user_defined","type":"","uuid":"44f5a8a2-6171-4ac1-b60d-c4f2fd5937ca","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},"edge_type":"user_defined","type":"","uuid":"4b966a75-83ca-4ebb-910f-818f08ea5489","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},"edge_type":"user_defined","type":"","uuid":"c337bb68-9651-4eb1-b6e7-bc5a875249e4","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},"edge_type":"user_defined","type":"","uuid":"76e183c1-30d8-4507-9698-42b6da4461d5","to_task_reference":{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"84e097cf_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate etcd \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/xvd{e,f,g}\nsudo vgcreate docker \/dev\/xvd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${MASTER_DNS},${WORKER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},${PUBLIC_MASTER_DNS},${PUBLIC_WORKER_DNS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=aws\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=aws\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: gp2\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/aws-ebs\nparameters:\n  type: gp2' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"EBS VolumePlugin"}],"description":"","message_list":[],"uuid":"98bc65be-bd41-4b3a-b903-7a48c82b7a5f","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"84e097cf_dag","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2"},"name":"e836616a_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","description":"","type":"DAG","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"4226cd9d_dag"}],"description":"","message_list":[],"uuid":"5288af71-3f06-444e-bac5-4f6645c7bf39","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"4226cd9d_dag","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f"},"name":"18f2756f_runbook"}},"variable_list":[],"name":"AWS_Centos_K8SM_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"a9c80781-562e-48ef-a1d4-f58d1f36a56d","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"948a99e4-ad49-45f8-b4d7-e789db616a3a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_cb47a109_2f7f_41cb_9608_37497893ad6a","uuid":"fef41c44-7d30-45ec-af86-920909411d45"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"fef41c44-7d30-45ec-af86-920909411d45","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},"edge_type":"user_defined","type":"","uuid":"8f7035f9-fc53-4970-98dd-2f01c3bad943","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},"edge_type":"user_defined","type":"","uuid":"8d6c31eb-238b-42f6-b125-10c0f7137eb4","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"a4ecbecd_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{AWS_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate docker \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AWS_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_NAME=\"@@{private_dns_name}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${INSTANCE_NAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_NAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${INSTANCE_NAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${INSTANCE_NAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"1cab5b33-1c90-4d52-875d-4974dac79237","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"a4ecbecd_dag","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d"},"name":"dca27b9e_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"47206c54-41eb-407c-b91d-525398312c11"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"9e5b50bc_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"47206c54-41eb-407c-b91d-525398312c11","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '@@{private_dns_name}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '@@{private_dns_name}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"1a50e075-b29a-412f-9095-656357789f35","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"9e5b50bc_dag","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e"},"name":"137c8a73_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_cb47a109_2f7f_41cb_9608_37497893ad6a"}],"description":"","message_list":[],"uuid":"e77c3808-4c31-4565-bf37-79da84f81878","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"948a99e4-ad49-45f8-b4d7-e789db616a3a"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for creating an application","message_list":[],"uuid":"f547c1aa-05a0-49a2-aa3f-492f3e06c27e","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"c25ebcc9-bbbd-4500-ab04-988e7b20f034","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"8ded3476-52f9-40ab-baaa-8ea13de935d3"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"00cb0f41-2153-461d-ba39-12ae51dd716d"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"49fd7950-31e9-4fb0-90a3-ca7492d32665"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"00cb0f41-2153-461d-ba39-12ae51dd716d"},"edge_type":"inherent","type":"","uuid":"67de5d08-84fd-41db-ba44-168f422a6bc8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"49fd7950-31e9-4fb0-90a3-ca7492d32665"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"8ded3476-52f9-40ab-baaa-8ea13de935d3"},"edge_type":"inherent","type":"","uuid":"8871454d-f453-40f6-a869-94e08aa6b601","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"00cb0f41-2153-461d-ba39-12ae51dd716d"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8ded3476-52f9-40ab-baaa-8ea13de935d3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"e77c3808-4c31-4565-bf37-79da84f81878"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"00cb0f41-2153-461d-ba39-12ae51dd716d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"49fd7950-31e9-4fb0-90a3-ca7492d32665","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"b721581b-8d49-4b5b-ac2c-e09da77ce31c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"c25ebcc9-bbbd-4500-ab04-988e7b20f034"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"4a3e41c9-ae18-400c-b29a-9e7d77e04b46","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"aaf2350c-c9d7-46d4-89db-128e50676f52","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_cb47a109_2f7f_41cb_9608_37497893ad6a","uuid":"d819f1b6-c7aa-4167-9e64-4b492bf4d305"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"d819f1b6-c7aa-4167-9e64-4b492bf4d305","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},"edge_type":"user_defined","type":"","uuid":"8f7035f9-fc53-4970-98dd-2f01c3bad943","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},"edge_type":"user_defined","type":"","uuid":"8d6c31eb-238b-42f6-b125-10c0f7137eb4","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"a4ecbecd_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{AWS_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate docker \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AWS_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_NAME=\"@@{private_dns_name}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${INSTANCE_NAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_NAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${INSTANCE_NAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${INSTANCE_NAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"1cab5b33-1c90-4d52-875d-4974dac79237","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"a4ecbecd_dag","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d"},"name":"dca27b9e_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"47206c54-41eb-407c-b91d-525398312c11"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"9e5b50bc_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"47206c54-41eb-407c-b91d-525398312c11","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '@@{private_dns_name}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '@@{private_dns_name}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"1a50e075-b29a-412f-9095-656357789f35","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"9e5b50bc_dag","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e"},"name":"137c8a73_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_cb47a109_2f7f_41cb_9608_37497893ad6a"}],"description":"","message_list":[],"uuid":"fafd9288-5802-44cd-b6e7-add43f395238","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"aaf2350c-c9d7-46d4-89db-128e50676f52"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"8f5b4de6-c43b-4680-b5f8-271382a5009e","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"8bafe9f5-f2d4-4a82-b4c3-85fda7e4581e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9703e5f9-c578-4c36-8804-c04014e549d0"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9db2175d-8981-4a73-baeb-e923f5d29789"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"dd7104db-475d-4c29-a10a-6cb1b224cde0"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9703e5f9-c578-4c36-8804-c04014e549d0"},"edge_type":"inherent","type":"","uuid":"8a317bca-9595-4163-9036-b9dd5237f299","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9db2175d-8981-4a73-baeb-e923f5d29789"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9db2175d-8981-4a73-baeb-e923f5d29789"},"edge_type":"inherent","type":"","uuid":"b6e0cae1-2bfd-46c0-ba61-ba158c14cda8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"dd7104db-475d-4c29-a10a-6cb1b224cde0"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9703e5f9-c578-4c36-8804-c04014e549d0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9db2175d-8981-4a73-baeb-e923f5d29789","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dd7104db-475d-4c29-a10a-6cb1b224cde0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"fafd9288-5802-44cd-b6e7-add43f395238"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}],"description":"","message_list":[],"uuid":"c90dd071-9795-45d0-8325-dcdafde03175","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"8bafe9f5-f2d4-4a82-b4c3-85fda7e4581e"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"2fd64ed1-6d99-488c-8257-96de6d26365a","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"1eb6af62-2e6b-4d58-bf23-a4bb08831878","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"aea590ea-5344-4595-81fa-b9b6723bdd52"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"fdc382d8-1304-4287-b7fa-11a9e0cf9a0c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"aea590ea-5344-4595-81fa-b9b6723bdd52"},"edge_type":"inherent","type":"","uuid":"2180ed9f-9814-43ae-bb6a-f8a970b5dbbf","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"fdc382d8-1304-4287-b7fa-11a9e0cf9a0c"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"aea590ea-5344-4595-81fa-b9b6723bdd52","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"fdc382d8-1304-4287-b7fa-11a9e0cf9a0c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_9d79b4a5_8fba_4074_80e9_4e490e46c463"}],"description":"","message_list":[],"uuid":"7a94a59f-a581-4fbc-9764-4fb8ad3f5e52","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"1eb6af62-2e6b-4d58-bf23-a4bb08831878"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for starting an application","message_list":[],"uuid":"754f5ab1-ef39-4a9b-8830-7e6d1487e486","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"36206b61-4870-4125-8388-8bea7f9e01cb","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"4418a5a6-c599-47b7-91e4-2aea23743a7c"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4418a5a6-c599-47b7-91e4-2aea23743a7c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"08f10b23-9773-4b46-9d22-f8d6b0d88dc8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"36206b61-4870-4125-8388-8bea7f9e01cb"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for restarting an application","message_list":[],"uuid":"c8911f7b-88d8-4019-a600-a6b7e01102a2","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"8e6cbb44-6178-476b-8166-128ffda86c65","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"dc75af00-47a0-465a-9ab5-149ece33e3ec"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dc75af00-47a0-465a-9ab5-149ece33e3ec","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"7ce2854f-db07-4af1-94d0-bc2fbd4cccde","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"8e6cbb44-6178-476b-8166-128ffda86c65"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}},{"description":"System action for stopping an application","message_list":[],"uuid":"6b5ae7b3-f1b6-48da-896f-531b0fbc2752","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"0555d3dc-07c0-48b7-81eb-0523bb83d89f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"9343b710-3a44-4db3-83e6-0e280a81347d"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9343b710-3a44-4db3-83e6-0e280a81347d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"ebb16a1e-ad04-44d6-a323-5186d96f3cfa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463","uuid":"0555d3dc-07c0-48b7-81eb-0523bb83d89f"},"name":"SYS_GEN__Runbook_Package_9d79b4a5_8fba_4074_80e9_4e490e46c463"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},"edge_type":"user_defined","type":"","uuid":"8f7035f9-fc53-4970-98dd-2f01c3bad943","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},"edge_type":"user_defined","type":"","uuid":"8d6c31eb-238b-42f6-b125-10c0f7137eb4","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"a4ecbecd_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{AWS_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate docker \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AWS_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_NAME=\"@@{private_dns_name}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${INSTANCE_NAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_NAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${INSTANCE_NAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${INSTANCE_NAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"1cab5b33-1c90-4d52-875d-4974dac79237","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"a4ecbecd_dag","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d"},"name":"dca27b9e_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","description":"","type":"DAG","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"47206c54-41eb-407c-b91d-525398312c11"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"9e5b50bc_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"47206c54-41eb-407c-b91d-525398312c11","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '@@{private_dns_name}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '@@{private_dns_name}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"1a50e075-b29a-412f-9095-656357789f35","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"9e5b50bc_dag","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e"},"name":"137c8a73_runbook"}},"variable_list":[],"name":"AWS_Centos_K8SW_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"f28f9633-0309-4412-8817-30988108a286","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"f1efcf5c-c84d-4506-878b-c604b70d321d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_e0709c6f_cdb4_4692_bc12_83a2ff4b0779","uuid":"97c02166-bc8e-42b0-80ca-926da789f1d8"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"97c02166-bc8e-42b0-80ca-926da789f1d8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},"edge_type":"user_defined","type":"","uuid":"de2348c7-2318-4257-9e79-dfb66281958b","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},"edge_type":"user_defined","type":"","uuid":"51d6c43f-d565-4866-a416-61e095af11bd","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},"edge_type":"user_defined","type":"","uuid":"2488676d-2476-40f6-903e-baa4e0df0d58","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},"edge_type":"user_defined","type":"","uuid":"4ebf67a3-1920-4153-b24f-ae45d14eba9f","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},"edge_type":"user_defined","type":"","uuid":"9bd97b41-84b0-450e-9c25-bca582b0a992","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},"edge_type":"user_defined","type":"","uuid":"6a02b957-08e3-40e0-844d-c96e3100ef8a","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},"edge_type":"user_defined","type":"","uuid":"7f2718af-3bff-4d17-8935-31f1e67111fc","to_task_reference":{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e07e43b0_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_NAMES=\"@@{calm_array_name}@@\"\nWORKER_NAMES=\"@@{GCP_Centos_K8SW.name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4d5e4193-b8af-4432-974d-2040144412db","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=gce\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=gce\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: standard\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/gce-pd\nparameters:\n  type: pd-standard' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GCE VolumePlugin"}],"description":"","message_list":[],"uuid":"cbbf1fea-9935-4e29-b85c-459ea32c8d49","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f"},"name":"26c82c77_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"253ca981-dd06-4471-b4f8-41da954e844b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6bbde6e8_dag"}],"description":"","message_list":[],"uuid":"a66cb45b-f6e9-418e-b77e-d2b3bc259c51","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"253ca981-dd06-4471-b4f8-41da954e844b"},"name":"6eaeef4c_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_e0709c6f_cdb4_4692_bc12_83a2ff4b0779"}],"description":"","message_list":[],"uuid":"f36c73be-8aaf-4dec-a2b2-992ef37e9ff0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f1efcf5c-c84d-4506-878b-c604b70d321d"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for creating an application","message_list":[],"uuid":"857b2be6-138a-40b0-b4fb-52a6fe64f777","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"88475102-80d0-4ef9-9b2a-933b74701f13","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"ff5d4418-faa5-432f-8012-a11255ab3a83"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3766a5e9-714b-4bb0-8fc7-4202e4c0287b"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2c8965d5-762e-4896-8e75-e880ab1ac7b6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3766a5e9-714b-4bb0-8fc7-4202e4c0287b"},"edge_type":"inherent","type":"","uuid":"7995a277-874b-4dc0-991f-5e75766745e8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2c8965d5-762e-4896-8e75-e880ab1ac7b6"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"ff5d4418-faa5-432f-8012-a11255ab3a83"},"edge_type":"inherent","type":"","uuid":"732792b1-fe43-472c-a74a-0dbd5426ef49","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"3766a5e9-714b-4bb0-8fc7-4202e4c0287b"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ff5d4418-faa5-432f-8012-a11255ab3a83","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"f36c73be-8aaf-4dec-a2b2-992ef37e9ff0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3766a5e9-714b-4bb0-8fc7-4202e4c0287b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2c8965d5-762e-4896-8e75-e880ab1ac7b6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"70da3e1d-521e-40fc-8be5-bdb29ff036f8","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"88475102-80d0-4ef9-9b2a-933b74701f13"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"1e259c76-c7d3-489a-b9fe-2aa2fb1d5d10","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"cdc6b9e9-9459-434b-ba63-677767fc6a78","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_e0709c6f_cdb4_4692_bc12_83a2ff4b0779","uuid":"a77272fb-4be7-497f-a7cf-ab93fa4e5cbb"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"a77272fb-4be7-497f-a7cf-ab93fa4e5cbb","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},"edge_type":"user_defined","type":"","uuid":"de2348c7-2318-4257-9e79-dfb66281958b","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},"edge_type":"user_defined","type":"","uuid":"51d6c43f-d565-4866-a416-61e095af11bd","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},"edge_type":"user_defined","type":"","uuid":"2488676d-2476-40f6-903e-baa4e0df0d58","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},"edge_type":"user_defined","type":"","uuid":"4ebf67a3-1920-4153-b24f-ae45d14eba9f","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},"edge_type":"user_defined","type":"","uuid":"9bd97b41-84b0-450e-9c25-bca582b0a992","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},"edge_type":"user_defined","type":"","uuid":"6a02b957-08e3-40e0-844d-c96e3100ef8a","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},"edge_type":"user_defined","type":"","uuid":"7f2718af-3bff-4d17-8935-31f1e67111fc","to_task_reference":{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e07e43b0_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_NAMES=\"@@{calm_array_name}@@\"\nWORKER_NAMES=\"@@{GCP_Centos_K8SW.name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4d5e4193-b8af-4432-974d-2040144412db","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=gce\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=gce\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: standard\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/gce-pd\nparameters:\n  type: pd-standard' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GCE VolumePlugin"}],"description":"","message_list":[],"uuid":"cbbf1fea-9935-4e29-b85c-459ea32c8d49","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f"},"name":"26c82c77_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"253ca981-dd06-4471-b4f8-41da954e844b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6bbde6e8_dag"}],"description":"","message_list":[],"uuid":"a66cb45b-f6e9-418e-b77e-d2b3bc259c51","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"253ca981-dd06-4471-b4f8-41da954e844b"},"name":"6eaeef4c_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_e0709c6f_cdb4_4692_bc12_83a2ff4b0779"}],"description":"","message_list":[],"uuid":"452926d6-3f38-41b0-a327-860fd051f1fa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"cdc6b9e9-9459-434b-ba63-677767fc6a78"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"30fe051d-0552-4c2d-9a1c-d862c05ce4f3","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"2f977000-8807-47b4-9d63-5850552df3e2","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"240ed08a-bd92-4cc1-a7ac-d0c07ab6673e"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c7f81f46-71f4-4099-9bea-f39199821b5f"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"bf6e4a87-8158-44b7-b871-d0f1941d752e"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"240ed08a-bd92-4cc1-a7ac-d0c07ab6673e"},"edge_type":"inherent","type":"","uuid":"da52fcb2-f55a-449c-b909-974b5ca3b779","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c7f81f46-71f4-4099-9bea-f39199821b5f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c7f81f46-71f4-4099-9bea-f39199821b5f"},"edge_type":"inherent","type":"","uuid":"4f8a30fd-335f-4038-9191-072bc2002b44","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"bf6e4a87-8158-44b7-b871-d0f1941d752e"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"240ed08a-bd92-4cc1-a7ac-d0c07ab6673e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c7f81f46-71f4-4099-9bea-f39199821b5f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bf6e4a87-8158-44b7-b871-d0f1941d752e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"452926d6-3f38-41b0-a327-860fd051f1fa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}],"description":"","message_list":[],"uuid":"a5a81a5f-c022-4962-bd19-ba2af91efae0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"2f977000-8807-47b4-9d63-5850552df3e2"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"3f719ae0-d77f-4d6e-8475-be0cdef3a4f2","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"15b32471-1a87-4708-b2d8-3de69dbe7bde","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2c4efa82-8ac2-4142-a196-b8b1f7d3cc9b"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"86edbfa3-ae3f-40e9-80d8-7f02a9778a9a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2c4efa82-8ac2-4142-a196-b8b1f7d3cc9b"},"edge_type":"inherent","type":"","uuid":"3690688e-4aab-4bb2-81af-7d487e297607","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"86edbfa3-ae3f-40e9-80d8-7f02a9778a9a"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2c4efa82-8ac2-4142-a196-b8b1f7d3cc9b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"86edbfa3-ae3f-40e9-80d8-7f02a9778a9a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_0ad182b1_b1e7_476c_894c_8121c7440601"}],"description":"","message_list":[],"uuid":"272d4b00-96ea-4497-8742-3349a9d9f730","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"15b32471-1a87-4708-b2d8-3de69dbe7bde"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for starting an application","message_list":[],"uuid":"3c7bb2bc-37e6-410c-b7b6-14a307ce3b09","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"053027e6-f650-4980-bd9e-8478d0224594","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"c5152b4e-ae17-4ae5-bae3-7cefc536a77b"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c5152b4e-ae17-4ae5-bae3-7cefc536a77b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"2e07e090-0692-4494-916b-7dfe366c25bd","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"053027e6-f650-4980-bd9e-8478d0224594"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for restarting an application","message_list":[],"uuid":"1382fa68-1fa8-4207-8bdd-523d50e05def","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"01282f03-e7e3-4bcf-a9ec-6c3a89d0ae6b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"19d1222a-cfd2-4fa3-8512-cf2369c0f554"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"19d1222a-cfd2-4fa3-8512-cf2369c0f554","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"0ed39e45-7dba-49ab-bd4e-526fd1aec4db","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"01282f03-e7e3-4bcf-a9ec-6c3a89d0ae6b"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}},{"description":"System action for stopping an application","message_list":[],"uuid":"6b2bb807-526c-40b1-9539-8459f12e6d2b","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"d5d2f0d6-02c0-4c72-b83d-108156d8f20b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"6cbd9653-78c5-4fc6-9671-5eb7cc7ea993"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6cbd9653-78c5-4fc6-9671-5eb7cc7ea993","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"7307fe80-3dab-4b76-9601-578f1089421b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_0ad182b1_b1e7_476c_894c_8121c7440601","uuid":"d5d2f0d6-02c0-4c72-b83d-108156d8f20b"},"name":"SYS_GEN__Runbook_Package_0ad182b1_b1e7_476c_894c_8121c7440601"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},"edge_type":"user_defined","type":"","uuid":"de2348c7-2318-4257-9e79-dfb66281958b","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},"edge_type":"user_defined","type":"","uuid":"51d6c43f-d565-4866-a416-61e095af11bd","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},"edge_type":"user_defined","type":"","uuid":"2488676d-2476-40f6-903e-baa4e0df0d58","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},"edge_type":"user_defined","type":"","uuid":"4ebf67a3-1920-4153-b24f-ae45d14eba9f","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},"edge_type":"user_defined","type":"","uuid":"9bd97b41-84b0-450e-9c25-bca582b0a992","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},"edge_type":"user_defined","type":"","uuid":"6a02b957-08e3-40e0-844d-c96e3100ef8a","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},"edge_type":"user_defined","type":"","uuid":"7f2718af-3bff-4d17-8935-31f1e67111fc","to_task_reference":{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e07e43b0_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_NAMES=\"@@{calm_array_name}@@\"\nWORKER_NAMES=\"@@{GCP_Centos_K8SW.name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4d5e4193-b8af-4432-974d-2040144412db","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=gce\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=gce\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: standard\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/gce-pd\nparameters:\n  type: pd-standard' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GCE VolumePlugin"}],"description":"","message_list":[],"uuid":"cbbf1fea-9935-4e29-b85c-459ea32c8d49","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f"},"name":"26c82c77_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","description":"","type":"DAG","uuid":"253ca981-dd06-4471-b4f8-41da954e844b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6bbde6e8_dag"}],"description":"","message_list":[],"uuid":"a66cb45b-f6e9-418e-b77e-d2b3bc259c51","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"253ca981-dd06-4471-b4f8-41da954e844b"},"name":"6eaeef4c_runbook"}},"variable_list":[],"name":"GCP_Centos_K8SM_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"dd477cc7-3c9f-46b7-a75d-714f021ad9f4","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"9b1eef12-42c1-4921-befc-256ddbd8b2bd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_cc8cb4d7_be25_43ce_9544_26224fb1ca0f","uuid":"2ffae1e3-6ad7-4816-800c-37f265145a13"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"2ffae1e3-6ad7-4816-800c-37f265145a13","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"f1ae356f-3b74-455a-9504-e48987874024","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},"edge_type":"user_defined","type":"","uuid":"360d0984-ea28-4735-9844-52198ccbc247","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},"edge_type":"user_defined","type":"","uuid":"39614adb-74d1-4814-a16d-69dcceba6c1c","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"709f9264_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"df9ffec2-2e11-4746-961e-604c7908296f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{GCP_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"153e579b-90f5-49bb-94a0-83aa9a483b6e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"f1ae356f-3b74-455a-9504-e48987874024"},"name":"927472a7_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"4875c892-ff03-473e-88ca-420727baa08e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"fef85962_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nNODE_NAME=${HOSTNAME}\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '${NODE_NAME}' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '${NODE_NAME}'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"c09a43b0-7ce0-4ed6-b890-e82dd93fc905","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"4875c892-ff03-473e-88ca-420727baa08e"},"name":"435393f9_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_cc8cb4d7_be25_43ce_9544_26224fb1ca0f"}],"description":"","message_list":[],"uuid":"81e51469-7eba-4b3d-bfe7-481431984765","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"9b1eef12-42c1-4921-befc-256ddbd8b2bd"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for creating an application","message_list":[],"uuid":"56b78ced-8bf5-4358-8a06-b4300babf06b","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"61494e1b-ea65-403a-9f22-897ddd5ecf77","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"f5a474d3-f687-4323-bd8d-fc99d94c66b0"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"54eba012-02f1-4742-8d5c-150b98d469a8"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"cc6c91a4-2504-42bd-b491-0e0abc32db08"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"54eba012-02f1-4742-8d5c-150b98d469a8"},"edge_type":"inherent","type":"","uuid":"4903702e-1a81-4192-9610-a46c3eca0bf9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"cc6c91a4-2504-42bd-b491-0e0abc32db08"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"f5a474d3-f687-4323-bd8d-fc99d94c66b0"},"edge_type":"inherent","type":"","uuid":"028c59e4-06ae-4bd7-9ea7-9b506fa0fa3b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"54eba012-02f1-4742-8d5c-150b98d469a8"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f5a474d3-f687-4323-bd8d-fc99d94c66b0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"81e51469-7eba-4b3d-bfe7-481431984765"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"54eba012-02f1-4742-8d5c-150b98d469a8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"cc6c91a4-2504-42bd-b491-0e0abc32db08","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"5c3fc3f5-22cc-4f34-b754-808916a3265a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"61494e1b-ea65-403a-9f22-897ddd5ecf77"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"767fb220-6d2b-404f-928f-d9058006b40a","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"7790cf20-b9c6-4b59-a845-6e774c062f4b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_cc8cb4d7_be25_43ce_9544_26224fb1ca0f","uuid":"5631b41a-69a5-4b09-b1c2-50acbf103771"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"5631b41a-69a5-4b09-b1c2-50acbf103771","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"f1ae356f-3b74-455a-9504-e48987874024","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},"edge_type":"user_defined","type":"","uuid":"360d0984-ea28-4735-9844-52198ccbc247","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},"edge_type":"user_defined","type":"","uuid":"39614adb-74d1-4814-a16d-69dcceba6c1c","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"709f9264_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"df9ffec2-2e11-4746-961e-604c7908296f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{GCP_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"153e579b-90f5-49bb-94a0-83aa9a483b6e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"f1ae356f-3b74-455a-9504-e48987874024"},"name":"927472a7_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"4875c892-ff03-473e-88ca-420727baa08e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"fef85962_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nNODE_NAME=${HOSTNAME}\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '${NODE_NAME}' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '${NODE_NAME}'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"c09a43b0-7ce0-4ed6-b890-e82dd93fc905","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"4875c892-ff03-473e-88ca-420727baa08e"},"name":"435393f9_runbook"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_cc8cb4d7_be25_43ce_9544_26224fb1ca0f"}],"description":"","message_list":[],"uuid":"f1cb0f30-2826-4659-82b8-7bd85ecea7f3","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"7790cf20-b9c6-4b59-a845-6e774c062f4b"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"a5fc9feb-f8d9-41d9-9e8f-b7e10e122c4b","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"f25b57e7-fa4f-4734-accd-0348a40d4d34","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5934a277-352e-4892-8ce2-498aef8247e3"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d9a8e899-3e65-4b8c-9492-9ebebff948d4"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"594f78c3-ae78-43a5-a387-7637cc0b221a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5934a277-352e-4892-8ce2-498aef8247e3"},"edge_type":"inherent","type":"","uuid":"8ed8f730-6e73-4f27-8ee9-a5d8c4db8a3e","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d9a8e899-3e65-4b8c-9492-9ebebff948d4"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d9a8e899-3e65-4b8c-9492-9ebebff948d4"},"edge_type":"inherent","type":"","uuid":"255a59ae-2123-4607-afc4-f447cdbd23c8","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"594f78c3-ae78-43a5-a387-7637cc0b221a"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5934a277-352e-4892-8ce2-498aef8247e3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d9a8e899-3e65-4b8c-9492-9ebebff948d4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"594f78c3-ae78-43a5-a387-7637cc0b221a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"f1cb0f30-2826-4659-82b8-7bd85ecea7f3"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}],"description":"","message_list":[],"uuid":"00118d2d-1ed1-45d4-a109-07c7921934c5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"f25b57e7-fa4f-4734-accd-0348a40d4d34"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"dbabd04d-d03d-4199-8090-9ea7bcee85c6","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"312177a8-f892-4af4-a799-9e685f6ade0a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fc68c17c-f06a-4ca6-9f6d-8248de2c29aa"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"8d129186-ef89-4ae8-853d-28f88627fb02"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fc68c17c-f06a-4ca6-9f6d-8248de2c29aa"},"edge_type":"inherent","type":"","uuid":"b365c80e-1ee6-4c6b-8dca-6b7b714366d4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"8d129186-ef89-4ae8-853d-28f88627fb02"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fc68c17c-f06a-4ca6-9f6d-8248de2c29aa","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"8d129186-ef89-4ae8-853d-28f88627fb02","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}],"description":"","message_list":[],"uuid":"72776f08-a991-4721-8a78-4e23108de724","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"312177a8-f892-4af4-a799-9e685f6ade0a"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for starting an application","message_list":[],"uuid":"22b6037a-577e-41ba-8ab4-1d6099cd2fe8","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"23fc9135-741f-44e1-b9eb-0c08f0201b6b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fad6acc4-3c63-4c97-a655-3b4224533b18"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fad6acc4-3c63-4c97-a655-3b4224533b18","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"5223d5ea-388c-4161-9e67-5b2d6a09e0c1","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"23fc9135-741f-44e1-b9eb-0c08f0201b6b"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for restarting an application","message_list":[],"uuid":"e2c3368d-750b-41af-9404-6de8c204abae","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"7fb89a6a-fa17-414a-9baf-38ad21069f11","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"d6ac6afb-4f14-468c-abfc-3cc379b5faa7"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"d6ac6afb-4f14-468c-abfc-3cc379b5faa7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"c099035b-265d-40a3-afce-92301e6cfbe0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"7fb89a6a-fa17-414a-9baf-38ad21069f11"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}},{"description":"System action for stopping an application","message_list":[],"uuid":"9c988c15-74da-41f2-bb1f-16c363dc3588","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"09c75da0-cb32-419b-9c12-2c497ce50e0e","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"69ab9938-5b9d-4993-80fc-fd7c3eb279ae"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"69ab9938-5b9d-4993-80fc-fd7c3eb279ae","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"ae5325f7-faa4-4558-8ff8-2f1a475bc908","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a","uuid":"09c75da0-cb32-419b-9c12-2c497ce50e0e"},"name":"SYS_GEN__Runbook_Package_5c74eb52_ea4c_4c67_bc85_5bcbff0fc85a"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"f1ae356f-3b74-455a-9504-e48987874024","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},"edge_type":"user_defined","type":"","uuid":"360d0984-ea28-4735-9844-52198ccbc247","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},"edge_type":"user_defined","type":"","uuid":"39614adb-74d1-4814-a16d-69dcceba6c1c","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"709f9264_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"df9ffec2-2e11-4746-961e-604c7908296f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{GCP_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"153e579b-90f5-49bb-94a0-83aa9a483b6e","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"f1ae356f-3b74-455a-9504-e48987874024"},"name":"927472a7_runbook"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","description":"","type":"DAG","uuid":"4875c892-ff03-473e-88ca-420727baa08e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"fef85962_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nNODE_NAME=${HOSTNAME}\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '${NODE_NAME}' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '${NODE_NAME}'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"c09a43b0-7ce0-4ed6-b890-e82dd93fc905","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"4875c892-ff03-473e-88ca-420727baa08e"},"name":"435393f9_runbook"}},"variable_list":[],"name":"GCP_Centos_K8SW_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"99ed533e-c3ba-482c-963a-d30cbdd29e82","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"78ce2f61-f8b6-4024-9293-51b2c94d7f12","child_tasks_local_reference_list":[{"kind":"app_task","name":"Image Fetch task for VM","uuid":"603d318b-89fd-4b79-8c08-5c87123b4634"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"SUBSTRATE_IMAGE_FETCH","uuid":"603d318b-89fd-4b79-8c08-5c87123b4634","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"","name":"CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"http:\/\/download.nutanix.com\/calm\/CentOS-7-x86_64-1810.qcow2","version":{"product_version":"","type":"","product_name":""},"architecture":"X86_64","type":""},"description":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Image Fetch task for VM"}],"description":"","message_list":[],"uuid":"a5ba11b8-3243-42d3-ad3a-c8910474c25a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"78ce2f61-f8b6-4024-9293-51b2c94d7f12"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}},{"description":"System action for creating an application","message_list":[],"uuid":"a213b87e-2e4d-4bfa-933b-7a3dccc44f4a","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"defa5eea-0da2-424b-ba38-bf5bf410bea1","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"a2305e65-f5c1-4007-8d1c-fc98c329461c"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"},{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"a2305e65-f5c1-4007-8d1c-fc98c329461c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"a5ba11b8-3243-42d3-ad3a-c8910474c25a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}],"description":"","message_list":[],"uuid":"5163a591-2153-4ba2-84a4-5b318effecb7","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"defa5eea-0da2-424b-ba38-bf5bf410bea1"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}},{"description":"System action for starting an application","message_list":[],"uuid":"dd186c62-e662-40cc-bd34-f965cac6a4e7","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"2f96f03e-2e64-44d4-ae41-fb5ba69bcaff","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}],"description":"","message_list":[],"uuid":"d0f9af76-3d3f-49c9-b0b2-7369a99b57f5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"2f96f03e-2e64-44d4-ae41-fb5ba69bcaff"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}},{"description":"System action for restarting an application","message_list":[],"uuid":"70692083-345c-4290-a27c-7499cd5e2320","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"bb459118-f1e0-4cd2-851f-8501828d7d8f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}],"description":"","message_list":[],"uuid":"6e214ec0-9fe1-429c-b295-49f0ce7bf0e0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"bb459118-f1e0-4cd2-851f-8501828d7d8f"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}},{"description":"System action for stopping an application","message_list":[],"uuid":"55b1d139-45db-4012-94b7-578847c10191","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"b769fd66-557c-49cd-8900-7fd70138abad","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}],"description":"","message_list":[],"uuid":"9422c256-bf96-4cca-a3f6-b6879c195010","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"b769fd66-557c-49cd-8900-7fd70138abad"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"61550589-8101-4fc5-8f5f-90518ccbeb94","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"5159c834-3c9a-416d-a72d-c47013806ed2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}],"description":"","message_list":[],"uuid":"0829384e-25e0-4835-a54b-0a7e185a1134","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"5159c834-3c9a-416d-a72d-c47013806ed2"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"60e0063d-b087-47af-9c43-422ce377c146","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"retries":"0","description":"","type":"DAG","uuid":"5e9f227d-f7ee-43c6-bdef-9b4225e81ded","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}],"description":"","message_list":[],"uuid":"c91f8514-efc3-4b1e-915c-7412a1798dca","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277","uuid":"5e9f227d-f7ee-43c6-bdef-9b4225e81ded"},"name":"SYS_GEN__Runbook_Package_691d60b5_9272_4cb0_a4b4_4e8dc6f75277"}}],"message_list":[],"service_local_reference_list":[],"uuid":"a331e198-bcde-4788-949d-922aed9f7441","state":"ACTIVE","version":"","editables":{},"type":"SUBSTRATE_IMAGE","options":{"type":"","name":"CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"http:\/\/download.nutanix.com\/calm\/CentOS-7-x86_64-1810.qcow2","version":{"product_version":"","type":"","product_name":""},"architecture":"X86_64","type":""},"description":""},"variable_list":[],"name":"AHV_CENTOS_76"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"1a14ebd6-d65b-4996-9365-04a30f86c46d","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"5d6118fd-85f2-4e66-8063-4c925498d8af","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_f84fe91c_292a_4bdc_af13_da34cbaf63e5","uuid":"eae0acdc-5016-48df-873a-4fdf7a291e20"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"eae0acdc-5016-48df-873a-4fdf7a291e20","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},"edge_type":"user_defined","type":"","uuid":"84c67d99-e587-4045-9b4a-8d1d64e11f2f","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},"edge_type":"user_defined","type":"","uuid":"abc2a0aa-e191-45b6-820e-e0f3538abf20","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},"edge_type":"user_defined","type":"","uuid":"1c202d0e-aed1-41fb-8042-f1b6ab9aff87","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},"edge_type":"user_defined","type":"","uuid":"22b08f81-dcc4-4593-83fc-817e1bbf4c9c","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},"edge_type":"user_defined","type":"","uuid":"09095f87-8136-4300-af6a-8359190e98c4","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},"edge_type":"user_defined","type":"","uuid":"220a64fd-6fba-4c2b-b0d8-46d76c661023","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e07e43b0_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubenetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo yum install -y python-setuptools --quiet\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone \n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_HOSTNAMES=\"@@{calm_array_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"ef36495e-5700-4513-9066-081aebac27e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"}],"description":"","message_list":[],"uuid":"05600fb8-31df-4c03-a41d-385bb91d9e81","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6"},"name":"26c82c77_runbook_cloned_1"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"0f9788a3-0a58-4392-8990-332824d523e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6bbde6e8_dag"}],"description":"","message_list":[],"uuid":"8be039d2-0415-4292-b979-38ad7e7db635","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"0f9788a3-0a58-4392-8990-332824d523e8"},"name":"6eaeef4c_runbook_cloned_1"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_f84fe91c_292a_4bdc_af13_da34cbaf63e5"}],"description":"","message_list":[],"uuid":"31e47eb8-7481-4032-8d7e-94e33553af45","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"5d6118fd-85f2-4e66-8063-4c925498d8af"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for creating an application","message_list":[],"uuid":"4b589fab-7f65-43b4-832d-98db2bf0002b","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"1d19c1c2-fdf8-4e2a-832f-479d7ab83f91","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"e288b0c1-19a3-4113-9975-e41e7ff48485"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"406839b7-407e-4a0f-8d3c-2757ffc80d51"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"90bb4b90-2079-4635-b263-9370eddca991"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"406839b7-407e-4a0f-8d3c-2757ffc80d51"},"edge_type":"inherent","type":"","uuid":"ef8c9c0e-eae6-42a1-a53f-4e6bc54aa974","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"90bb4b90-2079-4635-b263-9370eddca991"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"e288b0c1-19a3-4113-9975-e41e7ff48485"},"edge_type":"inherent","type":"","uuid":"dafc5637-ab98-41bc-bc89-22f1b18ad906","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"406839b7-407e-4a0f-8d3c-2757ffc80d51"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e288b0c1-19a3-4113-9975-e41e7ff48485","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"31e47eb8-7481-4032-8d7e-94e33553af45"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"406839b7-407e-4a0f-8d3c-2757ffc80d51","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"90bb4b90-2079-4635-b263-9370eddca991","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"951fc474-f997-48f8-888f-42b276e5c7f0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"1d19c1c2-fdf8-4e2a-832f-479d7ab83f91"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"876cbf6f-883c-48d7-b8c2-d61fb0700b7c","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"98aace67-0512-4ed6-8b07-2c296b4dc21a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_f84fe91c_292a_4bdc_af13_da34cbaf63e5","uuid":"2ae5dc7f-54fa-4827-bc9f-4f8d9d030acf"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"2ae5dc7f-54fa-4827-bc9f-4f8d9d030acf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},"edge_type":"user_defined","type":"","uuid":"84c67d99-e587-4045-9b4a-8d1d64e11f2f","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},"edge_type":"user_defined","type":"","uuid":"abc2a0aa-e191-45b6-820e-e0f3538abf20","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},"edge_type":"user_defined","type":"","uuid":"1c202d0e-aed1-41fb-8042-f1b6ab9aff87","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},"edge_type":"user_defined","type":"","uuid":"22b08f81-dcc4-4593-83fc-817e1bbf4c9c","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},"edge_type":"user_defined","type":"","uuid":"09095f87-8136-4300-af6a-8359190e98c4","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},"edge_type":"user_defined","type":"","uuid":"220a64fd-6fba-4c2b-b0d8-46d76c661023","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e07e43b0_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubenetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo yum install -y python-setuptools --quiet\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone \n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_HOSTNAMES=\"@@{calm_array_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"ef36495e-5700-4513-9066-081aebac27e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"}],"description":"","message_list":[],"uuid":"05600fb8-31df-4c03-a41d-385bb91d9e81","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6"},"name":"26c82c77_runbook_cloned_1"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"0f9788a3-0a58-4392-8990-332824d523e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6bbde6e8_dag"}],"description":"","message_list":[],"uuid":"8be039d2-0415-4292-b979-38ad7e7db635","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"0f9788a3-0a58-4392-8990-332824d523e8"},"name":"6eaeef4c_runbook_cloned_1"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_f84fe91c_292a_4bdc_af13_da34cbaf63e5"}],"description":"","message_list":[],"uuid":"f7ba4bad-571a-44a4-b26d-442a57678baa","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"98aace67-0512-4ed6-8b07-2c296b4dc21a"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"1228bf46-51e8-416f-bdd0-05cf2e708563","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"5efd8113-0933-43f0-9c76-a713efd2114d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"9c4acc08-1e25-400f-915f-f0ef1f5b6c40"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"ac629c27-ba75-4eeb-bb85-7762081637bd"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"16364b32-fb97-4a3a-82f9-ae964ca22faf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"9c4acc08-1e25-400f-915f-f0ef1f5b6c40"},"edge_type":"inherent","type":"","uuid":"79631bd2-09bf-4803-8fbd-a00513065a3a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"ac629c27-ba75-4eeb-bb85-7762081637bd"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"ac629c27-ba75-4eeb-bb85-7762081637bd"},"edge_type":"inherent","type":"","uuid":"b00c01c9-ce82-415a-a141-02e85b9da205","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"16364b32-fb97-4a3a-82f9-ae964ca22faf"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9c4acc08-1e25-400f-915f-f0ef1f5b6c40","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"ac629c27-ba75-4eeb-bb85-7762081637bd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"16364b32-fb97-4a3a-82f9-ae964ca22faf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"f7ba4bad-571a-44a4-b26d-442a57678baa"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}],"description":"","message_list":[],"uuid":"62aee331-27db-4b9a-a511-7a3000382f90","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"5efd8113-0933-43f0-9c76-a713efd2114d"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"39f35c48-5ed7-4f79-b92e-a8b793e32d53","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"15cb1b84-c548-40ac-a618-659134e682cd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"30272229-4bd2-4221-aa13-dcb85a5a53a3"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"44ef0815-1245-454d-badd-5af79ba168e3"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"30272229-4bd2-4221-aa13-dcb85a5a53a3"},"edge_type":"inherent","type":"","uuid":"84afc4c0-3e68-400f-8a96-caa2e3b56d0b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"44ef0815-1245-454d-badd-5af79ba168e3"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"30272229-4bd2-4221-aa13-dcb85a5a53a3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"44ef0815-1245-454d-badd-5af79ba168e3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_8f379386_82c8_4851_84aa_e97b83c8b8a7"}],"description":"","message_list":[],"uuid":"b4be8aa4-66d0-4b6e-9479-84d8f9227c76","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"15cb1b84-c548-40ac-a618-659134e682cd"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for starting an application","message_list":[],"uuid":"7785edbb-4868-40f3-b240-6d2a5182eca8","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"2681fb87-ab70-46b6-8531-87c5704c6134","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"8cf74b63-4d20-4a6e-91f6-5723cb77a34e"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"8cf74b63-4d20-4a6e-91f6-5723cb77a34e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"5396007c-0dc0-48be-8609-7f3e62f5c80d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"2681fb87-ab70-46b6-8531-87c5704c6134"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for restarting an application","message_list":[],"uuid":"ebb11715-3f4d-41a2-ab42-cdb28476091a","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"ccab74f8-de50-455c-bd50-1ab05ea4c6df","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"2aaef543-01de-4e62-b92b-f3199eb76c8a"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2aaef543-01de-4e62-b92b-f3199eb76c8a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"8b31c02a-5661-46e9-8185-678e7451e596","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"ccab74f8-de50-455c-bd50-1ab05ea4c6df"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}},{"description":"System action for stopping an application","message_list":[],"uuid":"49f1d215-1f03-458f-8bcc-e84654c82b17","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"15829c6d-7f8e-44fd-97a8-e7e6ac659db4","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"15af162c-c826-4f48-98bd-80df0b51ec0e"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"15af162c-c826-4f48-98bd-80df0b51ec0e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"48a12052-5f63-4e38-bdb3-30ff266f387b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7","uuid":"15829c6d-7f8e-44fd-97a8-e7e6ac659db4"},"name":"SYS_GEN__Runbook_Package_8f379386_82c8_4851_84aa_e97b83c8b8a7"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},"edge_type":"user_defined","type":"","uuid":"84c67d99-e587-4045-9b4a-8d1d64e11f2f","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},"edge_type":"user_defined","type":"","uuid":"abc2a0aa-e191-45b6-820e-e0f3538abf20","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},"edge_type":"user_defined","type":"","uuid":"1c202d0e-aed1-41fb-8042-f1b6ab9aff87","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},"edge_type":"user_defined","type":"","uuid":"22b08f81-dcc4-4593-83fc-817e1bbf4c9c","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},"edge_type":"user_defined","type":"","uuid":"09095f87-8136-4300-af6a-8359190e98c4","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},"edge_type":"user_defined","type":"","uuid":"220a64fd-6fba-4c2b-b0d8-46d76c661023","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"e07e43b0_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubenetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo yum install -y python-setuptools --quiet\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone \n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_HOSTNAMES=\"@@{calm_array_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"ef36495e-5700-4513-9066-081aebac27e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"}],"description":"","message_list":[],"uuid":"05600fb8-31df-4c03-a41d-385bb91d9e81","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6"},"name":"26c82c77_runbook_cloned_1"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","description":"","type":"DAG","uuid":"0f9788a3-0a58-4392-8990-332824d523e8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6bbde6e8_dag"}],"description":"","message_list":[],"uuid":"8be039d2-0415-4292-b979-38ad7e7db635","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"0f9788a3-0a58-4392-8990-332824d523e8"},"name":"6eaeef4c_runbook_cloned_1"}},"variable_list":[],"name":"Azure_Centos_K8SM_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"788e4ad3-31bb-4d7a-9fd2-8e6a038192f3","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"27fa2ebb-b844-4358-8884-7344f5b59f93","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_2b44dcd2_47d2_4633_85af_90542ed565d9","uuid":"b2c10fb9-9505-40bd-8e4f-ee1851c7b7bf"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"b2c10fb9-9505-40bd-8e4f-ee1851c7b7bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},"edge_type":"user_defined","type":"","uuid":"ea04f9e9-ecbf-4446-8a9d-5bb28828dc88","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},"edge_type":"user_defined","type":"","uuid":"1013091b-e1f7-4c0d-a2be-cee94d94fb88","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"709f9264_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{Azure_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{Azure_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"f94620bc-4949-44ee-bc7f-608e01c0d345","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c"},"name":"927472a7_runbook_cloned_1"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"fef85962_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"4c2ac84a-98fa-4ba9-b21a-9f77ba852f01","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465"},"name":"435393f9_runbook_cloned_1"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_2b44dcd2_47d2_4633_85af_90542ed565d9"}],"description":"","message_list":[],"uuid":"8d351e40-54c1-4479-8c08-cf976db6edf0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"27fa2ebb-b844-4358-8884-7344f5b59f93"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for creating an application","message_list":[],"uuid":"e33d72cb-466f-4918-87fb-b0d0cb266d7c","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"eb04fb07-b9bd-4d30-a09b-be4e4bac5ddd","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"bd6ceb40-ba37-485d-9372-3a00e643fe01"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5e1c92fe-e177-492d-88f0-88e7036899dc"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7ef1cbf3-b522-4b37-9907-0c7e6d19ad61"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5e1c92fe-e177-492d-88f0-88e7036899dc"},"edge_type":"inherent","type":"","uuid":"87985b41-da48-4e80-8b49-719280e85ef3","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"7ef1cbf3-b522-4b37-9907-0c7e6d19ad61"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"bd6ceb40-ba37-485d-9372-3a00e643fe01"},"edge_type":"inherent","type":"","uuid":"f15d18b6-f901-4c83-bc7d-5c6643952083","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5e1c92fe-e177-492d-88f0-88e7036899dc"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bd6ceb40-ba37-485d-9372-3a00e643fe01","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"8d351e40-54c1-4479-8c08-cf976db6edf0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5e1c92fe-e177-492d-88f0-88e7036899dc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7ef1cbf3-b522-4b37-9907-0c7e6d19ad61","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"505e032a-6ea2-4622-806e-83e5da3ceb49","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"eb04fb07-b9bd-4d30-a09b-be4e4bac5ddd"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"b3c4540e-d675-46bd-8931-55af61c48808","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"6e34b673-d5d4-4a60-a047-72517041e2da","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_2b44dcd2_47d2_4633_85af_90542ed565d9","uuid":"1d26f7e3-2e54-424a-a852-f173ceb7b05c"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"1d26f7e3-2e54-424a-a852-f173ceb7b05c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},"edge_type":"user_defined","type":"","uuid":"ea04f9e9-ecbf-4446-8a9d-5bb28828dc88","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},"edge_type":"user_defined","type":"","uuid":"1013091b-e1f7-4c0d-a2be-cee94d94fb88","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"709f9264_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{Azure_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{Azure_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"f94620bc-4949-44ee-bc7f-608e01c0d345","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c"},"name":"927472a7_runbook_cloned_1"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"fef85962_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"4c2ac84a-98fa-4ba9-b21a-9f77ba852f01","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465"},"name":"435393f9_runbook_cloned_1"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_2b44dcd2_47d2_4633_85af_90542ed565d9"}],"description":"","message_list":[],"uuid":"c39869d5-5a61-4b33-9999-17638336af9d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"6e34b673-d5d4-4a60-a047-72517041e2da"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"f5c3fff6-ce98-4931-a9ec-a699de8ecc0c","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"71b12e9e-0613-4471-ae8b-8bc4afe848b3","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"2ada82bc-2507-4c59-825f-1a9d1186f121"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"c6c655ab-9835-4663-8d89-8e68532ec534"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"6930023c-810b-411d-89ff-bad3a4c4eab6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"2ada82bc-2507-4c59-825f-1a9d1186f121"},"edge_type":"inherent","type":"","uuid":"6f0f7d5c-abad-4b1a-9962-316720a41795","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"c6c655ab-9835-4663-8d89-8e68532ec534"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"c6c655ab-9835-4663-8d89-8e68532ec534"},"edge_type":"inherent","type":"","uuid":"bb498dd6-5925-4129-8798-4e8eaf36a038","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"6930023c-810b-411d-89ff-bad3a4c4eab6"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"2ada82bc-2507-4c59-825f-1a9d1186f121","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c6c655ab-9835-4663-8d89-8e68532ec534","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"6930023c-810b-411d-89ff-bad3a4c4eab6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"c39869d5-5a61-4b33-9999-17638336af9d"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}],"description":"","message_list":[],"uuid":"2f5cf2a1-7e50-4f4f-b13c-517b9d296ee3","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"71b12e9e-0613-4471-ae8b-8bc4afe848b3"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"1131c10f-d8e6-4c6b-9557-464781fd2b10","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"2473f603-0948-4807-89a9-bd0fcb00c8bb","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fe1e6d63-c194-434c-b89c-3e3f8f22580c"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"42bc209d-620b-453f-81b1-4141ddba23c0"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"fe1e6d63-c194-434c-b89c-3e3f8f22580c"},"edge_type":"inherent","type":"","uuid":"0297cae6-e4a5-4ab4-b1c7-08341d3a32e5","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"42bc209d-620b-453f-81b1-4141ddba23c0"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fe1e6d63-c194-434c-b89c-3e3f8f22580c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"42bc209d-620b-453f-81b1-4141ddba23c0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_206d70f4_364d_415d_bb4a_8739e54e57f5"}],"description":"","message_list":[],"uuid":"f9f4082c-9723-4fcf-b5b8-224cd135ade7","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"2473f603-0948-4807-89a9-bd0fcb00c8bb"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for starting an application","message_list":[],"uuid":"e2c0097f-f472-4518-a872-7973cfd5d4dd","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"366d5a09-a1b2-4d43-b3f1-44ae2549692d","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e6532575-e855-42de-9c13-a7d1f0d07426"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e6532575-e855-42de-9c13-a7d1f0d07426","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"1813fbc2-e87a-400c-af07-c9b23925c654","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"366d5a09-a1b2-4d43-b3f1-44ae2549692d"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for restarting an application","message_list":[],"uuid":"63e792aa-8344-4b3e-b5e9-532c382035e4","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"5b5598ee-0b4c-4666-a43a-9cfe2f52726a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"162412c6-54d0-49b1-804e-786143dec6cf"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"162412c6-54d0-49b1-804e-786143dec6cf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"108d13ff-d9fe-4d07-aece-dec0eccd1eba","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"5b5598ee-0b4c-4666-a43a-9cfe2f52726a"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}},{"description":"System action for stopping an application","message_list":[],"uuid":"a61d4bc3-e6a9-4122-92a5-212734d12c4c","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"2119c8e8-3ce6-41b4-ab7f-7cf8fe067b85","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"3f8bff30-89a7-4a19-a899-a9dbee096532"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3f8bff30-89a7-4a19-a899-a9dbee096532","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"fbb4a0ca-b0c4-4fa2-97de-cd4fa6ad3738","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_206d70f4_364d_415d_bb4a_8739e54e57f5","uuid":"2119c8e8-3ce6-41b4-ab7f-7cf8fe067b85"},"name":"SYS_GEN__Runbook_Package_206d70f4_364d_415d_bb4a_8739e54e57f5"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},"edge_type":"user_defined","type":"","uuid":"ea04f9e9-ecbf-4446-8a9d-5bb28828dc88","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},"edge_type":"user_defined","type":"","uuid":"1013091b-e1f7-4c0d-a2be-cee94d94fb88","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"709f9264_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{Azure_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{Azure_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"f94620bc-4949-44ee-bc7f-608e01c0d345","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c"},"name":"927472a7_runbook_cloned_1"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","description":"","type":"DAG","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"fef85962_dag"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"4c2ac84a-98fa-4ba9-b21a-9f77ba852f01","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465"},"name":"435393f9_runbook_cloned_1"}},"variable_list":[],"name":"Azure_Centos_K8SW_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"635d82f8-8090-4652-a7ec-c24cd1754413","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"e726af10-a91e-433c-aa41-fe5af7a46dcf","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_34b0ba77_4699_45b0_81d6_c9d68247a932","uuid":"af8f69b2-8971-4fee-ad39-3b91d95938b9"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"af8f69b2-8971-4fee-ad39-3b91d95938b9","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},"edge_type":"user_defined","type":"","uuid":"b33230cb-473c-4359-8c19-f3169bd93b0c","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},"edge_type":"user_defined","type":"","uuid":"664f2f03-c5c8-476a-9813-7c867f54f56b","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},"edge_type":"user_defined","type":"","uuid":"a6a6464f-9bde-4736-b77a-935ab0188d37","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},"edge_type":"user_defined","type":"","uuid":"97a7b380-e840-4072-a4fb-5afcd7fb3dcf","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},"edge_type":"user_defined","type":"","uuid":"31f20fbf-0aa5-4f3a-b480-88fb48d2f10d","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},"edge_type":"user_defined","type":"","uuid":"6aa5d7f0-e9e7-42f6-a131-94dc90120fa5","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},"edge_type":"user_defined","type":"","uuid":"db45a437-f025-42d7-81ea-bb5c23a19f8f","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"dac441af_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"NVP Configuration"}],"description":"","message_list":[],"uuid":"ec76e5c3-3834-40e3-b20e-691aa2f24993","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag_cloned_1","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec"},"name":"8e760b73_runbook_cloned_0"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6324786a_dag_cloned_1"}],"description":"","message_list":[],"uuid":"b9d97fc5-1218-436b-a94b-8376330c44a0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag_cloned_1","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84"},"name":"6522ac7a_runbook_cloned_0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_34b0ba77_4699_45b0_81d6_c9d68247a932"}],"description":"","message_list":[],"uuid":"41c3bac1-15c0-401f-b638-3fecac38e8f6","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"e726af10-a91e-433c-aa41-fe5af7a46dcf"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for creating an application","message_list":[],"uuid":"ebcdb51a-4ffa-4b9c-ac8c-69b5cafe20b9","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"3418d32f-2981-464e-a8cb-743a017abda3","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"c1ea3526-49b7-4f42-b87f-d592437ee39b"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"731ee9f7-e24c-47cb-a4c0-ecd3fda536f3"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"590e3755-7bac-4977-9657-80b60889044f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"731ee9f7-e24c-47cb-a4c0-ecd3fda536f3"},"edge_type":"inherent","type":"","uuid":"f45bb36f-42c0-483c-b305-7ea885620564","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"590e3755-7bac-4977-9657-80b60889044f"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"c1ea3526-49b7-4f42-b87f-d592437ee39b"},"edge_type":"inherent","type":"","uuid":"22a33ec0-8e67-4d57-ab23-2ca5c6f6a11b","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"731ee9f7-e24c-47cb-a4c0-ecd3fda536f3"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c1ea3526-49b7-4f42-b87f-d592437ee39b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"41c3bac1-15c0-401f-b638-3fecac38e8f6"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"731ee9f7-e24c-47cb-a4c0-ecd3fda536f3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"a9639da1_runbook","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"590e3755-7bac-4977-9657-80b60889044f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"6d7bab26-4c6b-4ea0-98f2-437599e38f68","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"3418d32f-2981-464e-a8cb-743a017abda3"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"e8143fe9-dfdb-4d91-bbfc-56c38b0116b3","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"fa667825-01a4-4eeb-b756-12ee30e3f74f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_34b0ba77_4699_45b0_81d6_c9d68247a932","uuid":"22880129-28fe-49cb-8b92-e61639297328"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"22880129-28fe-49cb-8b92-e61639297328","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},"edge_type":"user_defined","type":"","uuid":"b33230cb-473c-4359-8c19-f3169bd93b0c","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},"edge_type":"user_defined","type":"","uuid":"664f2f03-c5c8-476a-9813-7c867f54f56b","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},"edge_type":"user_defined","type":"","uuid":"a6a6464f-9bde-4736-b77a-935ab0188d37","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},"edge_type":"user_defined","type":"","uuid":"97a7b380-e840-4072-a4fb-5afcd7fb3dcf","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},"edge_type":"user_defined","type":"","uuid":"31f20fbf-0aa5-4f3a-b480-88fb48d2f10d","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},"edge_type":"user_defined","type":"","uuid":"6aa5d7f0-e9e7-42f6-a131-94dc90120fa5","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},"edge_type":"user_defined","type":"","uuid":"db45a437-f025-42d7-81ea-bb5c23a19f8f","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"dac441af_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"NVP Configuration"}],"description":"","message_list":[],"uuid":"ec76e5c3-3834-40e3-b20e-691aa2f24993","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag_cloned_1","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec"},"name":"8e760b73_runbook_cloned_0"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6324786a_dag_cloned_1"}],"description":"","message_list":[],"uuid":"b9d97fc5-1218-436b-a94b-8376330c44a0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag_cloned_1","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84"},"name":"6522ac7a_runbook_cloned_0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_34b0ba77_4699_45b0_81d6_c9d68247a932"}],"description":"","message_list":[],"uuid":"8d014d77-dfb5-4a5c-bfe0-a08c2b4b49f5","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"fa667825-01a4-4eeb-b756-12ee30e3f74f"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"70ad898d-2358-4367-8318-e31d45e334fc","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"496db514-d5db-4313-9f57-191fd5b3a21f","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"fb64d13f-45ca-473f-889e-22aaac987ab7"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"9bc26b42-b58e-4239-bad8-f00524745d97"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"c735ceea-943e-415e-884b-e265f26f1818"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"fb64d13f-45ca-473f-889e-22aaac987ab7"},"edge_type":"inherent","type":"","uuid":"68d3fad0-baa0-4e2c-ba35-68c5c78eff5a","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"9bc26b42-b58e-4239-bad8-f00524745d97"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"9bc26b42-b58e-4239-bad8-f00524745d97"},"edge_type":"inherent","type":"","uuid":"252f301a-1bf3-48e2-b737-2d1f5bd3b32f","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"c735ceea-943e-415e-884b-e265f26f1818"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fb64d13f-45ca-473f-889e-22aaac987ab7","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"9bc26b42-b58e-4239-bad8-f00524745d97","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"8c4aa276_runbook","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"c735ceea-943e-415e-884b-e265f26f1818","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"8d014d77-dfb5-4a5c-bfe0-a08c2b4b49f5"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}],"description":"","message_list":[],"uuid":"e3eaf0f9-315e-4b2f-b963-9159164b7423","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"496db514-d5db-4313-9f57-191fd5b3a21f"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"c678ecb6-c668-4426-af0e-12f1af6c8012","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"1ec14d6c-9ca5-415b-9bc1-a1335ef841ce","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"bea1dc86-31a8-46bd-b6e2-082192fc6a01"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"42cf61de-7098-483f-a4f9-1e8d088ae1d2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"bea1dc86-31a8-46bd-b6e2-082192fc6a01"},"edge_type":"inherent","type":"","uuid":"7bcd393d-cc7a-44e4-a313-5debbd2ee087","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"42cf61de-7098-483f-a4f9-1e8d088ae1d2"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"bea1dc86-31a8-46bd-b6e2-082192fc6a01","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"4f8bfc41-ef59-4336-9d59-6bf216eff48e"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"42cf61de-7098-483f-a4f9-1e8d088ae1d2","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_78d59e2e_ea58_482a_a2b2_6f593da4049e"}],"description":"","message_list":[],"uuid":"0a0fb81a-1189-4950-8fe5-d437e749bc42","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"1ec14d6c-9ca5-415b-9bc1-a1335ef841ce"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for starting an application","message_list":[],"uuid":"86ed957e-f70f-482a-84da-f9e64590108d","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"abda35b8-7d6d-49a5-8fa5-877cbe5143a7","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"fd4ae73a-2b32-4b76-8170-c4cb731d0e71"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"fd4ae73a-2b32-4b76-8170-c4cb731d0e71","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"daee30ae_runbook","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"54be2285-f46d-43b0-991f-5b7397c42f9a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"abda35b8-7d6d-49a5-8fa5-877cbe5143a7"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for restarting an application","message_list":[],"uuid":"3a474c69-2966-48dc-8814-104a1856994a","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"c57ec3e4-6087-4248-87eb-22313795202b","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"34f39bce-d77d-434a-bc6d-13f863213738"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"34f39bce-d77d-434a-bc6d-13f863213738","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"d5c8316f_runbook","uuid":"40ee969f-f126-492c-b412-779a5be20bb4"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"419d8577-1230-4dbe-b793-1506c9fbb048","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"c57ec3e4-6087-4248-87eb-22313795202b"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}},{"description":"System action for stopping an application","message_list":[],"uuid":"00a69c0b-022c-4d0a-85bf-32414b057785","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"93f9fb10-1c97-4a67-b0a1-ab8d3a37168c","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255","uuid":"08fdd106-c415-43f7-a18b-ad02bf797893"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"08fdd106-c415-43f7-a18b-ad02bf797893","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"6407a345_runbook","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_cc7c6e36_2710_44cf_97bf_f5ef4cff2255"}],"description":"","message_list":[],"uuid":"fac86989-c9ed-4469-acc1-2684030e5267","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e","uuid":"93f9fb10-1c97-4a67-b0a1-ab8d3a37168c"},"name":"SYS_GEN__Runbook_Package_78d59e2e_ea58_482a_a2b2_6f593da4049e"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},"edge_type":"user_defined","type":"","uuid":"b33230cb-473c-4359-8c19-f3169bd93b0c","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},"edge_type":"user_defined","type":"","uuid":"664f2f03-c5c8-476a-9813-7c867f54f56b","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},"edge_type":"user_defined","type":"","uuid":"a6a6464f-9bde-4736-b77a-935ab0188d37","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},"edge_type":"user_defined","type":"","uuid":"97a7b380-e840-4072-a4fb-5afcd7fb3dcf","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},"edge_type":"user_defined","type":"","uuid":"31f20fbf-0aa5-4f3a-b480-88fb48d2f10d","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},"edge_type":"user_defined","type":"","uuid":"6aa5d7f0-e9e7-42f6-a131-94dc90120fa5","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},"edge_type":"user_defined","type":"","uuid":"db45a437-f025-42d7-81ea-bb5c23a19f8f","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"dac441af_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"ETCD Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Generate Certs"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Configure Services"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Add User Roles"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Network Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"DNS Configuration"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","description":"","type":"EXEC","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"NVP Configuration"}],"description":"","message_list":[],"uuid":"ec76e5c3-3834-40e3-b20e-691aa2f24993","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag_cloned_1","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec"},"name":"8e760b73_runbook_cloned_0"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","description":"","type":"DAG","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"6324786a_dag_cloned_1"}],"description":"","message_list":[],"uuid":"b9d97fc5-1218-436b-a94b-8376330c44a0","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag_cloned_1","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84"},"name":"6522ac7a_runbook_cloned_0"}},"variable_list":[],"name":"VMware_Centos_K8SM_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"394ed94d-0ce2-41c4-ba5d-1efc46e7632e","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"b3739b1c-a782-450d-867e-ff8f56dc9b89","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Install_Crb_ae111cbf_6e60_43a3_b024_508d8c5f4ca8","uuid":"4d6ad556-b174-40ff-95eb-b606926cf6ce"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_INSTALL","uuid":"4d6ad556-b174-40ff-95eb-b606926cf6ce","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},"edge_type":"user_defined","type":"","uuid":"eb4975a9-1417-4655-9682-e07eece42cc3","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},"edge_type":"user_defined","type":"","uuid":"446e72a6-a593-4d15-8747-09aa5e195b77","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"c1566b3d_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"08451110-787b-413e-a105-856c60cdacb6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{VMware_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{VMware_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"b6fc6d75-adf6-4259-a25f-01ad7be70f3a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag_cloned_1","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37"},"name":"9a6e189b_runbook_cloned_0"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"55b07167-8260-4b8c-bee1-75414427b28b"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"abd3357c_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"55b07167-8260-4b8c-bee1-75414427b28b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"eb5ca7b2-03bd-4e47-80f4-ed8d4e5680ea","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag_cloned_1","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35"},"name":"3cb17acf_runbook_cloned_0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Install_Crb_ae111cbf_6e60_43a3_b024_508d8c5f4ca8"}],"description":"","message_list":[],"uuid":"9f6f145b-471a-4ae3-8e50-5bcfdf945a37","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"b3739b1c-a782-450d-867e-ff8f56dc9b89"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for creating an application","message_list":[],"uuid":"699dc36b-83ab-4d51-985c-852788d908cb","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"dce97a0f-a52d-47b0-9e11-547c1d601e54","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"4d181713-26ab-421f-9d6f-3b515c32fa60"},{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"67c25a6e-077c-49d4-85e0-c4d57f32cd06"},{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5681508a-3f71-48cd-8e7e-ee8952d4a8bf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"67c25a6e-077c-49d4-85e0-c4d57f32cd06"},"edge_type":"inherent","type":"","uuid":"235382fc-0981-4068-a812-63138d3a27ef","to_task_reference":{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"5681508a-3f71-48cd-8e7e-ee8952d4a8bf"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"4d181713-26ab-421f-9d6f-3b515c32fa60"},"edge_type":"inherent","type":"","uuid":"05dfecda-cf8a-41ec-b7d5-2941f3243b37","to_task_reference":{"kind":"app_task","name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"67c25a6e-077c-49d4-85e0-c4d57f32cd06"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"4d181713-26ab-421f-9d6f-3b515c32fa60","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"9f6f145b-471a-4ae3-8e50-5bcfdf945a37"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"67c25a6e-077c-49d4-85e0-c4d57f32cd06","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"7c6e4932_runbook","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__create_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"5681508a-3f71-48cd-8e7e-ee8952d4a8bf","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"bda62b78-f370-4953-a747-c2178d535bac","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"dce97a0f-a52d-47b0-9e11-547c1d601e54"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for uninstalling an application","message_list":[],"uuid":"04542cec-efeb-400e-a275-e959cf2cb8ee","name":"action_uninstall","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"2f674806-f76a-49ed-aaae-8609a73cd620","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__Uninstall_Crb_ae111cbf_6e60_43a3_b024_508d8c5f4ca8","uuid":"3bcb74ee-fedb-4e5f-854a-5c316589dd38"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CUSTOM_PACKAGE_UNINSTALL","uuid":"3bcb74ee-fedb-4e5f-854a-5c316589dd38","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},"edge_type":"user_defined","type":"","uuid":"eb4975a9-1417-4655-9682-e07eece42cc3","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},"edge_type":"user_defined","type":"","uuid":"446e72a6-a593-4d15-8747-09aa5e195b77","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"c1566b3d_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"08451110-787b-413e-a105-856c60cdacb6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{VMware_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{VMware_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"b6fc6d75-adf6-4259-a25f-01ad7be70f3a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag_cloned_1","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37"},"name":"9a6e189b_runbook_cloned_0"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"55b07167-8260-4b8c-bee1-75414427b28b"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"abd3357c_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"55b07167-8260-4b8c-bee1-75414427b28b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"eb5ca7b2-03bd-4e47-80f4-ed8d4e5680ea","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag_cloned_1","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35"},"name":"3cb17acf_runbook_cloned_0"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Uninstall_Crb_ae111cbf_6e60_43a3_b024_508d8c5f4ca8"}],"description":"","message_list":[],"uuid":"b0df500a-199f-4881-aa43-1ef2a6fc7337","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"2f674806-f76a-49ed-aaae-8609a73cd620"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"ad4f422f-b875-424d-b934-a52e9ebec76d","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"9dec1fbf-6bd9-48c1-856e-39a0ac7343fc","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"3a3e770a-cf42-4521-9a76-4ef675c7bc66"},{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f755f6bc-1b2e-4f5e-82bb-9473469a8345"},{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"44437483-4023-455f-87a2-7fbadd81b4b4"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"3a3e770a-cf42-4521-9a76-4ef675c7bc66"},"edge_type":"inherent","type":"","uuid":"495fbbce-5820-4320-a837-bfb3d516bee4","to_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f755f6bc-1b2e-4f5e-82bb-9473469a8345"}},{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"f755f6bc-1b2e-4f5e-82bb-9473469a8345"},"edge_type":"inherent","type":"","uuid":"f1838afd-1777-45e1-bfe3-50625f7c8355","to_task_reference":{"kind":"app_task","name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"44437483-4023-455f-87a2-7fbadd81b4b4"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"3a3e770a-cf42-4521-9a76-4ef675c7bc66","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"f755f6bc-1b2e-4f5e-82bb-9473469a8345","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"1d794193_runbook","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"44437483-4023-455f-87a2-7fbadd81b4b4","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"b0df500a-199f-4881-aa43-1ef2a6fc7337"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__uninstall_CRb_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}],"description":"","message_list":[],"uuid":"a123ffda-5310-4a0d-894a-14e1fe0ed64b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"9dec1fbf-6bd9-48c1-856e-39a0ac7343fc"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"eac638fb-9bac-4d96-85fc-3bbfbb89267b","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"94a64ef5-cf40-49a8-920a-b2e33c79170a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b97830ea-0799-42d6-bb43-e10036eb4f97"},{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"f7871d60-1f90-48bb-b383-8da4c5b85914"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"b97830ea-0799-42d6-bb43-e10036eb4f97"},"edge_type":"inherent","type":"","uuid":"2064e034-99be-47c1-938c-051cb2c669d9","to_task_reference":{"kind":"app_task","name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"f7871d60-1f90-48bb-b383-8da4c5b85914"}}],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"b97830ea-0799-42d6-bb43-e10036eb4f97","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"985c5d43-6410-4268-a023-3e73726f156b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__soft_delete_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"},{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"SOFT_DELETE_ELEMENT","uuid":"f7871d60-1f90-48bb-b383-8da4c5b85914","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Package_Element_Delete_f749fc63_17aa_4814_a56b_c45ca8be030e"}],"description":"","message_list":[],"uuid":"fef9a718-235c-4650-8c25-d9014258a15c","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"94a64ef5-cf40-49a8-920a-b2e33c79170a"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for starting an application","message_list":[],"uuid":"31358fd0-1a7f-446d-afda-b78a345eea3d","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"169d7a92-0d23-4048-a2e7-c1ed3b029d94","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"368cd590-0561-4443-9eb0-b28b5f337097"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"368cd590-0561-4443-9eb0-b28b5f337097","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"884352cf_runbook","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__start_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"1159a9d4-7a99-491a-aad2-d6be296cf024","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"169d7a92-0d23-4048-a2e7-c1ed3b029d94"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for restarting an application","message_list":[],"uuid":"994d02a2-453e-420f-98dc-f96055795fb7","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"2c52d80c-431a-4515-a39a-1ba9612a9a33","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"e8b27bae-e91a-418c-a640-f0d51d2a14bc"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"e8b27bae-e91a-418c-a640-f0d51d2a14bc","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"3a6f587d_runbook","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__restart_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"e1d6bff5-e402-4f37-bbb4-cade8f3d936d","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"2c52d80c-431a-4515-a39a-1ba9612a9a33"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}},{"description":"System action for stopping an application","message_list":[],"uuid":"4da4a5e3-6867-4a88-9c19-c86439630593","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"f43bc923-a835-4a37-b0f4-b9f9404e634a","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962","uuid":"dbf42d07-377a-41ef-87f1-ce1335b50484"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"dbf42d07-377a-41ef-87f1-ce1335b50484","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"0cb172a7_runbook","uuid":"20af27bd-2440-4645-8551-6a7529d1f842"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__stop_CRb_Service_045659a2_932c_49c8_9269_3a911f955962"}],"description":"","message_list":[],"uuid":"72ade69d-c362-4fc1-b96b-1b2e358287ea","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_f749fc63_17aa_4814_a56b_c45ca8be030e","uuid":"f43bc923-a835-4a37-b0f4-b9f9404e634a"},"name":"SYS_GEN__Runbook_Package_f749fc63_17aa_4814_a56b_c45ca8be030e"}}],"message_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8","state":"ACTIVE","version":"","editables":{},"type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},"edge_type":"user_defined","type":"","uuid":"eb4975a9-1417-4655-9682-e07eece42cc3","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},"edge_type":"user_defined","type":"","uuid":"446e72a6-a593-4d15-8747-09aa5e195b77","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"c1566b3d_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"SET_VARIABLE","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Set Kubernetes Version"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"08451110-787b-413e-a105-856c60cdacb6","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{VMware_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Docker Kubelet Install"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{VMware_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"GetCerts"}],"description":"","message_list":[],"uuid":"b6fc6d75-adf6-4259-a25f-01ad7be70f3a","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag_cloned_1","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37"},"name":"9a6e189b_runbook_cloned_0"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","description":"","type":"DAG","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"55b07167-8260-4b8c-bee1-75414427b28b"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"abd3357c_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","description":"","type":"EXEC","uuid":"55b07167-8260-4b8c-bee1-75414427b28b","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Remove Node"}],"description":"","message_list":[],"uuid":"eb5ca7b2-03bd-4e47-80f4-ed8d4e5680ea","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag_cloned_1","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35"},"name":"3cb17acf_runbook_cloned_0"}},"variable_list":[],"name":"VMware_Centos_K8SW_Package"},{"description":"","action_list":[{"description":"System action for installing an application","message_list":[],"uuid":"f4cd3a33-bee6-4a9b-9093-90a8f92d718d","name":"action_install","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"d5c1a5fc-600e-49a6-8389-f4e98a25a625","child_tasks_local_reference_list":[{"kind":"app_task","name":"Image Fetch task for VM","uuid":"d2bf9d66-b996-43a6-b3ed-87faa418e1c1"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"},{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"SUBSTRATE_IMAGE_FETCH","uuid":"d2bf9d66-b996-43a6-b3ed-87faa418e1c1","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"type":"","name":"CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"http:\/\/filer.dev.eng.nutanix.com:8080\/GoldImages\/NuCalm\/Ova%20files\/CentOS-7-x86_64-1810.ova","version":{"product_version":"","type":"","product_name":""},"architecture":"X86_64","type":""},"description":""},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"Image Fetch task for VM"}],"description":"","message_list":[],"uuid":"b659189f-60b5-4f5b-9d16-284aac15dd12","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"d5c1a5fc-600e-49a6-8389-f4e98a25a625"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}},{"description":"System action for creating an application","message_list":[],"uuid":"7226fa9b-cdec-4910-96b4-7b618bc7c867","name":"action_create","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"9f37773a-3930-4e7b-b0f4-e661e8fb0534","child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"7c6e414a-cfbc-4cc6-90a5-0ff3f1f09e91"}],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"},{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"CALL_RUNBOOK","uuid":"7c6e414a-cfbc-4cc6-90a5-0ff3f1f09e91","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"inarg_list":[],"type":"CALL_RUNBOOK","runbook_reference":{"kind":"app_runbook","name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"b659189f-60b5-4f5b-9d16-284aac15dd12"}},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__install_CRb_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}],"description":"","message_list":[],"uuid":"9a2c5a9e-5cc3-4edf-bd09-b754ee45b301","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"9f37773a-3930-4e7b-b0f4-e661e8fb0534"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}},{"description":"System action for starting an application","message_list":[],"uuid":"7cfbf68d-9faf-4153-b2d8-0c3899d43ed8","name":"action_start","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"a2d77c7d-c86a-4f65-9319-b917de492fb5","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}],"description":"","message_list":[],"uuid":"b68aa847-e255-4f7e-bc00-45ecf5cbc594","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"a2d77c7d-c86a-4f65-9319-b917de492fb5"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}},{"description":"System action for restarting an application","message_list":[],"uuid":"808c4b1c-8ded-45e7-ac75-f2fd8920b66c","name":"action_restart","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"6b47a8ac-e460-4325-b751-b4bda646175e","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}],"description":"","message_list":[],"uuid":"ea69d09a-e48e-4f98-b11a-956b61744a4b","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"6b47a8ac-e460-4325-b751-b4bda646175e"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}},{"description":"System action for stopping an application","message_list":[],"uuid":"f03a0d63-f093-474c-a6d2-5b8902db5ea1","name":"action_stop","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"957310b3-fbbe-4294-8966-2faf95abaa5c","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}],"description":"","message_list":[],"uuid":"eb84ab93-df45-44fc-a6ca-fd909dd77e56","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"957310b3-fbbe-4294-8966-2faf95abaa5c"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}},{"description":"System action for deleting an application. Deletes created VMs as well","message_list":[],"uuid":"0d9360d0-c6b3-4eba-9328-2bf157be053b","name":"action_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"50bf25dd-2fac-45dd-bcde-9f66d1cff99f","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}],"description":"","message_list":[],"uuid":"f70b79ee-beee-4dfc-b178-c11126d7daeb","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"50bf25dd-2fac-45dd-bcde-9f66d1cff99f"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}},{"description":"System action for deleting an application. Does not delete created VMs","message_list":[],"uuid":"9443b54d-b491-4746-aa44-ee1a9eefe3a1","name":"action_soft_delete","state":"ACTIVE","critical":false,"attrs":{},"type":"system","runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ESX_CENTOS_76","uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e"},"retries":"0","description":"","type":"DAG","uuid":"a49a64d4-5213-402d-922d-c5d7bc202137","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","message_list":[],"variable_list":[],"name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}],"description":"","message_list":[],"uuid":"113ce1b8-5250-488f-8d7e-3b62ec0aa461","state":"ACTIVE","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__Composite_DAG_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f","uuid":"a49a64d4-5213-402d-922d-c5d7bc202137"},"name":"SYS_GEN__Runbook_Package_8fb1dd88_fcf1_444f_a5bb_d5482c87170f"}}],"message_list":[],"service_local_reference_list":[],"uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","state":"ACTIVE","version":"","editables":{},"type":"SUBSTRATE_IMAGE","options":{"type":"","name":"CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"http:\/\/filer.dev.eng.nutanix.com:8080\/GoldImages\/NuCalm\/Ova%20files\/CentOS-7-x86_64-1810.ova","version":{"product_version":"","type":"","product_name":""},"architecture":"X86_64","type":""},"description":""},"variable_list":[],"name":"ESX_CENTOS_76"}]},"name":"Kubernetes_v1_14"},"spec":{"name":"Kubernetes_v1_14","resources":{"service_definition_list":[{"singleton":false,"name":"Kubernetes_Master","action_list":[{"description":"System action for creating an application","name":"action_create","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"9cc221bf-7046-4032-8167-44492812e616","child_tasks_local_reference_list":[{"kind":"app_task","name":"Dashboard","uuid":"0bee1065-c4f0-4e5f-859b-180585f17833"},{"kind":"app_task","name":"HELM","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47"},{"kind":"app_task","name":"Heapster","uuid":"fe0c0fe0-3cf8-4498-88c1-15f8c14a10c4"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Dashboard","uuid":"0bee1065-c4f0-4e5f-859b-180585f17833"},"edge_type":"user_defined","type":"","uuid":"d6df22f4-82c0-411f-a8ef-874bc4b4b9f4","to_task_reference":{"kind":"app_task","name":"HELM","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47"}},{"from_task_reference":{"kind":"app_task","name":"HELM","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47"},"edge_type":"user_defined","type":"","uuid":"8c216cc0-472a-41af-9a4b-a14cf363af94","to_task_reference":{"kind":"app_task","name":"Heapster","uuid":"fe0c0fe0-3cf8-4498-88c1-15f8c14a10c4"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"f33eac3f_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"0bee1065-c4f0-4e5f-859b-180585f17833","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/dashboard\necho '# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.7.\n#\n# Example usage: kubectl create -f <this_file>\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-full-access\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps\/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n      - name: kubernetes-dashboard\n        image: k8s.gcr.io\/kubernetes-dashboard-amd64:v1.10.1\n        ports:\n        - containerPort: 8443\n          protocol: TCP\n        args:\n          - --auto-generate-certificates\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http:\/\/my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: \/certs\n          # Create on-disk volume to store exec logs\n        - mountPath: \/tmp\n          name: tmp-volume\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: \/\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      - name: tmp-volume\n        emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 8443\n      nodePort: 30443\n  selector:\n    k8s-app: kubernetes-dashboard' | sudo tee \/etc\/kubernetes\/addons\/dashboard\/kubernetes-dashboard.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/dashboard\/kubernetes-dashboard.yaml\n"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Dashboard"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"6ef6099b-72e3-47dd-aa32-2f53324eff47","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\nsudo mkdir \/etc\/kubernetes\/addons\/helm\necho \"#helm init --service-account helm\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: helm\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: helm\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: helm\n  namespace: kube-system\" | sudo tee \/etc\/kubernetes\/addons\/helm\/helm.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/helm\/helm.yaml\nhelm init --service-account helm\n"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"HELM"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"fe0c0fe0-3cf8-4498-88c1-15f8c14a10c4","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\nsudo mkdir \/etc\/kubernetes\/addons\/metricsserver\n\n\necho 'apiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: metrics-server:system:auth-delegator\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:auth-delegator\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: RoleBinding\nmetadata:\n  name: metrics-server-auth-reader\n  namespace: kube-system\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: extension-apiserver-authentication-reader\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: apiregistration.k8s.io\/v1beta1\nkind: APIService\nmetadata:\n  name: v1beta1.metrics.k8s.io\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  service:\n    name: metrics-server\n    namespace: kube-system\n  group: metrics.k8s.io\n  version: v1beta1\n  insecureSkipTLSVerify: true\n  groupPriorityMinimum: 100\n  versionPriority: 100\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: metrics-server-config\n  namespace: kube-system\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  NannyConfiguration: |-\n    apiVersion: nannyconfig\/v1alpha1\n    kind: NannyConfiguration\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: metrics-server-v0.3.3\n  namespace: kube-system\n  labels:\n    k8s-app: metrics-server\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    version: v0.3.3\nspec:\n  selector:\n    matchLabels:\n      k8s-app: metrics-server\n      version: v0.3.3\n  template:\n    metadata:\n      name: metrics-server\n      labels:\n        k8s-app: metrics-server\n        version: v0.3.3\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: metrics-server\n      containers:\n      - name: metrics-server\n        image: k8s.gcr.io\/metrics-server-amd64:v0.3.3\n        command:\n        - \/metrics-server\n        - --metric-resolution=30s\n        - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP\n        ports:\n        - containerPort: 443\n          name: https\n          protocol: TCP\n      - name: metrics-server-nanny\n        image: k8s.gcr.io\/addon-resizer:1.8.4\n        resources:\n          limits:\n            cpu: 100m\n            memory: 300Mi\n          requests:\n            cpu: 5m\n            memory: 50Mi\n        env:\n          - name: MY_POD_NAME\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.name\n          - name: MY_POD_NAMESPACE\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.namespace\n        volumeMounts:\n        - name: metrics-server-config-volume\n          mountPath: \/etc\/config\n        command:\n          - \/pod_nanny\n          - --config-dir=\/etc\/config\n          - --cpu=1\n          - --extra-cpu=0.5m\n          - --memory=40\n          - --extra-memory=4Mi\n          - --threshold=5\n          - --deployment=metrics-server-v0.3.3\n          - --container=metrics-server\n          - --poll-period=300000\n          - --estimator=exponential\n          - --minClusterSize=3\n      volumes:\n        - name: metrics-server-config-volume\n          configMap:\n            name: metrics-server-config\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/cluster-service: \"true\"\n    kubernetes.io\/name: \"Metrics-server\"\nspec:\n  selector:\n    k8s-app: metrics-server\n  ports:\n  - port: 443\n    protocol: TCP\n    targetPort: https\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  name: system:metrics-server\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  - nodes\n  - nodes\/stats\n  - namespaces\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"extensions\"\n  resources:\n  - deployments\n  verbs:\n  - get\n  - list\n  - update\n  - watch\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:metrics-server\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:metrics-server\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/metricsserver\/metricsserver.yaml\n  \nkubectl create -f \/etc\/kubernetes\/addons\/metricsserver\/metricsserver.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"MetricsServer"}],"description":"","uuid":"31931783-139f-4d38-8ee7-fdb6e28b8f89","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"f33eac3f_dag","uuid":"9cc221bf-7046-4032-8167-44492812e616"},"name":"a9639da1_runbook"},"type":"system","uuid":"9bb88f59-273f-4364-8946-9e75ae877fed"},{"description":"System action for deleting an application. Deletes created VMs as well","name":"action_delete","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"f4dac105-54f8-4cc3-a9f3-7be9d528f392","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"62a92d34_dag"}],"description":"","uuid":"aaa8d7b1-6b3a-457c-82a9-f02340da1389","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"62a92d34_dag","uuid":"f4dac105-54f8-4cc3-a9f3-7be9d528f392"},"name":"8c4aa276_runbook"},"type":"system","uuid":"899eed8a-d0f3-45d1-b7bf-b328b50a164c"},{"description":"System action for starting an application","name":"action_start","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"c427eec4-fff1-4196-8528-70a83d0601a7","child_tasks_local_reference_list":[{"kind":"app_task","name":"Start","uuid":"162d0382-6ddc-4917-ad97-f812f13ee5ff"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"334b4484_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"162d0382-6ddc-4917-ad97-f812f13ee5ff","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\nsudo systemctl start etcd docker kubelet \nsudo systemctl enable etcd docker kubelet\n"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Start"}],"description":"","uuid":"f5dd73e8-6412-41ae-8296-4b20bc14bd1a","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"334b4484_dag","uuid":"c427eec4-fff1-4196-8528-70a83d0601a7"},"name":"daee30ae_runbook"},"type":"system","uuid":"a57be1ec-b415-48c9-b700-80765b813c3f"},{"description":"System action for stopping an application","name":"action_stop","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"10b664ff-4adb-459b-baab-07c2e11f41d3","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"9713c3d0_dag"}],"description":"","uuid":"e3bbde88-32e1-4ff7-8f90-453b72aa1103","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"9713c3d0_dag","uuid":"10b664ff-4adb-459b-baab-07c2e11f41d3"},"name":"6407a345_runbook"},"type":"system","uuid":"f81aebc2-fb10-48fb-b0ab-fab5a9954966"},{"description":"System action for restarting an application","name":"action_restart","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"b8274bd9-61c0-40d1-8c1b-828170a970cc","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"414912df_dag"}],"description":"","uuid":"40ee969f-f126-492c-b412-779a5be20bb4","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"414912df_dag","uuid":"b8274bd9-61c0-40d1-8c1b-828170a970cc"},"name":"d5c8316f_runbook"},"type":"system","uuid":"50351a10-e9aa-4663-9e7f-2d080251cc00"}],"description":"","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"78eb975a-d952-4bc6-9092-e7ea2970e7db","value":"","label":"","attrs":{"type":""},"is_hidden":false,"type":"LOCAL","name":"VERSION"}],"depends_on_list":[]},{"singleton":false,"name":"Kubernetes_Worker","action_list":[{"description":"System action for creating an application","name":"action_create","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"93b11d1f-00df-4647-ab8e-a96f3f35ab6b","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"4af7c45f_dag"}],"description":"","uuid":"423a942b-e840-4fa3-8d7f-e6ca5612ab35","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"4af7c45f_dag","uuid":"93b11d1f-00df-4647-ab8e-a96f3f35ab6b"},"name":"7c6e4932_runbook"},"type":"system","uuid":"7b3e13d6-1863-4751-88da-c9b647df824c"},{"description":"System action for deleting an application. Deletes created VMs as well","name":"action_delete","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"e0b3d106-6d37-417d-bd91-90201de021ef","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"1e2c50bb_dag"}],"description":"","uuid":"e0ae7dd8-e697-4ae3-bfdb-e101ad36ac36","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"1e2c50bb_dag","uuid":"e0b3d106-6d37-417d-bd91-90201de021ef"},"name":"1d794193_runbook"},"type":"system","uuid":"09fcf581-eb26-4924-a877-0afd2330803e"},{"description":"System action for starting an application","name":"action_start","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"12841a5d-6df4-40f6-9a5c-a22918f70724","child_tasks_local_reference_list":[{"kind":"app_task","name":"Start","uuid":"b053a3c5-d3fd-4d6f-9d8c-3dd7837aa50a"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"970128c7_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"b053a3c5-d3fd-4d6f-9d8c-3dd7837aa50a","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo systemctl start docker kubelet\nsudo systemctl enable docker kubelet"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Start"}],"description":"","uuid":"3efc9aad-6fd9-4f8a-8abd-1c6ad7959f46","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"970128c7_dag","uuid":"12841a5d-6df4-40f6-9a5c-a22918f70724"},"name":"884352cf_runbook"},"type":"system","uuid":"adba58b5-6b53-453d-b6e1-b755649596a0"},{"description":"System action for stopping an application","name":"action_stop","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"91fe19df-bca4-49b4-809f-b8a9b597be19","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"6c01dc28_dag"}],"description":"","uuid":"20af27bd-2440-4645-8551-6a7529d1f842","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"6c01dc28_dag","uuid":"91fe19df-bca4-49b4-809f-b8a9b597be19"},"name":"0cb172a7_runbook"},"type":"system","uuid":"984aabc0-97e4-4408-8349-90ecad09494c"},{"description":"System action for restarting an application","name":"action_restart","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"85684379-c83d-47a5-a70c-176864b02c40","child_tasks_local_reference_list":[],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"1d66b5be_dag"}],"description":"","uuid":"8020c814-83d0-4da5-b190-e7f6d56eb05b","variable_list":[],"main_task_local_reference":{"kind":"app_task","name":"1d66b5be_dag","uuid":"85684379-c83d-47a5-a70c-176864b02c40"},"name":"3a6f587d_runbook"},"type":"system","uuid":"0899fca1-f03c-4fc9-9133-9a68ade9a94a"}],"description":"","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"fa1f03a0-8833-4542-8679-66264df596e5","value":"","label":"","attrs":{"type":""},"is_hidden":false,"type":"LOCAL","name":"VERSION"}],"depends_on_list":[]}],"substrate_definition_list":[{"name":"AHV_Centos_K8SM","action_list":[],"uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"resources":{"nic_list":{"0":{"subnet_reference":true}},"serial_port_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"memory_size_mib":true,"guest_customization":true,"disk_list":{"1":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"0":{"device_properties":{"disk_address":{}},"disk_size_mib":true},"3":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"2":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"5":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"4":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"6":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true}}},"name":true,"categories":true}},"os_type":"Linux","type":"AHV_VM","create_spec":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","categories":"","availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"resources":{"nic_list":[{"nic_type":"NORMAL_NIC","network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"099dbe61-2c00-4964-9567-f547ec224e10"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":2048,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"efc034e3-b50e-4a48-b02d-25036aeb8bd3","boot_config":{"boot_device":{"type":"","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":1,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":2,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":3,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":4,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":5,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":6,"type":""}}}]}},"variable_list":[],"description":""},{"name":"AHV_Centos_K8SW","action_list":[],"uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"resources":{"nic_list":{"0":{"subnet_reference":true}},"serial_port_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"memory_size_mib":true,"guest_customization":true,"disk_list":{"1":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"0":{"device_properties":{"disk_address":{}},"disk_size_mib":true},"3":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true},"2":{"data_source_reference":true,"device_properties":{"device_type":true,"disk_address":{"adapter_type":true}},"disk_size_mib":true}}},"name":true,"categories":true}},"os_type":"Linux","type":"AHV_VM","create_spec":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","categories":"","availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"resources":{"nic_list":[{"nic_type":"NORMAL_NIC","network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"099dbe61-2c00-4964-9567-f547ec224e10"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"gpu_list":[],"memory_size_mib":6144,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"efc034e3-b50e-4a48-b02d-25036aeb8bd3","boot_config":{"boot_device":{"type":"","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"AHV_CENTOS_76","uuid":"a331e198-bcde-4788-949d-922aed9f7441"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":0,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":1,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":2,"type":""}}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","device_type":"DISK","disk_address":{"adapter_type":"SCSI","device_index":3,"type":""}}}]}},"variable_list":[],"description":""},{"name":"AWS_Centos_K8SM","action_list":[],"uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f","readiness_probe":{"connection_type":"SSH","retries":"5","connection_port":22,"address":"@@{public_ip_address}@@","delay_secs":"0","disable_readiness_probe":false},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"name":true,"resources":{"instance_profile_name":true,"availability_zone":true,"subnet_id":true,"key_name":true,"region":true,"user_data":true,"image_id":true,"instance_type":true,"security_group_list":true,"block_device_map":{"data_disk_list":{"1":{"size_gb":true},"0":{"size_gb":true},"3":{"size_gb":true},"2":{"size_gb":true},"5":{"size_gb":true},"4":{"size_gb":true}},"root_disk":{"size_gb":true}},"associate_public_ip_address":true,"vpc_id":true,"tag_list":true}}},"os_type":"Linux","type":"AWS_VM","create_spec":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"type":"PROVISION_AWS_VM","cluster_reference":null,"resources":{"instance_profile_name":"kubernetes-ebs-volumes","availability_zone":"us-east-1a","subnet_id":"subnet-c599a5ef","key_name":"calm-blueprints","region":"us-east-1","instance_initiated_shutdown_behavior":"","user_data":"","image_id":"ami-0ccec2041ac92b449","instance_type":"t2.medium","state":"RUNNING","security_group_list":[{"type":"","security_group_id":"sg-3b938f40"}],"block_device_map":{"data_disk_list":[{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdb","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdc","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sdd","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sde","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sdf","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":10,"volume_type":"STANDARD","device_name":"\/dev\/sdg","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}],"type":"","root_disk":{"size_gb":10,"volume_type":"GP2","device_name":"\/dev\/sda1","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}},"private_ip_address":"","vpc_id":"vpc-ffd54d98","tag_list":[{"type":"","value":"true","key":"kubernetes.io\/cluster\/@@{KUBE_CLUSTER_NAME}@@"}],"type":"","account_uuid":"8c2e0a6b-620a-c62a-c3f4-e58b101dfd0d","associate_public_ip_address":true}},"variable_list":[],"description":""},{"name":"AWS_Centos_K8SW","action_list":[],"uuid":"4452b5c1-19a7-4544-80e1-683064b97872","readiness_probe":{"connection_type":"SSH","retries":"5","connection_port":22,"address":"@@{public_ip_address}@@","delay_secs":"0","disable_readiness_probe":false},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":true},"create_spec":{"name":true,"resources":{"instance_profile_name":true,"availability_zone":true,"subnet_id":true,"key_name":true,"region":true,"user_data":true,"image_id":true,"instance_type":true,"security_group_list":true,"block_device_map":{"data_disk_list":{"1":{"size_gb":true},"0":{"size_gb":true},"2":{"size_gb":true}},"root_disk":{"size_gb":true}},"associate_public_ip_address":true,"vpc_id":true,"tag_list":true}}},"os_type":"Linux","type":"AWS_VM","create_spec":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"type":"PROVISION_AWS_VM","cluster_reference":null,"resources":{"instance_profile_name":"kubernetes-ebs-volumes","availability_zone":"us-east-1a","subnet_id":"subnet-9d1085b1","key_name":"calm-blueprints","region":"us-east-1","instance_initiated_shutdown_behavior":"","user_data":"","image_id":"ami-0ccec2041ac92b449","instance_type":"t2.large","state":"RUNNING","security_group_list":[{"type":"","security_group_id":"sg-3b938f40"}],"block_device_map":{"data_disk_list":[{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdb","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdc","iops":1,"snapshot_id":"","type":"","delete_on_termination":true},{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sdd","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}],"type":"","root_disk":{"size_gb":8,"volume_type":"GP2","device_name":"\/dev\/sda1","iops":1,"snapshot_id":"","type":"","delete_on_termination":true}},"private_ip_address":"","vpc_id":"vpc-ffd54d98","tag_list":[{"type":"","value":"owned","key":"kubernetes.io\/cluster\/@@{KUBE_CLUSTER_NAME}@@"}],"type":"","account_uuid":"8c2e0a6b-620a-c62a-c3f4-e58b101dfd0d","associate_public_ip_address":true}},"variable_list":[],"description":""},{"name":"GCP_Centos_K8SM","action_list":[],"uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50","readiness_probe":{"connection_type":"SSH","retries":"5","connection_port":22,"address":"@@{platform.networkInterfaces[0].accessConfigs[0].natIP}@@","delay_secs":"0","disable_readiness_probe":false},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"timeout_secs":true,"address":true,"delay_secs":true,"connection_port":true},"create_spec":{"resources":{"labels":true,"machineType":true,"name":true,"zone":true,"tags":{"items":true},"guestCustomization":{"startupScript":true},"disks":{"0":{"initializeParams":{"diskSizeGb":true,"sourceImage":true,"diskType":true},"autoDelete":true}},"blankDisks":{"1":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"0":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"3":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"2":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"5":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"4":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true}},"networkInterfaces":{"0":{"accessConfigs":{"0":{"config_type":true,"name":true}},"network":true,"subnetwork":true,"associatePublicIP":true}},"sshKeys":{"0":true},"serviceAccounts":{"0":{"scopes":true,"email":true}},"metadata":{"items":true}}}},"os_type":"Linux","type":"GCP_VM","create_spec":{"type":"PROVISION_GCP_VM","resources":{"labels":[],"machineType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/machineTypes\/n1-highcpu-2","description":"","zone":"us-central1-c","tags":{"items":[],"type":"","fingerprint":""},"guestCustomization":{"type":"","startupScript":""},"labelFingerprint":"","disks":[{"diskEncryptionKey":{"rawKey":"","type":""},"deviceName":"","initializeParams":{"sourceImageEncryptionKey":{"rawKey":"","type":""},"diskName":"","diskType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","diskSizeGb":10,"sourceImage":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/images\/centos-7","type":""},"autoDelete":true,"boot":true,"source":"","mode":"","interface":"","disk_type":"PERSISTENT","type":""}],"name":"k8sm-@@{calm_array_index}@@-@@{calm_time}@@","sshKeys":["centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMGAS\/K0Mb\/uwFXwD+hkjguy7VMZk2hpuhwPl9FUZwVBrURf\/i9QMJ5\/paPEZixu8VlRx7Inu4iun7rQfrnfeIYInmBwspXHYiTK3oHJAgZnrAHVEf1p6YaxLINlT1NI5yOAGPRWW6of8rBDBH1ObwU2+wcSx\/1H0uIs3aZNLufr+Rh628ACxAum2Gt8AVRj6ua2BPFyt5VTdclyysAmeh1AiixNgOZXOz6y\/i4TbzpY78I3isuKpxsUeXX6jxEMQol406jHDUF6njEOPIQG2zVZ3QJlTG9OlN+NiyZG9WkZz0VG\/6M8ixxIHHI2dNwUbBFv2HUu+8X9LTLFq2O7KjX9Hp7uZKBAySHA3eKaKHIp2bZuU1bT5PRPkggngX86xg+T+OMNnutbAiMnRJ8+FvD5So+5TIx4b9GgxAxure3x2yRPT9lOiQOB+CVpJPxR0Rn9bOI+wiPnD0kAGvK\/fHT+pqL4PM+hTnJtp9rrCRzIQApBx1263jEcYffhW2epZQRO+he5CMawFJ5TBe08om2AaDJ8GQdrpF6YA3W8DzHbmL3DPVVHdmqPLn10o+LX4gv5SdIIDVGdjKOc1BCnLTRmM28d5+sLDt\/M+kvcQgf0y0yDjMVjGECZkt39hbm4ELMHzZtzYLmHNhBZxRqHeJ7qFTuv1kx88OW3Xc5mbBNQ== centos@nutanix.com\n"],"canIpForward":false,"scheduling":{"automaticRestart":true,"type":"","preemptible":false,"onHostMaintenance":"TERMINATE"},"minCpuPlatform":"","blankDisks":[{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk1-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk2-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk3-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk4-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk5-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sc-disk6-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true}],"metadata":{"items":[],"type":"","fingerprint":""},"type":"","account_uuid":"84213a31-4fe8-7e39-3799-e093e5d0dc2e","serviceAccounts":[{"scopes":["https:\/\/www.googleapis.com\/auth\/cloud-platform"],"type":"","email":"108048128720-compute@developer.gserviceaccount.com"}],"networkInterfaces":[{"aliasIpRanges":[],"network":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/networks\/default","accessConfigs":[{"config_type":"ONE_TO_ONE_NAT","type":"","name":"k8sc-acn-@@{calm_array_index}@@-@@{calm_time}@@","natIP":""}],"networkIP":"","subnetwork":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/regions\/us-central1\/subnetworks\/default","type":"","associatePublicIP":true}]}},"variable_list":[],"description":""},{"name":"GCP_Centos_K8SW","action_list":[],"uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88","readiness_probe":{"connection_type":"SSH","retries":"5","connection_port":22,"address":"@@{platform.networkInterfaces[0].accessConfigs[0].natIP}@@","delay_secs":"0","disable_readiness_probe":false},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"timeout_secs":true,"address":true,"delay_secs":true,"connection_port":true},"create_spec":{"resources":{"labels":true,"machineType":true,"name":true,"zone":true,"tags":{"items":true},"guestCustomization":{"startupScript":true},"disks":{"0":{"initializeParams":{"diskSizeGb":true,"sourceImage":true,"diskType":true},"autoDelete":true}},"blankDisks":{"1":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"0":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true},"2":{"disk_type":true,"name":true,"sizeGb":true,"autoDelete":true}},"networkInterfaces":{"0":{"accessConfigs":{"0":{"config_type":true,"name":true}},"network":true,"subnetwork":true,"associatePublicIP":true}},"sshKeys":{"0":true},"serviceAccounts":{"0":{"scopes":true,"email":true}},"metadata":{"items":true}}}},"os_type":"Linux","type":"GCP_VM","create_spec":{"type":"PROVISION_GCP_VM","resources":{"labels":[],"machineType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/machineTypes\/n1-highcpu-4","description":"","zone":"us-central1-c","tags":{"items":[],"type":"","fingerprint":""},"guestCustomization":{"type":"","startupScript":""},"labelFingerprint":"","disks":[{"diskEncryptionKey":{"rawKey":"","type":""},"deviceName":"","initializeParams":{"sourceImageEncryptionKey":{"rawKey":"","type":""},"diskName":"","diskType":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","diskSizeGb":10,"sourceImage":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/images\/centos-7","type":""},"autoDelete":true,"boot":true,"source":"","mode":"","interface":"","disk_type":"PERSISTENT","type":""}],"name":"k8sw-@@{calm_array_index}@@-@@{calm_time}@@","sshKeys":["centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDMGAS\/K0Mb\/uwFXwD+hkjguy7VMZk2hpuhwPl9FUZwVBrURf\/i9QMJ5\/paPEZixu8VlRx7Inu4iun7rQfrnfeIYInmBwspXHYiTK3oHJAgZnrAHVEf1p6YaxLINlT1NI5yOAGPRWW6of8rBDBH1ObwU2+wcSx\/1H0uIs3aZNLufr+Rh628ACxAum2Gt8AVRj6ua2BPFyt5VTdclyysAmeh1AiixNgOZXOz6y\/i4TbzpY78I3isuKpxsUeXX6jxEMQol406jHDUF6njEOPIQG2zVZ3QJlTG9OlN+NiyZG9WkZz0VG\/6M8ixxIHHI2dNwUbBFv2HUu+8X9LTLFq2O7KjX9Hp7uZKBAySHA3eKaKHIp2bZuU1bT5PRPkggngX86xg+T+OMNnutbAiMnRJ8+FvD5So+5TIx4b9GgxAxure3x2yRPT9lOiQOB+CVpJPxR0Rn9bOI+wiPnD0kAGvK\/fHT+pqL4PM+hTnJtp9rrCRzIQApBx1263jEcYffhW2epZQRO+he5CMawFJ5TBe08om2AaDJ8GQdrpF6YA3W8DzHbmL3DPVVHdmqPLn10o+LX4gv5SdIIDVGdjKOc1BCnLTRmM28d5+sLDt\/M+kvcQgf0y0yDjMVjGECZkt39hbm4ELMHzZtzYLmHNhBZxRqHeJ7qFTuv1kx88OW3Xc5mbBNQ== centos@nutanix.com\n"],"canIpForward":false,"scheduling":{"automaticRestart":true,"type":"","preemptible":false,"onHostMaintenance":"TERMINATE"},"minCpuPlatform":"","blankDisks":[{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk1-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk2-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true},{"disk_type":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/zones\/us-central1-c\/diskTypes\/pd-ssd","type":"","name":"k8sm-disk3-@@{calm_array_index}@@-@@{calm_time}@@","sizeGb":10,"autoDelete":true}],"metadata":{"items":[],"type":"","fingerprint":""},"type":"","account_uuid":"84213a31-4fe8-7e39-3799-e093e5d0dc2e","serviceAccounts":[{"scopes":["https:\/\/www.googleapis.com\/auth\/cloud-platform"],"type":"","email":"108048128720-compute@developer.gserviceaccount.com"}],"networkInterfaces":[{"aliasIpRanges":[],"network":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/global\/networks\/default","accessConfigs":[{"config_type":"ONE_TO_ONE_NAT","type":"","name":"k8sm-acm-@@{calm_array_index}@@-@@{calm_time}@@","natIP":""}],"networkIP":"","subnetwork":"https:\/\/www.googleapis.com\/compute\/v1\/projects\/nucalm-devopos\/regions\/us-central1\/subnetworks\/default","type":"","associatePublicIP":true}]}},"variable_list":[],"description":""},{"name":"Azure_Centos_K8SM","action_list":[],"uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9","readiness_probe":{"connection_type":"SSH","retries":"5","connection_port":22,"address":"@@{platform.publicIPAddressList[0]}@@","delay_secs":"0","disable_readiness_probe":false},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"resources":{"vm_name":true,"storage_profile":{"is_managed":true,"image_details":{"sku":true,"publisher":true,"offer":true,"source_image_id":true,"use_custom_image":true,"version":true},"os_disk_details":{"storage_type":true,"name":true,"caching_type":true,"create_option":true}},"nw_profile":{"nic_list":{"0":{"nsg_name":true,"vnet_name":true,"private_ip_info":{"ip_allocation_method":true},"nic_name":true,"subnet_name":true,"public_ip_info":{"ip_name":true,"dns_label":true,"ip_allocation_method":true}}}},"resource_group":true,"os_profile":{"linux_config":{"custom_data":true}},"hw_profile":{"vm_size":true},"location":true,"availability_set_id":true,"tag_list":true}}},"os_type":"Linux","type":"AZURE_VM","create_spec":{"type":"PROVISION_AZURE_VM","name":"","resources":{"vm_name":"K8SM-@@{calm_unique_hash}@@-@@{calm_array_index}@@","storage_profile":{"is_managed":true,"image_details":{"sku":"7.4","publisher":"OpenLogic","offer":"CentOS-HPC","source_image_id":"","use_custom_image":false,"version":"7.4.20180719","type":""},"type":"","os_disk_details":{"size_in_gb":127,"name":"os-@@{calm_unique_hash}@@-@@{calm_array_index}@@-disk","storage_name":"","storage_type":"Standard_LRS","lun":-1,"type":"","create_option":"FromImage","caching_type":"ReadWrite"},"data_disk_list":[]},"nw_profile":{"nic_list":[{"vnet_name":"calm-virtual-network-eastus2","nsg_name":"sg-allow-all-eastus2","private_ip_info":{"ip_allocation_method":"Dynamic"},"nic_name":"nic-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","subnet_name":"default","public_ip_info":{"ip_allocation_method":"Dynamic","dns_label":"dns-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","ip_name":"public-ip-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0"}}],"primary_nic":-1,"type":""},"resource_group":"calmrg","os_profile":{"secrets":[],"type":"","windows_config":{"winrm_listeners":[],"time_zone":"","additional_unattend_content":[],"provision_vm_agent":true,"auto_updates":false,"type":""},"linux_config":null},"hw_profile":{"max_data_disk_count":4,"vm_size":"Standard_D1_v2","type":""},"location":"eastus2","tag_list":[],"type":"","account_uuid":"3c0f2d94-878c-f34c-6d39-90b854129782"}},"variable_list":[],"description":""},{"name":"Azure_Centos_K8SW","action_list":[],"uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078","readiness_probe":{"connection_type":"SSH","retries":"5","connection_port":22,"address":"@@{platform.publicIPAddressList[0]}@@","delay_secs":"0","disable_readiness_probe":false},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"resources":{"vm_name":true,"storage_profile":{"is_managed":true,"image_details":{"sku":true,"publisher":true,"offer":true,"source_image_id":true,"use_custom_image":true,"version":true},"os_disk_details":{"storage_type":true,"name":true,"caching_type":true,"create_option":true}},"nw_profile":{"nic_list":{"0":{"nsg_name":true,"vnet_name":true,"private_ip_info":{"ip_allocation_method":true},"nic_name":true,"subnet_name":true,"public_ip_info":{"ip_allocation_method":true,"dns_label":true,"ip_name":true}}}},"resource_group":true,"os_profile":{"linux_config":{"custom_data":true}},"hw_profile":{"vm_size":true},"location":true,"availability_set_id":true,"tag_list":true}}},"os_type":"Linux","type":"AZURE_VM","create_spec":{"type":"PROVISION_AZURE_VM","name":"","resources":{"vm_name":"K8SW-@@{calm_unique_hash}@@-@@{calm_array_index}@@","storage_profile":{"is_managed":true,"image_details":{"sku":"7.4","publisher":"OpenLogic","offer":"CentOS-HPC","source_image_id":"","use_custom_image":false,"version":"7.4.20180719","type":""},"type":"","os_disk_details":{"size_in_gb":127,"name":"os-@@{calm_unique_hash}@@-@@{calm_array_index}@@-disk","storage_name":"","storage_type":"Standard_LRS","lun":-1,"type":"","create_option":"FromImage","caching_type":"ReadWrite"},"data_disk_list":[]},"nw_profile":{"nic_list":[{"vnet_name":"calm-virtual-network-eastus2","nsg_name":"sg-allow-all-eastus2","private_ip_info":{"ip_allocation_method":"Dynamic"},"nic_name":"nic-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","subnet_name":"default","public_ip_info":{"ip_allocation_method":"Dynamic","dns_label":"dns-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0","ip_name":"public-ip-@@{calm_unique_hash}@@-@@{calm_array_index}@@-0"}}],"primary_nic":-1,"type":""},"resource_group":"calmrg","os_profile":{"secrets":[],"type":"","windows_config":{"winrm_listeners":[],"time_zone":"","additional_unattend_content":[],"provision_vm_agent":true,"auto_updates":false,"type":""},"linux_config":null},"hw_profile":{"max_data_disk_count":4,"vm_size":"Standard_D1_v2","type":""},"location":"eastus2","tag_list":[],"type":"","account_uuid":"3c0f2d94-878c-f34c-6d39-90b854129782"}},"variable_list":[],"description":""},{"name":"VMware_Centos_K8SM","action_list":[],"uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.ipAddressList[0]}@@","delay_secs":"30","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"name":true,"drs_mode":true,"cluster":true,"host":true,"datastore":true,"storage_pod":true,"resources":{"template_nic_list":{},"nic_list":{"0":{"nic_type":true,"net_name":true}},"template_controller_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"controller_list":{},"memory_size_mib":true,"guest_customization":{"customization_name":true,"cloud_init":true},"template_disk_list":{},"disk_list":true}}},"os_type":"Linux","type":"VMWARE_VM","create_spec":{"name":"K8SM-@@{calm_array_index}@@-@@{calm_time}@@","storage_pod":"TestQA","drs_mode":true,"cluster":"Sabine59-Cluster","host":"","clone_is_template":false,"template":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","datastore":"","type":"PROVISION_VMWARE_VM","resources":{"nic_list":[{"nic_type":"e1000","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[],"template_controller_list":[],"num_vcpus_per_socket":1,"num_sockets":2,"controller_list":[],"memory_size_mib":2048,"power_state":"poweron","guest_customization":{"customization_type":"GUEST_OS_LINUX","cloud_init":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']","type":""},"template_disk_list":[],"type":"","account_uuid":"7f90399d-ed3d-1c70-447d-17004ef1bd0a","disk_list":[{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""}]}},"variable_list":[],"description":""},{"name":"VMware_Centos_K8SW","action_list":[],"uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.ipAddressList[0]}@@","delay_secs":"30","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"}},"editables":{"readiness_probe":{"connection_type":true,"retries":true,"delay_secs":true,"connection_port":true,"timeout_secs":null},"create_spec":{"name":true,"drs_mode":true,"cluster":true,"host":true,"datastore":true,"storage_pod":true,"resources":{"template_nic_list":{},"nic_list":{"0":{"nic_type":true,"net_name":true}},"template_controller_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"controller_list":{},"memory_size_mib":true,"guest_customization":{"customization_name":true,"cloud_init":true},"template_disk_list":{},"disk_list":true}}},"os_type":"Linux","type":"VMWARE_VM","create_spec":{"name":"K8SW-@@{calm_array_index}@@-@@{calm_time}@@","storage_pod":"TestQA","drs_mode":true,"cluster":"Sabine59-Cluster","host":"","clone_is_template":false,"template":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","datastore":"","type":"PROVISION_VMWARE_VM","resources":{"nic_list":[{"nic_type":"e1000","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[],"template_controller_list":[],"num_vcpus_per_socket":1,"num_sockets":4,"controller_list":[],"memory_size_mib":6144,"power_state":"poweron","guest_customization":{"customization_type":"GUEST_OS_LINUX","cloud_init":"#cloud-config\nusers:\n  - name: centos\n    ssh-authorized-keys:\n      - @@{CENTOS.public_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']","type":""},"template_disk_list":[],"type":"","account_uuid":"7f90399d-ed3d-1c70-447d-17004ef1bd0a","disk_list":[{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/7b773e05-e06fc970\/","disk_type":"disk","type":""}]}},"variable_list":[],"description":""}],"credential_definition_list":[{"username":"centos","description":"","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{"uuid":"4697253c-f2fc-4d8b-898e-de45b934d790"}}},"editables":{"username":true,"secret":true},"type":"KEY","name":"CENTOS"}],"type":"USER","app_profile_list":[{"deployment_create_list":[{"name":"2cbb2f6a_deployment","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"3","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SM","uuid":"ac0601f1-dcfc-4e4e-b429-d3a92e840327"},"type":"GREENFIELD","variable_list":[],"uuid":"24f1ad70-c385-4df3-9589-b425215cc9e9"},{"name":"39cf7283_deployment","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"9","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"AHV_Centos_K8SW","uuid":"7acd857f-e4f1-4490-92db-48bfd41123ec"},"type":"GREENFIELD","variable_list":[],"uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8"}],"description":"","action_list":[{"description":"","name":"Upgrade","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"b37f469d-0e25-4479-ab63-0b19c84ae2d8","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024"},{"kind":"app_task","name":"Upgrade Master","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321"},{"kind":"app_task","name":"Set Version Minion","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34"},{"kind":"app_task","name":"Upgrade Minion","uuid":"4b61f705-dd43-416c-8071-e9904159690b"},{"kind":"app_task","name":"RestartServices","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024"},"edge_type":"user_defined","type":"","uuid":"f9dc20ef-b3b3-4776-b89c-22ecfd58f908","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321"},"edge_type":"user_defined","type":"","uuid":"20a8f316-c37b-4633-8822-61d75cf5dddd","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024"},"edge_type":"user_defined","type":"","uuid":"00204690-aee8-4934-8ea1-74c86714f130","to_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34"},"edge_type":"user_defined","type":"","uuid":"3ab35cda-e48b-49f1-9147-2522b51ea0dd","to_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"4b61f705-dd43-416c-8071-e9904159690b"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"4b61f705-dd43-416c-8071-e9904159690b"},"edge_type":"user_defined","type":"","uuid":"8618c7d4-7731-4e67-befe-a38fd9dec9eb","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"6ee65d8a_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"e4f404f1-addc-4b33-b7f9-974ad578f024","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"6fe4ada7-6fa4-42cc-95cf-6c1804f9a321","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"c8614399-9844-46e7-b0a3-4c495b2d2d34","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Minion"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"4b61f705-dd43-416c-8071-e9904159690b","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Minion"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"ceea34e0-b471-4a83-a493-fe13fdced38e","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo \"${WORKER_IPS}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"worker${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=worker${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon worker${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"master${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=master${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon master${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"RestartServices"}],"description":"","uuid":"6f4e46c9-1bb3-46b7-a9a2-48f18d04da93","variable_list":[{"val_type":"STRING","regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"is_mandatory":false,"description":"","uuid":"fbb87bf3-bd50-4c85-9060-916badd4aa36","value":"v1.13.6","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"6ee65d8a_dag","uuid":"b37f469d-0e25-4479-ab63-0b19c84ae2d8"},"name":"68a7ffd0_runbook"},"type":"user","uuid":"9593a08d-92d4-4f4d-8378-cd2203a9a46f"},{"description":"","name":"ScaleOut","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"018613f0-3588-4a27-bd9b-06266dae476f","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"f1037079-92c5-482f-ba0d-7de0f28fbb5b"},{"kind":"app_task","name":"Set Hosts file","uuid":"7c1a8068-0af3-42ef-9083-80c7d0c2c015"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"f1037079-92c5-482f-ba0d-7de0f28fbb5b"},"edge_type":"user_defined","type":"","uuid":"7c7b1a63-e73a-4fe1-baaa-68db376fe1f8","to_task_reference":{"kind":"app_task","name":"Set Hosts file","uuid":"7c1a8068-0af3-42ef-9083-80c7d0c2c015"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"03b33121_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8","name":"39cf7283_deployment"},"retries":"0","description":"","uuid":"f1037079-92c5-482f-ba0d-7de0f28fbb5b","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"7c1a8068-0af3-42ef-9083-80c7d0c2c015","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMINION_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n  \techo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Set Hosts file"}],"description":"","uuid":"13750f72-8c26-4a5a-b0b7-b38c01a354d2","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"2c8a1e6e-8943-46df-b329-1935d204920a","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"03b33121_dag","uuid":"018613f0-3588-4a27-bd9b-06266dae476f"},"name":"00cf5417_runbook"},"type":"user","uuid":"de150f00-efd5-40ee-8e3a-da7abbc9427b"},{"description":"","name":"ScaleIn","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"c4268c07-b799-45fd-ae43-1c1d369fc644","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"14f41976-12a0-49a6-a733-e7a0fe7d1a8e"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"e72a9133_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"a5e1d602-fe1e-4111-985e-37bd05f0dfb8","name":"39cf7283_deployment"},"retries":"0","description":"","uuid":"14f41976-12a0-49a6-a733-e7a0fe7d1a8e","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale In"}],"description":"","uuid":"b66ff3db-62a1-4da1-b063-26a500f0e4ef","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"3f45c72e-02e5-4819-b953-5cc23a6e211e","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"e72a9133_dag","uuid":"c4268c07-b799-45fd-ae43-1c1d369fc644"},"name":"96546f6c_runbook"},"type":"user","uuid":"26052caf-9d18-4a96-af6b-06b6416ba03e"}],"name":"Nutanix","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"c47f3c5e-4f48-4101-a00e-8fd6bc570713","value":"ahv-kubenetes-cluster","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_NAME"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"is_mandatory":false,"description":"","uuid":"bc66ae83-3b68-445b-9e68-c722e698cf95","value":"v1.12.8","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"69e9beaf-f747-41c2-b963-dfe2db42c12e","value":"17.03.3.ce","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"aff4cc9c-7363-4398-840b-a6449db1a159","value":"10.200.0.0\/16","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"a06508cb-681e-43c6-9dae-108e173c7f70","value":"10.32.0.0\/24","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_SERVICE_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"8a3c0063-9875-4dbb-8a3e-680082cc3ef8","value":"10.32.0.10","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_DNS_IP"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"281456e9-fdfe-4d86-8a78-5bfa211b9a3a","value":"flannel","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"a770ead2-46c0-47c1-b6f5-52d2de71b5e4","value":"10.46.34.95","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"PE_CLUSTER_IP"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"df3b5d86-1bcd-4b9e-acda-e893dd0ff41f","value":"10.46.34.96","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"PE_DATA_SERVICE_IP"},{"val_type":"STRING","is_mandatory":false,"uuid":"18a0524d-bb44-4883-8827-663e78c031f4","name":"PE_USERNAME","value":"admin","label":"","editables":{"value":true},"is_hidden":false,"type":"LOCAL","description":""},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"442b5766-fb5d-4c58-8631-090bf7403684","label":"","attrs":{"is_secret_modified":false,"secret_reference":{"uuid":"f9cbde76-f35e-4894-9e88-fceb7d162e00"}},"editables":{"value":true},"is_hidden":false,"type":"SECRET","name":"PE_PASSWORD"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"e8b38cbc-ef73-4dc4-b05c-078055276afd","value":"default-container-69049036518763","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"PE_CONTAINER_NAME"}],"uuid":"1bb02763-93fc-4eae-af1f-0b9519c9d45a"},{"deployment_create_list":[{"name":"85fa2262_deployment","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"3","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SM","uuid":"81656ca4-3772-4f02-a881-6051b4bc3a4f"},"type":"GREENFIELD","variable_list":[],"uuid":"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021"},{"name":"d6584f2e_deployment","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"9","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"AWS_Centos_K8SW","uuid":"4452b5c1-19a7-4544-80e1-683064b97872"},"type":"GREENFIELD","variable_list":[],"uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913"}],"description":"","action_list":[{"description":"","name":"Upgrade","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"db23bf54-8d1a-49d3-ac54-f78a4726a80e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"bcafe9f4-0fa0-4583-9ef7-d5c617740704"},{"kind":"app_task","name":"Set Version Minion","uuid":"d592c05a-6a92-4fa8-b1b0-8dd351a2e30b"},{"kind":"app_task","name":"Upgrade Controller","uuid":"92544897-9e24-4e24-99bd-56091a7a732a"},{"kind":"app_task","name":"Upgrade Minion","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200"},{"kind":"app_task","name":"Restart Services","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"bcafe9f4-0fa0-4583-9ef7-d5c617740704"},"edge_type":"user_defined","type":"","uuid":"3d9910eb-a035-41b4-945b-59252d83d483","to_task_reference":{"kind":"app_task","name":"Upgrade Controller","uuid":"92544897-9e24-4e24-99bd-56091a7a732a"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Controller","uuid":"92544897-9e24-4e24-99bd-56091a7a732a"},"edge_type":"user_defined","type":"","uuid":"417895f5-3366-4b10-92b7-ece43412f27f","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"d592c05a-6a92-4fa8-b1b0-8dd351a2e30b"},"edge_type":"user_defined","type":"","uuid":"6230fe0c-0935-4fc4-9553-01acfa7500fc","to_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200"},"edge_type":"user_defined","type":"","uuid":"e9cc9f4f-4868-4633-b540-40cf840b34c1","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"17adda9e_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"bcafe9f4-0fa0-4583-9ef7-d5c617740704","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"d592c05a-6a92-4fa8-b1b0-8dd351a2e30b","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"92544897-9e24-4e24-99bd-56091a7a732a","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_private_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=aws\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=aws\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"ca12fbe7-4891-4f66-ab3b-aed799011200","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"05b1ff52-c2e9-419a-adc3-85386744b296","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_NAMES=\"@@{calm_array_private_dns_name}@@\" \nWORKER_NAMES=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" \nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n  \techo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n  \texit 1\n  fi\n  count=$((count+1))\ndone\n\nfor name in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"$name\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $name \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=${name} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on minion nodes\"\n    exit 1\nfi\n\nfor name in $(echo \"${MASTER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"${name}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $name \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=$name -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n\techo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Restart Services"}],"description":"","uuid":"659ce0c6-e21d-40fe-908a-5ccb2879b2f1","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"9c9b57d2-61ba-4e50-a603-cfb6883effcd","value":"v1.13.6","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"17adda9e_dag","uuid":"db23bf54-8d1a-49d3-ac54-f78a4726a80e"},"name":"dfce2dff_runbook"},"type":"user","uuid":"cc8b56c2-b61d-457a-be7e-dd1ca2484913"},{"description":"","name":"ScaleOut","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"cc8967d0-f727-43e5-b295-d79d3b14f716","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"f05b8d67-8dc8-475f-9126-fb456e4ba1d2"},{"kind":"app_task","name":"Set Hosts File","uuid":"7719785a-931a-46a4-bf01-8a35957cb037"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"f05b8d67-8dc8-475f-9126-fb456e4ba1d2"},"edge_type":"user_defined","type":"","uuid":"05449fc7-1f82-4732-aba9-28bb2ec9078e","to_task_reference":{"kind":"app_task","name":"Set Hosts File","uuid":"7719785a-931a-46a4-bf01-8a35957cb037"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"a0fb1ecf_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913","name":"d6584f2e_deployment"},"retries":"0","description":"","uuid":"f05b8d67-8dc8-475f-9126-fb456e4ba1d2","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"7719785a-931a-46a4-bf01-8a35957cb037","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nWORKER_IPS=\"@@{AWS_Centos_K8SM.private_ip_address}@@\"\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n    echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Set Hosts File"}],"description":"","uuid":"a39262da-35bd-4b1b-8248-641dffde4c3e","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"13204367-778a-4ca8-8a24-a514702424e1","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"a0fb1ecf_dag","uuid":"cc8967d0-f727-43e5-b295-d79d3b14f716"},"name":"55139b34_runbook"},"type":"user","uuid":"2bb928c9-8e13-4925-a016-b3e576a2a5e0"},{"description":"","name":"ScaleIn","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"b2f182e9-61c3-42ee-b2ca-f1ad4d959890","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"0f6598b2-a316-4228-8aa5-863769778809"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"adfef604_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"b95f5e0e-149f-41a8-ba6b-8a3ed1253913","name":"d6584f2e_deployment"},"retries":"0","description":"","uuid":"0f6598b2-a316-4228-8aa5-863769778809","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale In"}],"description":"","uuid":"85b1da1f-0f04-4ba6-bf23-01e6222238a9","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"7dfd894b-7727-48ab-91b2-cbc1f9b22718","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"adfef604_dag","uuid":"b2f182e9-61c3-42ee-b2ca-f1ad4d959890"},"name":"65df2c70_runbook"},"type":"user","uuid":"1295c30b-0067-4fea-86c2-820371a08ae7"}],"name":"AWS","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"84ea4146-06e2-4f24-9240-793c796c7f82","value":"aws-kubenetes-cluster","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_NAME"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"is_mandatory":false,"description":"","uuid":"81a896d4-4bf2-4d95-abf5-cc182a2910ab","value":"v1.12.8","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"cf1fcd4b-b7a6-422e-b1d4-8d371a79e2dd","value":"17.03.3.ce","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"d1012a95-478f-4bda-8408-bafeeac8d182","value":"10.200.0.0\/16","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"d36bd43a-4cba-46c8-8080-6a1d75015bd7","value":"10.32.0.0\/24","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_SERVICE_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"799ca7b6-7ea7-4ed2-8f4c-6512b81b57d3","value":"10.32.0.10","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_DNS_IP"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"e2b50e6e-81a8-4b0f-b4a8-f8c16d6128d1","value":"flannel","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"}],"uuid":"e0b2a1c1-da83-47cb-adc9-f2c26b366023"},{"deployment_create_list":[{"name":"34875daf_deployment","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"3","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SM","uuid":"3e4b366d-c77e-48ed-8624-1432044c5f50"},"type":"GREENFIELD","variable_list":[],"uuid":"ba6abd76-7c67-4d05-a1c5-9fc1def3a647"},{"name":"77b729d5_deployment","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"9","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"GCP_Centos_K8SW","uuid":"3ccf5cc6-9806-4701-81f4-fdfdd03d9f88"},"type":"GREENFIELD","variable_list":[],"uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a"}],"description":"","action_list":[{"description":"","name":"Upgrade","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"2fbcefcb-a9b3-41d4-ab5d-9c4ed672c0b5","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"49aa1d3e-6e8b-45fe-8b3b-122d1b7a4f08"},{"kind":"app_task","name":"Set Version Worker","uuid":"4220a0e0-5af2-464b-94f1-4a8d3b0cc434"},{"kind":"app_task","name":"Upgrade Worker","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5"},{"kind":"app_task","name":"Upgrade Master","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8"},{"kind":"app_task","name":"Restart Services","uuid":"580ece3f-bce2-409b-a824-2876cf08606f"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"49aa1d3e-6e8b-45fe-8b3b-122d1b7a4f08"},"edge_type":"user_defined","type":"","uuid":"c1038158-7040-45ef-b0a7-8d162bf0abcf","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8"},"edge_type":"user_defined","type":"","uuid":"d6b7e5df-edbe-4454-919a-d6601843b66c","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"580ece3f-bce2-409b-a824-2876cf08606f"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Worker","uuid":"4220a0e0-5af2-464b-94f1-4a8d3b0cc434"},"edge_type":"user_defined","type":"","uuid":"59cc81be-110c-4fec-92bd-e30c821732aa","to_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5"},"edge_type":"user_defined","type":"","uuid":"4fcda967-f38f-4bdc-9ad9-943235252ee2","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"580ece3f-bce2-409b-a824-2876cf08606f"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"cbdb4fa8_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"49aa1d3e-6e8b-45fe-8b3b-122d1b7a4f08","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"4220a0e0-5af2-464b-94f1-4a8d3b0cc434","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"ed9b9244-0b79-4f5e-a2f3-21a37f9d19a5","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"c7deb219-49d1-4078-8b89-02e95da86ed8","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=gce\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=gce\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"580ece3f-bce2-409b-a824-2876cf08606f","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_NAMES=\"@@{calm_array_name}@@\" \nWORKER_NAMES=\"@@{GCP_Centos_K8SM.name}@@\" \nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor name in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain ${name} --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"worker${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=${name} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon ${name}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor name in $(echo \"${MASTER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain $name --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"master${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=$name -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Restart Services"}],"description":"","uuid":"940a5a1a-a60b-4298-8647-a289ebb0ae2b","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"ba7b28af-2d8d-4fc9-a39e-18deceb5c305","value":"v1.13.6","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"cbdb4fa8_dag","uuid":"2fbcefcb-a9b3-41d4-ab5d-9c4ed672c0b5"},"name":"8d003d32_runbook"},"type":"user","uuid":"650105c2-d922-4ca5-a59e-c82785dfa584"},{"description":"","name":"ScaleOut","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"b983d1c2-d39d-41e8-a80e-0498d6aa39e2","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"4f90925d-8cba-4af4-bbe4-5b1ccdd4c76e"},{"kind":"app_task","name":"Set Hosts File","uuid":"d5b134a9-7474-4dac-a0ba-31235937974f"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"4f90925d-8cba-4af4-bbe4-5b1ccdd4c76e"},"edge_type":"user_defined","type":"","uuid":"b32099f3-bee9-427a-99c1-cad37440563d","to_task_reference":{"kind":"app_task","name":"Set Hosts File","uuid":"d5b134a9-7474-4dac-a0ba-31235937974f"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"f3682593_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a","name":"77b729d5_deployment"},"retries":"0","description":"","uuid":"4f90925d-8cba-4af4-bbe4-5b1ccdd4c76e","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"d5b134a9-7474-4dac-a0ba-31235937974f","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nWORKER_IP=\"@@{GCP_Centos_K8SM.private_ip_address}@@\"\nfor ip in $(echo ${WORKER_IP} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n    echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Set Hosts File"}],"description":"","uuid":"52c03df0-006e-4c3f-8c84-ea6f7581a1c3","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"b0ad7b3e-02ce-4677-a47c-5a965e01ba48","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"f3682593_dag","uuid":"b983d1c2-d39d-41e8-a80e-0498d6aa39e2"},"name":"744583cd_runbook"},"type":"user","uuid":"6a55bb4a-5338-478d-9a67-1d2f2045a727"},{"description":"","name":"ScaleIn","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"3035498e-e7f5-43a1-a150-9109292ad872","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"30bdd176-5229-45c9-9ad5-b0e4606de27b"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"853cb860_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"1dc91c4a-5bd0-4086-9481-b16978f5926a","name":"77b729d5_deployment"},"retries":"0","description":"","uuid":"30bdd176-5229-45c9-9ad5-b0e4606de27b","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale In"}],"description":"","uuid":"2c0ec127-e5c4-47ee-88fb-62203d2d1922","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"9a23ba8c-870c-4a4d-8298-20409b429384","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"853cb860_dag","uuid":"3035498e-e7f5-43a1-a150-9109292ad872"},"name":"9331a25f_runbook"},"type":"user","uuid":"42796a22-0428-4713-ba3e-7b5098d6c585"}],"name":"GCP","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"0c66cdbf-52ee-498e-9880-fcf773d3ab43","value":"gcp-kubenetes-cluster","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_NAME"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"is_mandatory":false,"description":"","uuid":"c2f2fa87-3cd0-41bc-b442-71ab14006538","value":"v1.12.8","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"196e898f-3ad5-47fd-9131-7f68d8faebd5","value":"17.03.3.ce","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"12596810-28cb-40ef-84a4-f3d6bc3f92ac","value":"10.200.0.0\/16","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"1d47f4f2-ac26-4267-ade4-52bdb48db143","value":"10.32.0.0\/24","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_SERVICE_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"db593117-5b45-40b7-ba7f-edb1c8c42965","value":"10.32.0.10","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_DNS_IP"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"0b8cb6b5-cb08-4cff-ae24-c5587cfa4b9c","value":"flannel","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"}],"uuid":"220bc930-004f-476a-a669-7d48ab9c58df"},{"deployment_create_list":[{"name":"34875daf_deployment_cloned_1","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"3","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SM","uuid":"d5d5dd51-cbec-4a8f-97d9-876d1260d2b9"},"type":"GREENFIELD","variable_list":[],"uuid":"de2fd75c-95bc-4790-897d-96edbcd5bddb"},{"name":"77b729d5_deployment_cloned_1","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"9","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"Azure_Centos_K8SW","uuid":"d2c7d06e-d984-4bc9-8a81-d9efbbf81078"},"type":"GREENFIELD","variable_list":[],"uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8"}],"description":"","action_list":[{"description":"","name":"Upgrade","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"8b31dfe5-776f-4e27-b568-056dc2661b23","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Master","uuid":"5da6d8e5-f085-40ab-80c6-caf8b5836108"},{"kind":"app_task","name":"Set Version Worker","uuid":"c0628233-2468-4fc5-8117-e1921bad6e05"},{"kind":"app_task","name":"Upgrade Worker","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211"},{"kind":"app_task","name":"Upgrade Master","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2"},{"kind":"app_task","name":"Restart Services","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"5da6d8e5-f085-40ab-80c6-caf8b5836108"},"edge_type":"user_defined","type":"","uuid":"cbe1b611-4000-403a-a015-ca15cb7a0a92","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2"},"edge_type":"user_defined","type":"","uuid":"5679158a-9c8e-494f-a8d3-a63df00455f3","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Worker","uuid":"c0628233-2468-4fc5-8117-e1921bad6e05"},"edge_type":"user_defined","type":"","uuid":"06c776bf-6fe7-41ad-aade-b13e63219f19","to_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Worker","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211"},"edge_type":"user_defined","type":"","uuid":"ff8a50e4-0294-46fa-b967-84200ba7a30f","to_task_reference":{"kind":"app_task","name":"Restart Services","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"cbdb4fa8_dag"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"5da6d8e5-f085-40ab-80c6-caf8b5836108","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"c0628233-2468-4fc5-8117-e1921bad6e05","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"ef23d273-005d-45fe-9093-6b1fe45cd211","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"f6e7061f-20a5-4e30-b47b-fa254cca3df2","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"9b45d739-b876-4f1d-8a44-d549de6f3b7a","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_NAMES=\"@@{calm_array_name}@@\" \nWORKER_NAMES=\"@@{Azure_Centos_K8SM.name}@@\" \nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor name in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain ${name} --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"worker${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=${name} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon ${name}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor name in $(echo \"${MASTER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain $name --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no \"master${count}\" \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 20\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=$name -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon $name\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Restart Services"}],"description":"","uuid":"22de45ba-21b9-439b-99da-65d9e496a488","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"8cddf08e-eb4c-4f29-8c80-fe247f8064a2","value":"v1.13.6","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"cbdb4fa8_dag","uuid":"8b31dfe5-776f-4e27-b568-056dc2661b23"},"name":"8d003d32_runbook_cloned_1"},"type":"user","uuid":"87023008-9f5b-44f9-b7af-eb7755a6b17f"},{"description":"","name":"ScaleOut","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"b766446c-47b3-40ac-b58d-174ef3f93585","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"4eb43620-c2b0-44b6-94c8-5748eb7c6481"},{"kind":"app_task","name":"Set Hosts File","uuid":"3c0d6539-519c-4d80-b673-c95e576ef414"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"4eb43620-c2b0-44b6-94c8-5748eb7c6481"},"edge_type":"user_defined","type":"","uuid":"0cb35f4c-7e1e-4ce8-854b-ee8439a0adc7","to_task_reference":{"kind":"app_task","name":"Set Hosts File","uuid":"3c0d6539-519c-4d80-b673-c95e576ef414"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"f3682593_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8","name":"77b729d5_deployment_cloned_1"},"retries":"0","description":"","uuid":"4eb43620-c2b0-44b6-94c8-5748eb7c6481","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"3c0d6539-519c-4d80-b673-c95e576ef414","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nWORKER_IPS=\"@@{Azure_Centos_K8SM.private_ip_address}@@\"\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} worker${count}\" \/etc\/hosts) )) ; then\n    echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Set Hosts File"}],"description":"","uuid":"bab97dfc-be4d-4f02-a2ee-3d0ae0d33da1","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"6fa48665-c356-4b0d-8d57-5c5fae76773f","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"f3682593_dag","uuid":"b766446c-47b3-40ac-b58d-174ef3f93585"},"name":"744583cd_runbook_cloned_1"},"type":"user","uuid":"379800dd-1b88-41be-87aa-75f6069ce3a0"},{"description":"","name":"ScaleIn","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"9f62dad3-df1a-41dd-9dd3-61438f8d0d51","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"34b0ea86-261c-42b9-9d29-e3332968f650"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"853cb860_dag"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"6bd2ef84-effc-49e3-a329-59b7d4053ce8","name":"77b729d5_deployment_cloned_1"},"retries":"0","description":"","uuid":"34b0ea86-261c-42b9-9d29-e3332968f650","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale In"}],"description":"","uuid":"d6665b58-7f8f-4d22-a518-5c844d4fba41","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"af0a22e9-e5b2-4beb-ab73-18e9030e3bd8","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"853cb860_dag","uuid":"9f62dad3-df1a-41dd-9dd3-61438f8d0d51"},"name":"9331a25f_runbook_cloned_1"},"type":"user","uuid":"9ed3d84d-4cc5-44dc-b8aa-dcb2162266c3"}],"name":"Azure","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"438d332e-3062-448a-aa37-ee72e70f74c4","value":"azure-kubenetes-cluster","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_NAME"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"is_mandatory":false,"description":"","uuid":"a4fdd512-32fd-4622-8f17-9ba3ffb2a1ff","value":"v1.12.8","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"3417479e-3aa7-4046-8568-125df326e53f","value":"17.03.3.ce","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"8fc3b3a9-ea37-471e-8b5f-aeb3fd92080c","value":"10.200.0.0\/16","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"64353da5-9fa2-4c52-87be-14cfb6224593","value":"10.32.0.0\/24","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_SERVICE_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"39eef4a4-c0b3-4074-a921-a9a862f572c3","value":"10.32.0.10","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_DNS_IP"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"5e165170-32f7-45ce-a20d-98ccaad1b207","value":"flannel","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"}],"uuid":"8e2f4542-a142-4b92-81fa-dac8303d5b8c"},{"deployment_create_list":[{"name":"2cbb2f6a_deployment_cloned_0","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"3","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SM","uuid":"3bf08be3-f50e-4f36-ab3a-bd94ca4332af"},"type":"GREENFIELD","variable_list":[],"uuid":"b79af664-d1dc-4e21-9ca8-0fa93b168ede"},{"name":"39cf7283_deployment_cloned_0","action_list":[],"package_local_reference_list":[{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"}],"description":"","depends_on_list":[],"min_replicas":"3","max_replicas":"9","published_service_local_reference_list":[],"editables":{"min_replicas":true,"max_replicas":true},"substrate_local_reference":{"kind":"app_substrate","name":"VMware_Centos_K8SW","uuid":"ebbe4ed9-d7ab-412b-9ec5-52483784f6ff"},"type":"GREENFIELD","variable_list":[],"uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4"}],"description":"","action_list":[{"description":"","name":"Upgrade","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"30fc9b14-853d-4088-86ac-5ef51205ab74","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Version Minion","uuid":"856d4b07-4268-4d01-97d7-4d67d23f889c"},{"kind":"app_task","name":"Set Version Master","uuid":"23a50a77-6892-4062-9c82-7d6ef389d0b2"},{"kind":"app_task","name":"Upgrade Minion","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178"},{"kind":"app_task","name":"Upgrade Master","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d"},{"kind":"app_task","name":"RestartServices","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Version Master","uuid":"23a50a77-6892-4062-9c82-7d6ef389d0b2"},"edge_type":"user_defined","type":"","uuid":"7e972475-df92-417d-a614-d89abacf86bb","to_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Master","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d"},"edge_type":"user_defined","type":"","uuid":"f5b53dbf-615a-4611-9bda-aaa50b5e57dc","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf"}},{"from_task_reference":{"kind":"app_task","name":"Set Version Minion","uuid":"856d4b07-4268-4d01-97d7-4d67d23f889c"},"edge_type":"user_defined","type":"","uuid":"4772b56c-4bc3-4ac9-a670-c10bb6273cd6","to_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178"}},{"from_task_reference":{"kind":"app_task","name":"Upgrade Minion","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178"},"edge_type":"user_defined","type":"","uuid":"eba27cdd-98f0-45bc-9c0b-7554f58a0126","to_task_reference":{"kind":"app_task","name":"RestartServices","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"6ee65d8a_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"856d4b07-4268-4d01-97d7-4d67d23f889c","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Minion"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"23a50a77-6892-4062-9c82-7d6ef389d0b2","child_tasks_local_reference_list":[],"attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION_NEW}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[],"name":"Set Version Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741","name":"Kubernetes_Worker"},"retries":"0","description":"","uuid":"9924eaf1-6ec7-40fc-babc-9ae6bc74c178","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Worker"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"70e5eb38-dd1d-48e5-b425-1e777ca3615d","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nETCD_VERSION=\"v3.2.11\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Upgrade Master"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"bc3079b6-a66b-4f15-996d-6edbaaf6faaf","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_NAMES=\"@@{VMware_Centos_K8SW.address}@@\"\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'\nKUBE_VERSION_NEW=\"@@{KUBE_VERSION_NEW}@@\"\nMASTER_API_HTTPS=6443\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION_NEW}\/bin\/linux\/amd64\/kubectl\nchmod +x kubectl\nsudo mv kubectl \/usr\/local\/bin\/kubectl\n\ncount=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n  echo \"Trying to reach master server https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} : sleep for 5 secs\"\n  sleep 10\n  if [[ $count -eq 10 ]]; then\n    echo \"Unable to reach master server: https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\"\n    exit 1\n  fi\n  count=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo \"${WORKER_NAMES}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"worker${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=worker${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon worker${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on worker nodes\"\n    exit 1\nfi\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  #kubectl drain \"master${count}\" --ignore-daemonsets --delete-local-data --force\n  #sleep 20\n  ssh -o stricthostkeychecking=no $ip \"sudo yum update -y --quiet && sudo systemctl daemon-reload && sudo systemctl restart kubelet\"\n  sleep 10\n  while [[ `kubectl get nodes -l kubernetes.io\/hostname=master${count} -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\" 2>\/dev\/null` ]]; do sleep 10 ; done\n  #kubectl uncordon master${count}\n  count=$((count+1))\ndone\n\n\nif [[ `kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=Unknown\"` ]]; then \n  echo \"Upgrade failed on nodes: $(kubectl get nodes -o jsonpath='$JSONPATH' | grep 'Ready=Unknown')\"\n    exit 1\nfi"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"RestartServices"}],"description":"","uuid":"8b5a44b6-126e-4bdb-b60a-915ddbe4abba","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"3b8215d1-ed29-4ac3-b680-f88d822dbcb3","value":"v1.13.6","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION_NEW"}],"main_task_local_reference":{"kind":"app_task","name":"6ee65d8a_dag_cloned_1","uuid":"30fc9b14-853d-4088-86ac-5ef51205ab74"},"name":"68a7ffd0_runbook_cloned_0"},"type":"user","uuid":"0a37d2bf-9685-474a-82b3-5d47d4f193b9"},{"description":"","name":"ScaleOut","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"e549fb7d-6107-49f2-bd0c-8b6ee1d0437e","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale Out","uuid":"9f875e0e-71c0-4547-adb6-e44e39dcf3c8"},{"kind":"app_task","name":"Set Hosts file","uuid":"f9f71639-36b4-4594-bc52-c99b8acb1daa"}],"attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Scale Out","uuid":"9f875e0e-71c0-4547-adb6-e44e39dcf3c8"},"edge_type":"user_defined","type":"","uuid":"83b9e564-9f2d-4e44-9c11-8d33fc5c51d0","to_task_reference":{"kind":"app_task","name":"Set Hosts file","uuid":"f9f71639-36b4-4594-bc52-c99b8acb1daa"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"03b33121_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4","name":"39cf7283_deployment_cloned_0"},"retries":"0","description":"","uuid":"9f875e0e-71c0-4547-adb6-e44e39dcf3c8","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale Out"},{"target_any_local_reference":{"kind":"app_service","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02","name":"Kubernetes_Master"},"retries":"0","description":"","uuid":"f9f71639-36b4-4594-bc52-c99b8acb1daa","child_tasks_local_reference_list":[],"attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMINION_IPS=\"@@{VMware_Centos_K8SM.address}@@\"\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  if ! (( $(grep -c \"${ip} minion${count}\" \/etc\/hosts) )) ; then\n  \techo \"${ip} minion${count}\" | sudo tee -a \/etc\/hosts\n  fi\n  count=$((count+1))\ndone"},"timeout_secs":"0","type":"EXEC","variable_list":[],"name":"Set Hosts file"}],"description":"","uuid":"342dc541-27c3-4f0c-a2ef-4a2b04585e95","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"79fd5ae6-1b63-4dec-a5ef-c5b128cf6239","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"03b33121_dag_cloned_1","uuid":"e549fb7d-6107-49f2-bd0c-8b6ee1d0437e"},"name":"00cf5417_runbook_cloned_0"},"type":"user","uuid":"3cebe114-be10-4988-ac0a-e30d7919d546"},{"description":"","name":"ScaleIn","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","uuid":"40914942-97a2-45d0-b11b-d4fbba3fa291","child_tasks_local_reference_list":[{"kind":"app_task","name":"Scale In","uuid":"9fe8e9df-5da8-400e-9472-39493e80253c"}],"attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[],"name":"e72a9133_dag_cloned_1"},{"target_any_local_reference":{"kind":"app_blueprint_deployment","uuid":"4eed8407-738b-4d1b-8a09-d30f81871ad4","name":"39cf7283_deployment_cloned_0"},"retries":"0","description":"","uuid":"9fe8e9df-5da8-400e-9472-39493e80253c","child_tasks_local_reference_list":[],"attrs":{"scaling_count":"@@{COUNT}@@","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[],"name":"Scale In"}],"description":"","uuid":"95fbec67-d355-4929-9d78-a55c8041ca2a","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"a09d963e-5bfd-49b0-9701-9d007b1bafa3","value":"1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"COUNT"}],"main_task_local_reference":{"kind":"app_task","name":"e72a9133_dag_cloned_1","uuid":"40914942-97a2-45d0-b11b-d4fbba3fa291"},"name":"96546f6c_runbook_cloned_0"},"type":"user","uuid":"e98d44ba-9362-4785-94f2-eede18e312b5"}],"name":"VMware","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"3d7bbadb-64f0-4011-aaeb-9087ddbc9725","value":"vmware-kubenetes-cluster","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_NAME"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^v1\\.[0-9]?[0-9]\\.[0-9]?[0-9]$"},"is_mandatory":false,"description":"","uuid":"6d6603a2-0ce1-4f12-bb75-23320f4673e8","value":"v1.12.8","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_VERSION"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"bd605f3a-07e3-4a2e-a451-a1a0cde74675","value":"17.03.3.ce","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["17.03.3.ce","17.06.2.ce","17.09.1.ce","17.12.1.ce","18.03.1.ce","18.06.3.ce"]},"name":"DOCKER_VERSION"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"f1332e7d-0d01-45ba-a51b-ce4567ddc445","value":"10.200.0.0\/16","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_CLUSTER_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\\/\\d{1,2}$"},"is_mandatory":false,"description":"","uuid":"7b24b6ca-aa3b-4337-b803-bb87d263eebb","value":"10.32.0.0\/24","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_SERVICE_SUBNET"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"b5f9c104-d768-4f3c-b78e-d8e1baca507e","value":"10.32.0.10","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"KUBE_DNS_IP"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"81346379-63f0-43c7-9d1b-7f8cfe51452d","value":"flannel","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","options":{"type":"PREDEFINED","choices":["flannel","canal","calico"]},"name":"KUBE_CNI_PLUGIN"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"32d4ce70-0966-4235-bc51-63a34c7af749","value":"10.46.33.243","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"PE_CLUSTER_IP"},{"val_type":"STRING","regex":{"should_validate":true,"value":"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"},"is_mandatory":false,"description":"","uuid":"205d8485-3fcb-4a06-a0eb-bdddc295f708","value":"10.46.33.244","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"PE_DATA_SERVICE_IP"},{"val_type":"STRING","is_mandatory":false,"uuid":"12677f09-3a19-4e05-9577-54329647bc08","name":"PE_USERNAME","value":"admin","label":"","editables":{"value":true},"is_hidden":false,"type":"LOCAL","description":""},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"17b23a8f-578f-45bf-b128-19f440d08a45","label":"","attrs":{"is_secret_modified":false,"secret_reference":{"uuid":"6a818714-97c5-4320-9773-81c8cb1d2479"}},"editables":{"value":true},"is_hidden":false,"type":"SECRET","name":"PE_PASSWORD"},{"val_type":"STRING","is_mandatory":false,"description":"","uuid":"ffa3df65-c01f-4d12-9584-c09ec58df274","value":"default-container-46308","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"type":"LOCAL","name":"PE_CONTAINER_NAME"}],"uuid":"d6df26fe-96d4-4f46-b953-74d58a8f5c4e"}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"CENTOS","uuid":"4f3a2ab6-8527-43ea-a905-59b2db606bfd"},"package_definition_list":[{"uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"name":"AHV_Centos_K8SM_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","name":"dac441af_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},"edge_type":"user_defined","type":"","uuid":"36d1c5b8-2355-426c-ba27-903ebbf6b195","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},"edge_type":"user_defined","type":"","uuid":"1a31216d-aa38-42ed-a18a-60226580df1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},"edge_type":"user_defined","type":"","uuid":"3ba5aff3-4ae7-4fee-b071-1fe06251fcb9","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},"edge_type":"user_defined","type":"","uuid":"1bf63fa5-1194-4c46-a9e1-60dcdb5c8132","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},"edge_type":"user_defined","type":"","uuid":"cf6f6dce-44a8-4ea2-a099-40684682c7bf","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},"edge_type":"user_defined","type":"","uuid":"e6445df3-e8d2-4fc6-a974-b1021fd35bff","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},"edge_type":"user_defined","type":"","uuid":"691a7fe4-bc87-472c-9b45-a30fba2ac0c8","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"2717299b-829f-44ed-9269-537c8807873a"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"fa459083-9e55-46aa-9a22-d925ea033dbd"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"ETCD Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\" | sudo tee -a \/var\/log\/messages\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\" | sudo tee -a \/var\/log\/messages\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone  \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"fac4c7ef-2ed6-4dd3-83cc-a1d82261cae4"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Generate Certs","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{AHV_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${MASTER_IPS},${MINION_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"4b66bf74-489c-4455-a4a0-1506af73b9ab"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Configure Services","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nCONTROLLER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${CONTROLLER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"f03a0a7c-cfcb-4f0b-95f0-a85fce650c06"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Add User Roles","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\nsudo systemctl restart rsyslog\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"1c24f795-cba1-47f9-aedf-0b3f0a3a3ace"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Network Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"19794302-b99d-46e3-b518-b1ce020f8262"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"DNS Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"cb1a4c4c-c574-4a6e-8df5-2cedd3d194bb"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"NVP Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"2717299b-829f-44ed-9269-537c8807873a"}],"name":"8e760b73_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag","uuid":"3d1a79e1-cc0e-4737-a6f7-ce0be6222a96"},"uuid":"c7b76441-19a3-4cef-8dbb-fd5f658ba4bc"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SM_Package","uuid":"88471a37-3dfd-4f44-8685-e438f29eaebd"},"retries":"0","name":"6324786a_dag","type":"DAG","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922"}],"name":"6522ac7a_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag","uuid":"5be222c0-b172-4dc9-a289-e37c0a78c922"},"uuid":"f37483da-d2c8-41b3-8d3f-01bd9a22ab64"}},"variable_list":[],"description":""},{"uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"name":"AHV_Centos_K8SW_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","name":"c1566b3d_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},"edge_type":"user_defined","type":"","uuid":"36a33d61-9fe9-4ebf-9c33-dd90e113e992","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},"edge_type":"user_defined","type":"","uuid":"dfcf0803-d531-4422-bdf7-99c7539461ba","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"45de81a2-97dc-400e-8562-92ea8b6675ba"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ncount=0\n# Verify access to Centos mirror before yum update\ncheck_mirror() {\ncurl -s mirrorlist.centos.org >\/dev\/null | true\nif [ \"${PIPESTATUS[0]}\" -ne 0 ]; then\n    if [ ${count} -lt 60 ]; then\n        echo \"Sleeping for 5 seconds before repeating the check\"\n        sleep 5\n        count=$((count+1))\n        check_mirror\n    else\n        echo \"DNS resolution failed after 5 minutes, exiting\"\n        exit 1\n    fi\nfi\n}\ncheck_mirror\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{AHV_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"0cfca230-d11c-49dd-8d31-1959cf77cc12"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"GetCerts","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AHV_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\nsudo systemctl restart rsyslog\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"161a2fc3-1e7c-479a-9fab-0bc69a2bc94f"}],"name":"9a6e189b_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag","uuid":"bba0e376-0f32-449d-b387-8cffb21bcd84"},"uuid":"41adaccf-ee3f-4483-b1f2-c54f6aaaeed8"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHV_Centos_K8SW_Package","uuid":"0bfe96bd-9045-4bbc-ac6f-529e8b1c1d22"},"retries":"0","name":"abd3357c_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"ecb15850-2381-44a0-9860-8fb287047b97"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Remove Node","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"d91408fa-6bf3-4163-a5e7-0622925b0058"}],"name":"3cb17acf_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag","uuid":"ecb15850-2381-44a0-9860-8fb287047b97"},"uuid":"be888211-a88a-4c3d-9a8b-8100653fbb4a"}},"variable_list":[],"description":""},{"uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"name":"AWS_Centos_K8SM_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","name":"84e097cf_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},"edge_type":"user_defined","type":"","uuid":"393b023b-e6d2-41a4-8c81-dd74bccce4c1","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},"edge_type":"user_defined","type":"","uuid":"364ee192-14bc-45cd-abf0-f85442c23a1a","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},"edge_type":"user_defined","type":"","uuid":"297c9e2b-ae2e-4fe1-b1fb-769d1b0f62fe","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},"edge_type":"user_defined","type":"","uuid":"44f5a8a2-6171-4ac1-b60d-c4f2fd5937ca","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},"edge_type":"user_defined","type":"","uuid":"4b966a75-83ca-4ebb-910f-818f08ea5489","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},"edge_type":"user_defined","type":"","uuid":"c337bb68-9651-4eb1-b6e7-bc5a875249e4","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},"edge_type":"user_defined","type":"","uuid":"76e183c1-30d8-4507-9698-42b6da4461d5","to_task_reference":{"kind":"app_task","name":"EBS VolumePlugin","uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"55acdb58-1cfe-4344-b8ba-63984ab52fe7"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"ETCD Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate etcd \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/xvd{e,f,g}\nsudo vgcreate docker \/dev\/xvd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"1caf9939-4ae2-4fa3-915b-20143c24e99d"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Generate Certs","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{AWS_Centos_K8SW.private_ip_address}@@\" # private Ip's\nMASTER_DNS=\"@@{calm_array_private_dns_name}@@\" # private Dns\nWORKER_DNS=\"@@{AWS_Centos_K8SW.private_dns_name}@@\" # private Dns\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{AWS_Centos_K8SW.public_ip_address}@@\"\nPUBLIC_MASTER_DNS=\"@@{calm_array_public_dns_name}@@\"\nPUBLIC_WORKER_DNS=\"@@{AWS_Centos_K8SW.public_dns_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${MASTER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_MASTER_DNS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${MASTER_DNS},${WORKER_DNS},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},${PUBLIC_MASTER_DNS},${PUBLIC_WORKER_DNS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_DNS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"c26880db-d813-40a9-8c6b-22cc5c8683f0"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Configure Services","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=aws\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=aws\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"2c8da1e4-7ab7-4daf-a823-ce538000e552"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Add User Roles","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"e3ec2877-faa6-488f-b41b-682786900bcb"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Network Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"08475cf3-fb68-4ada-baf5-2dc34077b0d4"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"DNS Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"0d631441-d78d-414f-9dd9-791cf353ca87"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"EBS VolumePlugin","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: gp2\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/aws-ebs\nparameters:\n  type: gp2' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"55e07c60-9b7f-4bde-8880-8442e8aecb41"}],"name":"e836616a_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"84e097cf_dag","uuid":"c2e23c68-664e-41c3-b0d0-12b0a8c13bf2"},"uuid":"98bc65be-bd41-4b3a-b903-7a48c82b7a5f"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SM_Package","uuid":"360d7cfa-93a5-44ae-b51a-bae55d28d29d"},"retries":"0","name":"4226cd9d_dag","type":"DAG","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f"}],"name":"18f2756f_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"4226cd9d_dag","uuid":"0890b69c-6c2d-46dd-ae92-2c3a6eb40a2f"},"uuid":"5288af71-3f06-444e-bac5-4f6645c7bf39"}},"variable_list":[],"description":""},{"uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"name":"AWS_Centos_K8SW_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","name":"a4ecbecd_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},"edge_type":"user_defined","type":"","uuid":"8f7035f9-fc53-4970-98dd-2f01c3bad943","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},"edge_type":"user_defined","type":"","uuid":"8d6c31eb-238b-42f6-b125-10c0f7137eb4","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"663e7ef5-32d0-4ae1-a216-e44bab6f884b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{AWS_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=aws \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/xvd{b,c,d}\nsudo vgcreate docker \/dev\/xvd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"fb981a0f-56c0-4a5e-8656-2ded763e9512"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"GetCerts","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{AWS_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_NAME=\"@@{private_dns_name}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${INSTANCE_NAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_NAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${INSTANCE_NAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${INSTANCE_NAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"7332f3d7-7c56-464c-a201-3cdd0a535e65"}],"name":"dca27b9e_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"a4ecbecd_dag","uuid":"108f9041-c6f6-494d-96a0-2ac279e4841d"},"uuid":"1cab5b33-1c90-4d52-875d-4974dac79237"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AWS_Centos_K8SW_Package","uuid":"cb47a109-2f7f-41cb-9608-37497893ad6a"},"retries":"0","name":"9e5b50bc_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"47206c54-41eb-407c-b91d-525398312c11"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Remove Node","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '@@{private_dns_name}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '@@{private_dns_name}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"47206c54-41eb-407c-b91d-525398312c11"}],"name":"137c8a73_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"9e5b50bc_dag","uuid":"ddb5caf8-ba35-4ea8-81a8-996a7f01bf2e"},"uuid":"1a50e075-b29a-412f-9095-656357789f35"}},"variable_list":[],"description":""},{"uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"name":"GCP_Centos_K8SM_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","name":"e07e43b0_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},"edge_type":"user_defined","type":"","uuid":"de2348c7-2318-4257-9e79-dfb66281958b","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},"edge_type":"user_defined","type":"","uuid":"51d6c43f-d565-4866-a416-61e095af11bd","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},"edge_type":"user_defined","type":"","uuid":"2488676d-2476-40f6-903e-baa4e0df0d58","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"4d5e4193-b8af-4432-974d-2040144412db"},"edge_type":"user_defined","type":"","uuid":"4ebf67a3-1920-4153-b24f-ae45d14eba9f","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},"edge_type":"user_defined","type":"","uuid":"9bd97b41-84b0-450e-9c25-bca582b0a992","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},"edge_type":"user_defined","type":"","uuid":"6a02b957-08e3-40e0-844d-c96e3100ef8a","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},"edge_type":"user_defined","type":"","uuid":"7f2718af-3bff-4d17-8935-31f1e67111fc","to_task_reference":{"kind":"app_task","name":"GCE VolumePlugin","uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"c3507ef4-f826-4e00-9b89-0d285180385f"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"415c8bc6-a287-4763-81cb-2e9266cc37b3"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"ETCD Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"f78daf13-d8c9-4e55-9469-05b288fc18aa"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Generate Certs","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{GCP_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_NAMES=\"@@{calm_array_name}@@\"\nWORKER_NAMES=\"@@{GCP_Centos_K8SW.name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${name},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"797ebeec-a619-44a5-9efa-65ae66ffdc50"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Configure Services","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --cloud-provider=gce\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --cloud-provider=gce\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"4d5e4193-b8af-4432-974d-2040144412db"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Add User Roles","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"6d49547d-c662-47eb-8e1c-06be74acc76f"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Network Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"3f6c129d-e366-480d-b274-af66c5fdc440"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"DNS Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"4b60bb2f-2f38-4569-a7de-43f3a0f4f31b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"GCE VolumePlugin","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo mkdir \"\/etc\/kubernetes\/addons\/volume\"\n\necho 'apiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n  name: standard\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\n  labels:\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: EnsureExists\nprovisioner: kubernetes.io\/gce-pd\nparameters:\n  type: pd-standard' | sudo tee \/etc\/kubernetes\/addons\/volume\/default.yaml\n \nkubectl create -f \/etc\/kubernetes\/addons\/volume\/default.yaml "},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"fa72cb39-0f3b-4924-8810-437208a653a2"}],"name":"26c82c77_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"c3507ef4-f826-4e00-9b89-0d285180385f"},"uuid":"cbbf1fea-9935-4e29-b85c-459ea32c8d49"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SM_Package","uuid":"e0709c6f-cdb4-4692-bc12-83a2ff4b0779"},"retries":"0","name":"6bbde6e8_dag","type":"DAG","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"253ca981-dd06-4471-b4f8-41da954e844b"}],"name":"6eaeef4c_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"253ca981-dd06-4471-b4f8-41da954e844b"},"uuid":"a66cb45b-f6e9-418e-b77e-d2b3bc259c51"}},"variable_list":[],"description":""},{"uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"name":"GCP_Centos_K8SW_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","name":"709f9264_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},"edge_type":"user_defined","type":"","uuid":"360d0984-ea28-4735-9844-52198ccbc247","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},"edge_type":"user_defined","type":"","uuid":"39614adb-74d1-4814-a16d-69dcceba6c1c","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"f1ae356f-3b74-455a-9504-e48987874024"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"70136bad-b339-4b1c-9360-f54c9726ffcc"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{GCP_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --cloud-provider=gce \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"df9ffec2-2e11-4746-961e-604c7908296f"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"GetCerts","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{GCP_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"570ac1c9-ccbe-4dc1-ae86-d73f1139392c"}],"name":"927472a7_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"f1ae356f-3b74-455a-9504-e48987874024"},"uuid":"153e579b-90f5-49bb-94a0-83aa9a483b6e"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"GCP_Centos_K8SW_Package","uuid":"cc8cb4d7-be25-43ce-9544-26224fb1ca0f"},"retries":"0","name":"fef85962_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"4875c892-ff03-473e-88ca-420727baa08e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Remove Node","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nNODE_NAME=${HOSTNAME}\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain '${NODE_NAME}' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node '${NODE_NAME}'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"0067da6e-1bc8-48b0-8876-14dd3d623c68"}],"name":"435393f9_runbook","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"4875c892-ff03-473e-88ca-420727baa08e"},"uuid":"c09a43b0-7ce0-4ed6-b890-e82dd93fc905"}},"variable_list":[],"description":""},{"uuid":"a331e198-bcde-4788-949d-922aed9f7441","action_list":[],"service_local_reference_list":[],"name":"AHV_CENTOS_76","version":"","type":"SUBSTRATE_IMAGE","options":{"type":"","name":"CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"http:\/\/download.nutanix.com\/calm\/CentOS-7-x86_64-1810.qcow2","version":{"product_version":"","type":"","product_name":""},"architecture":"X86_64","type":""},"description":""},"variable_list":[],"description":""},{"uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"name":"Azure_Centos_K8SM_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","name":"e07e43b0_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubenetes Version","uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},"edge_type":"user_defined","type":"","uuid":"84c67d99-e587-4045-9b4a-8d1d64e11f2f","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},"edge_type":"user_defined","type":"","uuid":"abc2a0aa-e191-45b6-820e-e0f3538abf20","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},"edge_type":"user_defined","type":"","uuid":"1c202d0e-aed1-41fb-8042-f1b6ab9aff87","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},"edge_type":"user_defined","type":"","uuid":"22b08f81-dcc4-4593-83fc-817e1bbf4c9c","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},"edge_type":"user_defined","type":"","uuid":"09095f87-8136-4300-af6a-8359190e98c4","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"ef36495e-5700-4513-9066-081aebac27e8"},"edge_type":"user_defined","type":"","uuid":"220a64fd-6fba-4c2b-b0d8-46d76c661023","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Set Kubenetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"f3d72628-0d74-466d-bb99-b40b7ce8e17b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"ETCD Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo yum install -y python-setuptools --quiet\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SW.public_ip_address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone \n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"b61bb1cd-dc8a-4d65-b709-e4e1f834f7fe"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Generate Certs","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\ndeclare -a INSTANCE_IPS\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\" # private Ip's\nWORKER_IPS=\"@@{Azure_Centos_K8SW.private_ip_address}@@\" # private Ip's\nPUBLIC_MASTER_IPS=\"@@{calm_array_public_ip_address}@@\"\nPUBLIC_WORKER_IPS=\"@@{Azure_Centos_K8SM.public_ip_address}@@\"\nINSTANCE_IPS=($(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"))\nMASTER_HOSTNAMES=\"@@{calm_array_name}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS},${PUBLIC_MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \\\n-hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},${PUBLIC_MASTER_IPS},${PUBLIC_WORKER_IPS},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local \\\n-profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${name}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IPS[$count]} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor name in $(echo ${MASTER_NAMES} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:${name} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${name} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"71e535f6-a509-4eab-8944-be480cd9ac1a"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Configure Services","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{calm_array_private_ip_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nMASTER_COUNT=$(echo \"@@{calm_array_private_ip_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${NODE_NAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"48413ff0-9763-4785-873d-5a87ffee4dac"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Add User Roles","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet\nsudo systemctl enable etcd docker kubelet\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\n\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n  \techo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: kube-aws:node-proxier\nsubjects:\n  - kind: User\n    name: kube-worker\n  - kind: ServiceAccount\n    name: kube-proxy\n    namespace: kube-system\n  - kind: Group\n    name: system:nodes\nroleRef:\n  kind: ClusterRole\n  name: system:node-proxier\n  apiGroup: rbac.authorization.k8s.io\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"14a8a805-8fa0-4840-a440-b90c303155cf"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Network Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"ef36495e-5700-4513-9066-081aebac27e8"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"DNS Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"5f446dee-646c-4898-99ee-bf86f9f630bf"}],"name":"26c82c77_runbook_cloned_1","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"e07e43b0_dag","uuid":"250faa3f-a210-4c9a-9143-c6f56ab29fd6"},"uuid":"05600fb8-31df-4c03-a41d-385bb91d9e81"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SM_Package","uuid":"f84fe91c-292a-4bdc-af13-da34cbaf63e5"},"retries":"0","name":"6bbde6e8_dag","type":"DAG","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"0f9788a3-0a58-4392-8990-332824d523e8"}],"name":"6eaeef4c_runbook_cloned_1","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"6bbde6e8_dag","uuid":"0f9788a3-0a58-4392-8990-332824d523e8"},"uuid":"8be039d2-0415-4292-b979-38ad7e7db635"}},"variable_list":[],"description":""},{"uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"name":"Azure_Centos_K8SW_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","name":"709f9264_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},"edge_type":"user_defined","type":"","uuid":"ea04f9e9-ecbf-4446-8a9d-5bb28828dc88","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},"edge_type":"user_defined","type":"","uuid":"1013091b-e1f7-4c0d-a2be-cee94d94fb88","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"3cb25ad6-04b0-43bf-b6d9-7eb2cde2667e"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{private_ip_address}@@\"\nMASTER_IPS=\"@@{Azure_Centos_K8SM.private_ip_address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\n\nsudo yum update -y --quiet\nsudo yum install -y wget socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\n\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"579dd2fd-1bac-43ca-8e00-28b365252ac0"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"GetCerts","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{Azure_Centos_K8SM.private_ip_address[0]}@@\"\nINSTANCE_IP=\"@@{private_ip_address}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\ninstance=\"worker@@{calm_array_index}@@\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${HOSTNAME}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${HOSTNAME},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${HOSTNAME} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${HOSTNAME} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"dc41b2ce-9395-44dd-9cc4-c4ff3b4fdaa6"}],"name":"927472a7_runbook_cloned_1","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"709f9264_dag","uuid":"13c4fd7b-bfd4-4b12-af2c-d5bcac67960c"},"uuid":"f94620bc-4949-44ee-bc7f-608e01c0d345"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Azure_Centos_K8SW_Package","uuid":"2b44dcd2-47d2-4633-85af-90542ed565d9"},"retries":"0","name":"fef85962_dag","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node","uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"5daa2ad8-eb46-45e3-a020-599553a73465"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Remove Node","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"79d551fd-b127-4023-9d70-9a11c5bcc50e"}],"name":"435393f9_runbook_cloned_1","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"fef85962_dag","uuid":"5daa2ad8-eb46-45e3-a020-599553a73465"},"uuid":"4c2ac84a-98fa-4ba9-b21a-9f77ba852f01"}},"variable_list":[],"description":""},{"uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"}],"name":"VMware_Centos_K8SM_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","name":"dac441af_dag_cloned_1","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},"edge_type":"user_defined","type":"","uuid":"b33230cb-473c-4359-8c19-f3169bd93b0c","to_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"}},{"from_task_reference":{"kind":"app_task","name":"ETCD Docker Kubelet Install","uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},"edge_type":"user_defined","type":"","uuid":"664f2f03-c5c8-476a-9813-7c867f54f56b","to_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"}},{"from_task_reference":{"kind":"app_task","name":"Generate Certs","uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},"edge_type":"user_defined","type":"","uuid":"a6a6464f-9bde-4736-b77a-935ab0188d37","to_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"}},{"from_task_reference":{"kind":"app_task","name":"Configure Services","uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},"edge_type":"user_defined","type":"","uuid":"97a7b380-e840-4072-a4fb-5afcd7fb3dcf","to_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"}},{"from_task_reference":{"kind":"app_task","name":"Add User Roles","uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},"edge_type":"user_defined","type":"","uuid":"31f20fbf-0aa5-4f3a-b480-88fb48d2f10d","to_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"}},{"from_task_reference":{"kind":"app_task","name":"Network Configuration","uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},"edge_type":"user_defined","type":"","uuid":"6aa5d7f0-e9e7-42f6-a131-94dc90120fa5","to_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"}},{"from_task_reference":{"kind":"app_task","name":"DNS Configuration","uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},"edge_type":"user_defined","type":"","uuid":"db45a437-f025-42d7-81ea-bb5c23a19f8f","to_task_reference":{"kind":"app_task","name":"NVP Configuration","uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"e1d89559-6363-4a4e-8c56-a5052bdda19b"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"ETCD Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo easy_install netaddr\n\nETCD_VERSION=\"v3.3.12\"\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nNODE_NAME=\"master@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p \/opt\/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CONFIG_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} master${count}\" | sudo tee -a \/etc\/hosts\n  CON+=\"master${count}=https:\/\/${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's\/,$\/\/')\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} worker${count}\" | sudo tee -a \/etc\/hosts\n  count=$((count+1))\ndone   \n    \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/github.com\/coreos\/etcd\/releases\/download\/${ETCD_VERSION}\/etcd-${ETCD_VERSION}-linux-amd64.tar.gz\"\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\nchmod +x kubelet\nsudo mv kubelet \/usr\/bin\/kubelet\n\n# -*- Bootstrapping a H\/A etcd cluster.\ntar -xvf etcd-${ETCD_VERSION}-linux-amd64.tar.gz\nsudo mv etcd-${ETCD_VERSION}-linux-amd64\/etcd* \/usr\/bin\/\nrm -rf etcd-${ETCD_VERSION}-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https:\/\/github.com\/coreos\n\n[Service]\nExecStart=\/usr\/bin\/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}\/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}\/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}\/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}\/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}\/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https:\/\/${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT},http:\/\/127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https:\/\/${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=\/var\/lib\/etcd \\\\\n  --wal-dir=\/var\/lib\/etcd\/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/etcd.service\n\necho \"if \\$programname == 'etcd' then \/var\/log\/etcd.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/etcd.conf\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/master=true' \\\\\n  --node-labels 'node-role.kubernetes.io\/etcd=true' \\\\\n  --register-with-taints=node-role.kubernetes.io\/master=true:NoSchedule \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\nsudo mkdir -p \/var\/lib\/docker \/var\/lib\/etcd\/wal\n\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate etcd \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n etcd_lvm etcd\nsudo mkfs.xfs \/dev\/etcd\/etcd_lvm\n\nsudo pvcreate \/dev\/sd{e,f,g}\nsudo vgcreate docker \/dev\/sd{e,f,g}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/etcd\/etcd_lvm \\t \/var\/lib\/etcd \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error \"https:\/\/storage.googleapis.com\/kubernetes-helm\/helm-v2.8.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.8.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64\/helm\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\nsudo mv kubectl linux-amd64\/helm \/usr\/local\/bin\/\nrm -rf helm-v2.8.2-linux-amd64.tar.gz linux-amd64"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"c32d59e9-3a4f-468c-88d8-c324fb9646ee"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Generate Certs","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nWORKER_IPS=\"@@{VMware_Centos_K8SW.address}@@\"\nMASTER_API_HTTPS=6443\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  CONS_NAMES+=\"master${count}\",\n  count=$((count+1))\ndone\n\nMASTER_NAMES=$(echo $CONS_NAMES | sed  's\/,$\/\/')\n  \ncount=0\nfor ip in $(echo ${WORKER_IPS} | tr \",\" \"\\n\"); do\n  MIN_NAMES+=\"worker${count}\",\n  count=$((count+1))\ndone\nWORKER_NAMES=$(echo $MIN_NAMES | sed  's\/,$\/\/')  \n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\nsudo chown -R $USER:$USER \/opt\/kube-ssl && cd \/opt\/kube-ssl\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${MASTER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${MASTER_NAMES},${MASTER_IPS},${WORKER_NAMES},${WORKER_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"master${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=master${count}.kubeconfig\nkubectl config set-credentials system:node:master${count} --client-certificate=master${count}.pem --client-key=master${count}-key.pem --embed-certs=true --kubeconfig=master${count}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:master${count} --kubeconfig=master${count}.kubeconfig\nkubectl config use-context default --kubeconfig=master${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 \/dev\/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa\n\ncount=0\nfor ip in $(echo ${MASTER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"master${count}\"\n  scp -o stricthostkeychecking=no admin*.pem ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"333ac2f8-f403-4a12-b925-f943dfca6fc1"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Configure Services","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{VERSION}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nETCD_CERT_PATH=\"\/etc\/ssl\/certs\/etcd\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nMASTER_API_HTTPS=6443\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_COUNT=$(echo \"@@{calm_array_address}@@\" | tr ',' '\\n' | wc -l)\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}\/\nsudo chmod +r ${ETCD_CERT_PATH}\/*\n\ncount=0\nfor ip in $(echo \"${MASTER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https:\/\/${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's\/,$\/\/')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\n  labels:\n    k8s-app: kube-apiserver\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - apiserver\n    - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,EventRateLimit\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=false\n    - --secure-port=${MASTER_API_HTTPS}\n    - --profiling=false\n    - --apiserver-count=${MASTER_COUNT}\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=\/var\/lib\/audit.log\n    - --authorization-mode=Node,RBAC\n    - --bind-address=0.0.0.0\n    - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --storage-backend=etcd3\n    - --etcd-cafile=${ETCD_CERT_PATH}\/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}\/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}\/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}\/encryption-config.yaml\n    - --admission-control-config-file=${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n    - --tls-cert-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-certificate-authority=${KUBE_CERT_PATH}\/ca.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --kubelet-https=true\n    - --runtime-config=api\/all\n    - --service-account-key-file=${KUBE_CERT_PATH}\/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --v=2\n    ports:\n    - containerPort: ${MASTER_API_HTTPS}\n      hostPort: ${MASTER_API_HTTPS}\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-apiserver.yaml\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\n  labels:\n    k8s-app: kube-controller-manager\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - controller-manager\n    - --bind-address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=${KUBE_CLUSTER_NAME}\n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}\/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}\/kubernetes-key.pem\n    - --root-ca-file=${KUBE_CERT_PATH}\/ca.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/etc\/pki\n      name: ca-certs-etc-pki\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/etc\/pki\n    name: ca-certs-etc-pki\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-controller-manager.yaml\n   \ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\napiVersion: kubescheduler.config.k8s.io\/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-scheduler.kubeconfig\"\nleaderElection:\n  leaderElect: true\nEOF\n   \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-scheduler\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - scheduler\n    - --config=${KUBE_CONFIG_PATH}\/kube-scheduler.yaml\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: \/healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-scheduler.yaml\n    \necho \"kind: AdmissionConfiguration\napiVersion: apiserver.k8s.io\/v1alpha1\nplugins:\n- name: EventRateLimit\n  path: eventconfig.yaml\" | sudo tee ${KUBE_CERT_PATH}\/admission-control-config-file.yaml\n  \necho \"kind: Configuration\napiVersion: eventratelimit.admission.k8s.io\/v1alpha1\nlimits:\n- type: Namespace\n  qps: 50\n  burst: 100\n  cacheSize: 2000\n- type: User\n  qps: 10\n  burst: 50\" | sudo tee ${KUBE_CERT_PATH}\/eventconfig.yaml"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"2a02b569-a940-4a98-8128-9cd8902936d8"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Add User Roles","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_API_HTTPS=6443\nINTERNAL_IP=\"@@{address}@@\"\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\n\nsudo systemctl start etcd docker kubelet iscsid\nsudo systemctl enable etcd docker kubelet iscsid\n\nexport PATH=$PATH:\/opt\/bin\n\nmkdir CA\nmv admin*.pem ca*.pem etcd-*.pem kubernetes*.pem master* kube-*.kubeconfig encryption-config.yaml CA\/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\ncp \/opt\/kube-ssl\/admin*.pem CA\/\nCOUNT=0\nwhile [[ $(curl --key CA\/admin-key.pem --cert CA\/admin.pem --cacert CA\/ca.pem https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n  sleep 5\n  COUNT=$(($COUNT+1))\n  if [[ $COUNT -eq 50 ]]; then\n    echo \"Error: creating cluster\"\n    exit 1\n  fi\ndone\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME}  --certificate-authority=$HOME\/CA\/ca.pem  --embed-certs=true --server=https:\/\/${INTERNAL_IP}:${MASTER_API_HTTPS}\nkubectl config set-credentials admin  --client-certificate=$HOME\/CA\/admin.pem  --client-key=$HOME\/CA\/admin-key.pem\nkubectl config set-context ${KUBE_CLUSTER_NAME}  --cluster=${KUBE_CLUSTER_NAME}  --user=admin\nkubectl config use-context ${KUBE_CLUSTER_NAME}\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n  name: system:kube-apiserver-to-kubelet\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/proxy\n      - nodes\/stats\n      - nodes\/log\n      - nodes\/spec\n      - nodes\/metrics\n    verbs:\n      - \"*\"\nEOF\n\ncat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:kube-apiserver\n  namespace: \"\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-apiserver-to-kubelet\nsubjects:\n  - apiGroup: rbac.authorization.k8s.io\n    kind: User\n    name: kubernetes\nEOF"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"b0d272d0-4449-4e89-ae7e-f72baafd2815"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"Network Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nexport PATH=$PATH:\/opt\/bin\nif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ]]; then\nsudo mkdir -p \/etc\/kubernetes\/addons\/canal\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  canal_iface: \"\"\n\n  masquerade: \"true\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: canal\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-canal.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            - name: IP\n              value: \"\"\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"192.168.0.0\/16\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: \/readiness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n        - name: kube-flannel\n          image: quay.io\/coreos\/flannel:v0.9.1\n          command: [ \"\/opt\/bin\/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - mountPath: \/run\/xtables.lock\n            name: xtables-lock\n            readOnly: false\n          - name: flannel-cfg\n            mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: canal-flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: canal-calico\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: canal\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/canal\/canal.yml\nkubectl create -f \/etc\/kubernetes\/addons\/canal\/canal.yml\n\nelif [[ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]];then\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/calico\necho 'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  typha_service_name: \"none\"\n  calico_backend: \"bird\"\n\n  veth_mtu: \"1440\"\n\n  cni_network_config: |-\n    {\n      \"name\": \"k8s-pod-network\",\n      \"cniVersion\": \"0.3.0\",\n      \"plugins\": [\n        {\n          \"type\": \"calico\",\n          \"log_level\": \"info\",\n          \"datastore_type\": \"kubernetes\",\n          \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n          \"mtu\": __CNI_MTU__,\n          \"ipam\": {\n            \"type\": \"host-local\",\n            \"subnet\": \"usePodCidr\"\n          },\n          \"policy\": {\n              \"type\": \"k8s\"\n          },\n          \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        }\n      ]\n    }\n\n---\n\nkind: DaemonSet\napiVersion: extensions\/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n    spec:\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      hostNetwork: true\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n      serviceAccountName: calico-node\n      terminationGracePeriodSeconds: 0\n      initContainers:\n        - name: install-cni\n          image: calico\/cni:v3.5.4\n          command: [\"\/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CNI_MTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: SLEEP\n              value: \"false\"\n          volumeMounts:\n            - mountPath: \/host\/opt\/cni\/bin\n              name: cni-bin-dir\n            - mountPath: \/host\/etc\/cni\/net.d\n              name: cni-net-dir\n      containers:\n        - name: calico-node\n          image: calico\/node:v3.5.4\n          env:\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s,bgp\"\n            - name: IP\n              value: \"autodetect\"\n            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"\n            - name: FELIX_IPINIPMTU\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: veth_mtu\n            - name: CALICO_IPV4POOL_CIDR\n              value: \"@@{KUBE_CLUSTER_SUBNET}@@\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            - name: FELIX_LOGSEVERITYSCREEN\n              value: \"info\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: \/liveness\n              port: 9099\n              host: localhost\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            exec:\n              command:\n              - \/bin\/calico-node\n              - -bird-ready\n              - -felix-ready\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: \/lib\/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: \/run\/xtables.lock\n              name: xtables-lock\n              readOnly: false\n            - mountPath: \/var\/run\/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: \/var\/lib\/calico\n              name: var-lib-calico\n              readOnly: false\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: \/lib\/modules\n        - name: var-run-calico\n          hostPath:\n            path: \/var\/run\/calico\n        - name: var-lib-calico\n          hostPath:\n            path: \/var\/lib\/calico\n        - name: xtables-lock\n          hostPath:\n            path: \/run\/xtables.lock\n            type: FileOrCreate\n        - name: cni-bin-dir\n          hostPath:\n            path: \/opt\/cni\/bin\n        - name: cni-net-dir\n          hostPath:\n            path: \/etc\/cni\/net.d\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n   name: felixconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: FelixConfiguration\n    plural: felixconfigurations\n    singular: felixconfiguration\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgppeers.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPPeer\n    plural: bgppeers\n    singular: bgppeer\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: bgpconfigurations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: BGPConfiguration\n    plural: bgpconfigurations\n    singular: bgpconfiguration\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: hostendpoints.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: HostEndpoint\n    plural: hostendpoints\n    singular: hostendpoint\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: clusterinformations.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: ClusterInformation\n    plural: clusterinformations\n    singular: clusterinformation\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworksets.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkSet\n    plural: globalnetworksets\n    singular: globalnetworkset\n\n---\n\napiVersion: apiextensions.k8s.io\/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networkpolicies.crd.projectcalico.org\nspec:\n  scope: Namespaced\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: NetworkPolicy\n    plural: networkpolicies\n    singular: networkpolicy\n---\n\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: calico-node\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - nodes\n      - namespaces\n    verbs:\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - endpoints\n      - services\n    verbs:\n      - watch\n      - list\n      - get\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n      - update\n  - apiGroups: [\"networking.k8s.io\"]\n    resources:\n      - networkpolicies\n    verbs:\n      - watch\n      - list\n  - apiGroups: [\"\"]\n    resources:\n      - pods\n      - namespaces\n      - serviceaccounts\n    verbs:\n      - list\n      - watch\n  - apiGroups: [\"\"]\n    resources:\n      - pods\/status\n    verbs:\n      - patch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - globalfelixconfigs\n      - felixconfigurations\n      - bgppeers\n      - globalbgpconfigs\n      - bgpconfigurations\n      - ippools\n      - globalnetworkpolicies\n      - globalnetworksets\n      - networkpolicies\n      - clusterinformations\n      - hostendpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - ippools\n      - felixconfigurations\n      - clusterinformations\n    verbs:\n      - create\n      - update\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups: [\"crd.projectcalico.org\"]\n    resources:\n      - bgpconfigurations\n      - bgppeers\n    verbs:\n      - create\n      - update\n---\napiVersion: rbac.authorization.k8s.io\/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: calico-node\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: calico-node\nsubjects:\n- kind: ServiceAccount\n  name: calico-node\n  namespace: kube-system' | sudo tee \/etc\/kubernetes\/addons\/calico\/calico.yml\nkubectl create -f \/etc\/kubernetes\/addons\/calico\/calico.yml  \n\nelse\n  echo \"Defaulting to flannel\"\n\nsudo mkdir -p \/etc\/kubernetes\/addons\/flannel\necho '---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n  - kind: ServiceAccount\n    name: flannel\n    namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"hairpinMode\": true,\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"@@{KUBE_CLUSTER_SUBNET}@@\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: apps\/v1beta2 #extensions\/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  selector:\n    matchLabels:\n      app: flannel\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io\/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io\/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      containers:\n      - name: kube-flannel\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command:\n        - \/opt\/bin\/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n          limits:\n            cpu: \"100m\"\n            memory: \"50Mi\"\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: \/run\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      - name: install-cni\n        image: quay.io\/coreos\/flannel:v0.10.0-amd64\n        command: [ \"\/bin\/sh\", \"-c\", \"set -e -x; cp -f \/etc\/kube-flannel\/cni-conf.json \/etc\/cni\/net.d\/10-flannel.conf; while true; do sleep 3600; done\" ]\n        volumeMounts:\n        - name: cni\n          mountPath: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          mountPath: \/etc\/kube-flannel\/\n      volumes:\n        - name: run\n          hostPath:\n            path: \/run\n        - name: cni\n          hostPath:\n            path: \/etc\/cni\/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | sudo tee \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nkubectl create -f \/etc\/kubernetes\/addons\/flannel\/kube-flannel.yml\nfi\n\nsleep 15\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"920c5c3d-1339-45d1-8c2f-8d14cf0217a3"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"DNS Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/coredns \necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io\/cluster-service: \"true\"\n      addonmanager.kubernetes.io\/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io\/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io\/autoupdate: \"true\"\n  labels:\n    kubernetes.io\/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io\/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io\/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local. in-addr.arpa ip6.arpa {\n            pods insecure\n            upstream\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . \/etc\/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      serviceAccountName: coredns\n      tolerations:\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      nodeSelector:\n        beta.kubernetes.io\/os: linux\n      containers:\n      - name: coredns\n        image: k8s.gcr.io\/coredns:1.3.1\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"\/etc\/coredns\/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/coredns\n          readOnly: true\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: \/health\n            port: 8080\n            scheme: HTTP\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  annotations:\n    prometheus.io\/port: \"9153\"\n    prometheus.io\/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\n    kubernetes.io\/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_DNS_IP}@@\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n  - name: metrics\n    port: 9153\n    protocol: TCP' | sudo tee \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n    \nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/coredns.yaml\n      \necho 'kind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"replicationcontrollers\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"extensions\"]\n    resources: [\"deployments\/scale\", \"replicasets\/scale\"]\n    verbs: [\"get\", \"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: system:kube-dns-autoscaler\n  labels:\n    addonmanager.kubernetes.io\/mode: Reconcile\nsubjects:\n  - kind: ServiceAccount\n    name: kube-dns-autoscaler\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: system:kube-dns-autoscaler\n  apiGroup: rbac.authorization.k8s.io\n\n---\napiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: kube-dns-autoscaler\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns-autoscaler\n    kubernetes.io\/cluster-service: \"true\"\n    addonmanager.kubernetes.io\/mode: Reconcile\nspec:\n  selector:\n    matchLabels:\n      k8s-app: kube-dns-autoscaler\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns-autoscaler\n      annotations:\n        scheduler.alpha.kubernetes.io\/critical-pod: \"\"\n        seccomp.security.alpha.kubernetes.io\/pod: \"docker\/default\"\n    spec:\n      priorityClassName: system-cluster-critical\n      containers:\n      - name: autoscaler\n        image: k8s.gcr.io\/cluster-proportional-autoscaler-amd64:1.2.0\n        resources:\n            requests:\n                cpu: \"20m\"\n                memory: \"10Mi\"\n        command:\n          - \/cluster-proportional-autoscaler\n          - --namespace=kube-system\n          - --configmap=kube-dns-autoscaler\n          - --target=Deployment\/coredns\n          - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\n          - --logtostderr=true\n          - --v=2\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      serviceAccountName: kube-dns-autoscaler' | sudo tee \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n\nkubectl create -f \/etc\/kubernetes\/addons\/coredns\/kube-dns-autoscaler.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"d2653ba6-6b0a-41b5-afd9-27f5c6211f95"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Master","uuid":"25501730-4348-480b-a57b-2c8d3cd60e02"},"retries":"0","name":"NVP Configuration","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nPRISM_CLUSTER_IP=\"@@{PE_CLUSTER_IP}@@\"\nPRISM_DATA_SERVICE_IP=\"@@{PE_CLUSTER_IP}@@\"\n\nif [[ (\"${PRISM_CLUSTER_IP}x\" == \"x\") && (\"${PRISM_DATA_SERVICE_IP}x\" == \"x\") ]]; then exit 0; fi\nexport PATH=$PATH:\/opt\/bin\n\nsudo mkdir \/etc\/kubernetes\/addons\/volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PE_USERNAME}@@:@@{PE_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io\/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions\/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx\/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io\/v1\nmetadata:\n  name: silver \n  namespace: kube-system\n  annotations:\n    storageclass.beta.kubernetes.io\/is-default-class: \"true\"\nprovisioner: nutanix\/abs\nparameters:\n     prismEndPoint: @@{PE_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PE_DATA_SERVICE_IP}@@:3260\n     secretName: ntnx-secret\n     storageContainer: @@{PE_CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | sudo tee \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix\/abs\" | sudo tee -a \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nsudo sed -i \"s\/<SECRET>\/${NTNX_SECRET}\/\" \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\nkubectl create -f \/etc\/kubernetes\/addons\/volume_plugin\/ntnx-secret.yaml\n"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"c7929ffd-415a-4d55-acc5-5d4ef85249dd"}],"name":"8e760b73_runbook_cloned_0","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"dac441af_dag_cloned_1","uuid":"8a9428d9-2109-4354-aff1-59b85dc289ec"},"uuid":"ec76e5c3-3834-40e3-b20e-691aa2f24993"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SM_Package","uuid":"34b0ba77-4699-45b0-81d6-c9d68247a932"},"retries":"0","name":"6324786a_dag_cloned_1","type":"DAG","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84"}],"name":"6522ac7a_runbook_cloned_0","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"6324786a_dag_cloned_1","uuid":"91640d79-3aa7-4080-b7a5-22723c4dfd84"},"uuid":"b9d97fc5-1218-436b-a94b-8376330c44a0"}},"variable_list":[],"description":""},{"uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8","action_list":[],"service_local_reference_list":[{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"}],"name":"VMware_Centos_K8SW_Package","version":"","type":"DEB","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","name":"c1566b3d_dag_cloned_1","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}],"state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Kubernetes Version","uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},"edge_type":"user_defined","type":"","uuid":"eb4975a9-1417-4655-9682-e07eece42cc3","to_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"}},{"from_task_reference":{"kind":"app_task","name":"Docker Kubelet Install","uuid":"08451110-787b-413e-a105-856c60cdacb6"},"edge_type":"user_defined","type":"","uuid":"446e72a6-a593-4d15-8747-09aa5e195b77","to_task_reference":{"kind":"app_task","name":"GetCerts","uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}}],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"66da72b5-5c38-41f3-b080-0e64a774af37"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Set Kubernetes Version","type":"SET_VARIABLE","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"exit_status":[],"script":"#script\n#if \"@@{calm_array_index}@@\" == \"0\":\nprint \"VERSION=@@{KUBE_VERSION}@@\"","eval_variables":["VERSION"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"4fdff569-caf2-49c1-832e-47beb015f82d"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Docker Kubelet Install","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_VERSION=\"@@{calm_array_VERSION[0]}@@\"\nINTERNAL_IP=\"@@{address}@@\"\nMASTER_IPS=\"@@{VMware_Centos_K8SM.address}@@\"\nNODE_NAME=\"worker@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{KUBE_CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{KUBE_SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_DNS_IP}@@\"\nDOCKER_VERSION=\"@@{DOCKER_VERSION}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nKUBE_MANIFEST_PATH=\"\/etc\/kubernetes\/manifests\"\nKUBE_CONFIG_PATH=\"\/etc\/kubernetes\/config\"\nKUBE_CNI_BIN_PATH=\"\/opt\/cni\/bin\"\nKUBE_CNI_CONF_PATH=\"\/etc\/cni\/net.d\"\nETCD_SERVER_PORT=2379\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH} ${KUBE_CONFIG_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y --quiet\nsudo yum install -y iscsi-initiator-utils socat --quiet\n\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/github.com\/containernetworking\/plugins\/releases\/download\/v0.7.5\/cni-plugins-amd64-v0.7.5.tgz\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubelet\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/storage.googleapis.com\/kubernetes-release\/release\/${KUBE_VERSION}\/bin\/linux\/amd64\/kubectl\ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssl_linux-amd64 \ncurl -C - -L -O --retry 6 --retry-max-time 60 --retry-delay 60 --silent --show-error https:\/\/pkg.cfssl.org\/R1.2\/cfssljson_linux-amd64\nchmod +x kubelet kubectl cfssl_linux-amd64 cfssljson_linux-amd64\nsudo mv kubelet kubectl \/usr\/bin\/\nsudo mv cfssl_linux-amd64 \/usr\/local\/bin\/cfssl\nsudo mv cfssljson_linux-amd64 \/usr\/local\/bin\/cfssljson\n\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nif [[ \"${DOCKER_VERSION}\" == \"17.03.3.ce\" ]]; then\n  sudo yum install -y --quiet --setopt=obsoletes=0 docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nelse\n  sudo yum install -y --quiet docker-ce-${DOCKER_VERSION} docker-ce-selinux-${DOCKER_VERSION}\nfi\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo usermod -a -G docker $USER\n\nsudo mkdir -p \/etc\/docker\necho '{\n  \"storage-driver\": \"overlay\"\n}' | sudo tee \/etc\/docker\/daemon.json\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}\/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v*.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v*.tgz\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kubelet-config.yaml\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io\/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    enabled: true\n  x509:\n    clientCAFile: \"${KUBE_CERT_PATH}\/ca.pem\"\nauthorization:\n  mode: Webhook\nclusterDomain: \"cluster.local\"\nclusterDNS:\n  - \"${KUBE_CLUSTER_DNS}\"\nstaticPodPath: \"${KUBE_MANIFEST_PATH}\"\npodCIDR: \"${CLUSTER_SUBNET}\"\nruntimeRequestTimeout: \"10m\"\ntlsCertFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}.pem\"\ntlsPrivateKeyFile: \"${KUBE_CERT_PATH}\/${NODE_NAME}-key.pem\"\nreadOnlyPort: 0\nprotectKernelDefaults: false\nmakeIPTablesUtilChains: true\neventRecordQPS: 0\nkubeletCgroups: \"\/systemd\/system.slice\"\nevictionHard:\n  memory.available: \"200Mi\"\n  nodefs.available:  \"10%\"\n  nodefs.inodesFree: \"5%\"\nEOF\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https:\/\/github.com\/GoogleCloudPlatform\/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=\/usr\/bin\/kubelet \\\\\n  --config=${KUBE_CONFIG_PATH}\/kubelet-config.yaml \\\\\n  --container-runtime=docker \\\\\n  --kubeconfig=${KUBE_CERT_PATH}\/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --register-node=true \\\\\n  --runtime-cgroups=\/systemd\/system.slice \\\\\n  --node-labels 'node-role.kubernetes.io\/worker=true' \\\\\n  --node-labels 'beta.kubernetes.io\/fluentd-ds-ready=true' \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee \/etc\/systemd\/system\/kubelet.service\n\necho \"if \\$programname == 'kubelet' then \/var\/log\/kubelet.log\n& stop\" | sudo tee \/etc\/rsyslog.d\/kubelet.conf\n\ncat <<EOF | sudo tee ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nkind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io\/v1alpha1\nclientConnection:\n  kubeconfig: \"${KUBE_CERT_PATH}\/kube-proxy.kubeconfig\"\nmode: \"iptables\"\nclusterCIDR: \"${CLUSTER_SUBNET}\"\niptables:\n  masqueradeAll: true\nEOF\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\n  labels:\n    k8s-app: kube-proxy\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: gcr.io\/google-containers\/hyperkube:${KUBE_VERSION}\n    command:\n    - \/hyperkube\n    - proxy\n    - --config=${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: \/etc\/ssl\/certs\n      name: ssl-certs-host\n      readOnly: true\n    - mountPath: \/lib\/modules\n      name: lib-modules-host\n      readOnly: true\n    - mountPath: ${KUBE_CONFIG_PATH}\n      name: kube-config-path\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: \/etc\/ssl\/certs\n    name: ssl-certs-host\n  - hostPath:\n      path: \/lib\/modules\n    name: lib-modules-host\n  - hostPath:\n      path: ${KUBE_CONFIG_PATH}\n    name: kube-config-path\" | sudo tee ${KUBE_MANIFEST_PATH}\/kube-proxy.yaml\n    \nif [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"canal\" ] ||  [ \"@@{KUBE_CNI_PLUGIN}@@\" == \"calico\" ]; then\n\tsudo sed -i '\/masqueradeAll\/d' ${KUBE_CONFIG_PATH}\/kube-proxy-config.yaml\nfi \n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee \/etc\/iscsi\/initiatorname.iscsi\n\nsudo mkdir -p \/var\/lib\/docker\nsudo yum install -y lvm2 --quiet\nsudo pvcreate \/dev\/sd{b,c,d}\nsudo vgcreate docker \/dev\/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs \/dev\/docker\/docker_lvm\n\necho -e \"\/dev\/docker\/docker_lvm \\t \/var\/lib\/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\nsudo mount -a\n\necho 'exclude=docker*' | sudo tee -a \/etc\/yum.conf\n\necho \"@@{CENTOS.secret}@@\" | tee ~\/.ssh\/id_rsa\nchmod 400 ~\/.ssh\/id_rsa"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"08451110-787b-413e-a105-856c60cdacb6"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"GetCerts","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nKUBE_CLUSTER_NAME=\"@@{KUBE_CLUSTER_NAME}@@\"\nMASTER_IP=\"@@{VMware_Centos_K8SM.address[0]}@@\"\nINSTANCE_IP=\"@@{address}@@\"\ninstance=\"worker@@{calm_array_index}@@\"\nKUBE_CERT_PATH=\"\/etc\/kubernetes\/ssl\"\nMASTER_API_HTTPS=6443\n\nsudo systemctl start iscsid\n\nwhile [ ! $(ssh -o stricthostkeychecking=no $MASTER_IP \"ls \/opt\/kube-ssl\/encryption-config.yaml 2>\/dev\/null\") ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; if [[ $count -eq 600 ]]; then echo \"failed to download certs\" && exit 1; fi; count=$(($count+5)) ; done\n\nscp -o stricthostkeychecking=no ${MASTER_IP}:\/opt\/kube-ssl\/{ca*.pem,kubernetes*.pem,kube-proxy.kubeconfig,ca-config.json} .\n\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${INSTANCE_IP} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\n\nkubectl config set-cluster ${KUBE_CLUSTER_NAME} --certificate-authority=ca.pem --embed-certs=true --server=https:\/\/${MASTER_IP}:${MASTER_API_HTTPS} --kubeconfig=${instance}.kubeconfig\nkubectl config set-credentials system:node:${instance} --client-certificate=${instance}.pem --client-key=${instance}-key.pem --embed-certs=true --kubeconfig=${instance}.kubeconfig\nkubectl config set-context default --cluster=${KUBE_CLUSTER_NAME} --user=system:node:${instance} --kubeconfig=${instance}.kubeconfig\nkubectl config use-context default --kubeconfig=${instance}.kubeconfig\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}\/\nsudo chmod +r ${KUBE_CERT_PATH}\/*\n\nrm -rf ${instance}-csr.json"},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"1b7b50e5-bba2-4353-8f50-221eb866e032"}],"name":"9a6e189b_runbook_cloned_0","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"c1566b3d_dag_cloned_1","uuid":"66da72b5-5c38-41f3-b080-0e64a774af37"},"uuid":"b6fc6d75-adf6-4259-a25f-01ad7be70f3a"},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"VMware_Centos_K8SW_Package","uuid":"ae111cbf-6e60-43a3-b024-508d8c5f4ca8"},"retries":"0","name":"abd3357c_dag_cloned_1","type":"DAG","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove Node_cloned_1","uuid":"55b07167-8260-4b8c-bee1-75414427b28b"}],"state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35"},{"target_any_local_reference":{"kind":"app_service","name":"Kubernetes_Worker","uuid":"7e998d4c-0217-4328-aae1-07c1bccfa741"},"retries":"0","name":"Remove Node","type":"EXEC","description":"","child_tasks_local_reference_list":[],"state":"ACTIVE","attrs":{"script_type":"sh","type":"","command_line_args":"","exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nMASTER_IP=\"@@{Kubernetes_Master.address[0]}@@\"\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl drain 'worker@@{calm_array_index}@@' --ignore-daemonsets --delete-local-data --force\"\nsleep 10\nssh -o stricthostkeychecking=no ${MASTER_IP} \"kubectl delete node 'worker@@{calm_array_index}@@'\""},"timeout_secs":"0","message_list":[],"variable_list":[],"uuid":"55b07167-8260-4b8c-bee1-75414427b28b"}],"name":"3cb17acf_runbook_cloned_0","description":"","state":"ACTIVE","variable_list":[],"message_list":[],"main_task_local_reference":{"kind":"app_task","name":"abd3357c_dag_cloned_1","uuid":"a5351c5c-e0c5-4ea0-91c0-116a07880a35"},"uuid":"eb5ca7b2-03bd-4e47-80f4-ed8d4e5680ea"}},"variable_list":[],"description":""},{"uuid":"1909f332-0c57-4f68-8d85-3f4baa3e5f9e","action_list":[],"service_local_reference_list":[],"name":"ESX_CENTOS_76","version":"","type":"SUBSTRATE_IMAGE","options":{"type":"","name":"CENTOS_76","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"http:\/\/filer.dev.eng.nutanix.com:8080\/GoldImages\/NuCalm\/Ova%20files\/CentOS-7-x86_64-1810.ova","version":{"product_version":"","type":"","product_name":""},"architecture":"X86_64","type":""},"description":""},"variable_list":[],"description":""}],"client_attrs":{"ba6abd76-7c67-4d05-a1c5-9fc1def3a647":{"y":151.1603651085,"x":418},"24f1ad70-c385-4df3-9589-b425215cc9e9":{"y":151.1603651085,"x":418},"b95f5e0e-149f-41a8-ba6b-8a3ed1253913":{"y":413.0940071326,"x":768.9612911807},"6bd2ef84-effc-49e3-a329-59b7d4053ce8":{"y":413.0940071326,"x":768.9612911807},"b79af664-d1dc-4e21-9ca8-0fa93b168ede":{"y":151.1603651085,"x":418},"a5e1d602-fe1e-4111-985e-37bd05f0dfb8":{"y":413.0940071326,"x":768.9612911807},"de2fd75c-95bc-4790-897d-96edbcd5bddb":{"y":151.1603651085,"x":418},"b474bcc9-9d4a-4ecf-8e28-c864bc9e1021":{"y":151.1603651085,"x":418},"1dc91c4a-5bd0-4086-9481-b16978f5926a":{"y":413.0940071326,"x":768.9612911807},"4eed8407-738b-4d1b-8a09-d30f81871ad4":{"y":413.0940071326,"x":768.9612911807}}},"description":"* [Kubernetes API](https:\/\/@@{Kubernetes_Master.address[0]}@@:6443)\n* [Kubernetes Dashboard](https:\/\/@@{Kubernetes_Master.address[0]}@@:30443)"},"api_version":"3.0","metadata":{"last_update_time":"1558288651327063","owner_reference":{"kind":"user","uuid":"00000000-0000-0000-0000-000000000000","name":"admin"},"kind":"blueprint","uuid":"2e5b84e5-8473-435b-9429-7bf5f3623860","project_reference":{"kind":"project","name":"default","uuid":"209e0a42-6f2d-4999-9a9b-5aa705d25661"},"spec_version":48,"creation_time":"1558074212853767","name":"Kubernetes_v1_14"}}